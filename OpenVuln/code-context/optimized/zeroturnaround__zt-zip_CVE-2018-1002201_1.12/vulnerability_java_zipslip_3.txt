# Vulnerability: java/zipslip
## Message: Unsanitized archive entry, which may contain '..', is used in a [file system operation](1).
Unsanitized archive entry, which may contain '..', is used in a [file system operation](2).
Unsanitized archive entry, which may contain '..', is used in a [file system operation](3).
Unsanitized archive entry, which may contain '..', is used in a [file system operation](4).
Unsanitized archive entry, which may contain '..', is used in a [file system operation](5).
Unsanitized archive entry, which may contain '..', is used in a [file system operation](6).

## Code Flow 1

### Thread Flow 1

### Data Flow Step 1: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1258, Column 54
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1258:       String name = mapper.map(getUnrootedName(root, zipEntry.getName()));
```

### Data Flow Step 2: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1276, Column 49
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1276:     private String getUnrootedName(String root, String name) {
```

### Data Flow Step 3: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1277, Column 14
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1277:       return name.substring(root.length());
```

### Data Flow Step 4: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1277, Column 14
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1277:       return name.substring(root.length());
```

### Data Flow Step 5: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1258, Column 32
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1258:       String name = mapper.map(getUnrootedName(root, zipEntry.getName()));
```

### Data Flow Step 6: src/main/java/org/zeroturnaround/zip/IdentityNameMapper.java, Line 31, Column 21
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/IdentityNameMapper.java
```java
>>>   31:   public String map(String name) {
```

### Data Flow Step 7: src/main/java/org/zeroturnaround/zip/IdentityNameMapper.java, Line 32, Column 12
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/IdentityNameMapper.java
```java
>>>   32:     return name;
```

### Data Flow Step 8: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1258, Column 21
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1258:       String name = mapper.map(getUnrootedName(root, zipEntry.getName()));
```

**Intermediate code within method `process` (lines 1259-1266):**
```java
    1259:       if (name != null) {
    1260:         File file = new File(outputDir, name);
    1261:         if (zipEntry.isDirectory()) {
    1262:           FileUtils.forceMkdir(file);
    1263:         }
    1264:         else {
    1265:           FileUtils.forceMkdir(file.getParentFile());
    1266: 
    1267:           if (log.isDebugEnabled() && file.exists()) {
```

### Data Flow Step 9: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1267, Column 39
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1267:           if (log.isDebugEnabled() && file.exists()) {
```

## Code Flow 2

### Thread Flow 1

### Data Flow Step 1: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1258, Column 54
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1258:       String name = mapper.map(getUnrootedName(root, zipEntry.getName()));
```

### Data Flow Step 2: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1276, Column 49
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1276:     private String getUnrootedName(String root, String name) {
```

### Data Flow Step 3: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1277, Column 14
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1277:       return name.substring(root.length());
```

### Data Flow Step 4: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1277, Column 14
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1277:       return name.substring(root.length());
```

### Data Flow Step 5: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1258, Column 32
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1258:       String name = mapper.map(getUnrootedName(root, zipEntry.getName()));
```

### Data Flow Step 6: src/main/java/org/zeroturnaround/zip/IdentityNameMapper.java, Line 31, Column 21
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/IdentityNameMapper.java
```java
>>>   31:   public String map(String name) {
```

### Data Flow Step 7: src/main/java/org/zeroturnaround/zip/IdentityNameMapper.java, Line 32, Column 12
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/IdentityNameMapper.java
```java
>>>   32:     return name;
```

### Data Flow Step 8: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1258, Column 21
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1258:       String name = mapper.map(getUnrootedName(root, zipEntry.getName()));
```

**Intermediate code within method `process` (lines 1259-1270):**
```java
    1259:       if (name != null) {
    1260:         File file = new File(outputDir, name);
    1261:         if (zipEntry.isDirectory()) {
    1262:           FileUtils.forceMkdir(file);
    1263:         }
    1264:         else {
    1265:           FileUtils.forceMkdir(file.getParentFile());
    1266: 
    1267:           if (log.isDebugEnabled() && file.exists()) {
    1268:             log.debug("Overwriting file '{}'.", zipEntry.getName());
    1269:           }
    1270: 
    1271:           FileUtils.copy(in, file);
```

### Data Flow Step 9: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1271, Column 30
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1271:           FileUtils.copy(in, file);
```

### Data Flow Step 10: src/main/java/org/zeroturnaround/zip/commons/FileUtils.java, Line 53, Column 43
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/commons/FileUtils.java
```java
>>>   53:   public static void copy(InputStream in, File file) throws IOException {
```

### Data Flow Step 11: src/main/java/org/zeroturnaround/zip/commons/FileUtils.java, Line 54, Column 70
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/commons/FileUtils.java
```java
>>>   54:     OutputStream out = new BufferedOutputStream(new FileOutputStream(file));
```

## Code Flow 3

### Thread Flow 1

### Data Flow Step 1: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1258, Column 54
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1258:       String name = mapper.map(getUnrootedName(root, zipEntry.getName()));
```

### Data Flow Step 2: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1276, Column 49
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1276:     private String getUnrootedName(String root, String name) {
```

### Data Flow Step 3: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1277, Column 14
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1277:       return name.substring(root.length());
```

### Data Flow Step 4: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1277, Column 14
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1277:       return name.substring(root.length());
```

### Data Flow Step 5: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1258, Column 32
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1258:       String name = mapper.map(getUnrootedName(root, zipEntry.getName()));
```

### Data Flow Step 6: src/main/java/org/zeroturnaround/zip/IdentityNameMapper.java, Line 31, Column 21
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/IdentityNameMapper.java
```java
>>>   31:   public String map(String name) {
```

### Data Flow Step 7: src/main/java/org/zeroturnaround/zip/IdentityNameMapper.java, Line 32, Column 12
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/IdentityNameMapper.java
```java
>>>   32:     return name;
```

### Data Flow Step 8: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1258, Column 21
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1258:       String name = mapper.map(getUnrootedName(root, zipEntry.getName()));
```

**Intermediate code within method `process` (lines 1259-1261):**
```java
    1259:       if (name != null) {
    1260:         File file = new File(outputDir, name);
    1261:         if (zipEntry.isDirectory()) {
    1262:           FileUtils.forceMkdir(file);
```

### Data Flow Step 9: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1262, Column 32
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1262:           FileUtils.forceMkdir(file);
```

### Data Flow Step 10: src/main/java/org/zeroturnaround/zip/commons/FileUtilsV2_2.java, Line 880, Column 33
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/commons/FileUtilsV2_2.java
```java
>>>  880:   public static void forceMkdir(File directory) throws IOException {
```

### Data Flow Step 11: src/main/java/org/zeroturnaround/zip/commons/FileUtilsV2_2.java, Line 881, Column 9
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/commons/FileUtilsV2_2.java
```java
>>>  881:     if (directory.exists()) {
```

## Code Flow 4

### Thread Flow 1

### Data Flow Step 1: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1258, Column 54
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1258:       String name = mapper.map(getUnrootedName(root, zipEntry.getName()));
```

### Data Flow Step 2: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1276, Column 49
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1276:     private String getUnrootedName(String root, String name) {
```

### Data Flow Step 3: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1277, Column 14
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1277:       return name.substring(root.length());
```

### Data Flow Step 4: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1277, Column 14
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1277:       return name.substring(root.length());
```

### Data Flow Step 5: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1258, Column 32
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1258:       String name = mapper.map(getUnrootedName(root, zipEntry.getName()));
```

### Data Flow Step 6: src/main/java/org/zeroturnaround/zip/IdentityNameMapper.java, Line 31, Column 21
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/IdentityNameMapper.java
```java
>>>   31:   public String map(String name) {
```

### Data Flow Step 7: src/main/java/org/zeroturnaround/zip/IdentityNameMapper.java, Line 32, Column 12
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/IdentityNameMapper.java
```java
>>>   32:     return name;
```

### Data Flow Step 8: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1258, Column 21
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1258:       String name = mapper.map(getUnrootedName(root, zipEntry.getName()));
```

**Intermediate code within method `process` (lines 1259-1261):**
```java
    1259:       if (name != null) {
    1260:         File file = new File(outputDir, name);
    1261:         if (zipEntry.isDirectory()) {
    1262:           FileUtils.forceMkdir(file);
```

### Data Flow Step 9: src/main/java/org/zeroturnaround/zip/ZipUtil.java, Line 1262, Column 32
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/ZipUtil.java
```java
>>> 1262:           FileUtils.forceMkdir(file);
```

### Data Flow Step 10: src/main/java/org/zeroturnaround/zip/commons/FileUtilsV2_2.java, Line 880, Column 33
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/commons/FileUtilsV2_2.java
```java
>>>  880:   public static void forceMkdir(File directory) throws IOException {
```

**Intermediate code within method `forceMkdir` (lines 881-881):**
```java
     881:     if (directory.exists()) {
     882:       if (!directory.isDirectory()) {
```

### Data Flow Step 11: src/main/java/org/zeroturnaround/zip/commons/FileUtilsV2_2.java, Line 882, Column 12
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/commons/FileUtilsV2_2.java
```java
>>>  882:       if (!directory.isDirectory()) {
```
