# Vulnerability: java/path-injection
## Message: This path depends on a [user-provided value](1).
This path depends on a [user-provided value](2).
This path depends on a [user-provided value](3).
This path depends on a [user-provided value](4).
This path depends on a [user-provided value](5).
This path depends on a [user-provided value](6).
This path depends on a [user-provided value](7).
This path depends on a [user-provided value](8).
This path depends on a [user-provided value](9).
This path depends on a [user-provided value](10).
This path depends on a [user-provided value](11).
This path depends on a [user-provided value](12).
This path depends on a [user-provided value](13).
This path depends on a [user-provided value](14).

## Code Flow 1

### Thread Flow 1

### Data Flow Step 1: servlet/src/main/java/io/undertow/servlet/handlers/DefaultServlet.java, Line 302, Column 24
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/DefaultServlet.java
```java
     297:         if (request.getDispatcherType() == DispatcherType.INCLUDE && request.getAttribute(RequestDispatcher.INCLUDE_REQUEST_URI) != null) {
     298:             pathInfo = (String) request.getAttribute(RequestDispatcher.INCLUDE_PATH_INFO);
     299:             servletPath = (String) request.getAttribute(RequestDispatcher.INCLUDE_SERVLET_PATH);
     300: 
     301:         } else {
>>>  302:             pathInfo = request.getPathInfo();
     303:             servletPath = request.getServletPath();
     304:         }
     305:         String result = pathInfo;
     306:         if (result == null) {
     307:             result = servletPath;
```

### Data Flow Step 2: servlet/src/main/java/io/undertow/servlet/handlers/DefaultServlet.java, Line 314, Column 16
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/DefaultServlet.java
```java
     309:             result = servletPath + pathInfo;
     310:         }
     311:         if ((result == null) || (result.equals(""))) {
     312:             result = "/";
     313:         }
>>>  314:         return result;
     315: 
     316:     }
     317: 
     318:     private boolean isAllowed(String path) {
     319:         if (!path.isEmpty()) {
```

### Data Flow Step 3: servlet/src/main/java/io/undertow/servlet/handlers/DefaultServlet.java, Line 129, Column 29
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/DefaultServlet.java
```java
     124:         }
     125:     }
     126: 
     127:     @Override
     128:     protected void doGet(final HttpServletRequest req, final HttpServletResponse resp) throws ServletException, IOException {
>>>  129:         final String path = getPath(req);
     130:         if (!isAllowed(path)) {
     131:             resp.sendError(404);
     132:             return;
     133:         }
     134:         final Resource resource = resourceManager.getResource(path);
```

### Data Flow Step 4: servlet/src/main/java/io/undertow/servlet/handlers/DefaultServlet.java, Line 134, Column 63
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/DefaultServlet.java
```java
     129:         final String path = getPath(req);
     130:         if (!isAllowed(path)) {
     131:             resp.sendError(404);
     132:             return;
     133:         }
>>>  134:         final Resource resource = resourceManager.getResource(path);
     135:         if (resource == null) {
     136:             if (req.getDispatcherType() == DispatcherType.INCLUDE) {
     137:                 //servlet 9.3
     138:                 throw new FileNotFoundException(path);
     139:             } else {
```

### Data Flow Step 5: core/src/main/java/io/undertow/server/handlers/resource/ClassPathResourceManager.java, Line 42, Column 33
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/core/src/main/java/io/undertow/server/handlers/resource/ClassPathResourceManager.java
```java
      37:     public ClassPathResourceManager(final ClassLoader classLoader) {
      38:         this(classLoader, "");
      39:     }
      40: 
      41:     @Override
>>>   42:     public Resource getResource(final String path) throws IOException {
      43:         String modPath = path;
      44:         if(modPath.startsWith("/")) {
      45:             modPath = path.substring(1);
      46:         }
      47:         final String realPath = prefix + modPath;
```

### Data Flow Step 6: core/src/main/java/io/undertow/server/handlers/resource/ClassPathResourceManager.java, Line 48, Column 54
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/core/src/main/java/io/undertow/server/handlers/resource/ClassPathResourceManager.java
```java
      43:         String modPath = path;
      44:         if(modPath.startsWith("/")) {
      45:             modPath = path.substring(1);
      46:         }
      47:         final String realPath = prefix + modPath;
>>>   48:         final URL resource = classLoader.getResource(realPath);
      49:         if(resource == null) {
      50:             return null;
      51:         } else {
      52:             return new URLResource(resource, resource.openConnection(), path);
      53:         }
```

## Code Flow 2

### Thread Flow 1

### Data Flow Step 1: servlet/src/main/java/io/undertow/servlet/handlers/DefaultServlet.java, Line 303, Column 27
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/DefaultServlet.java
```java
     298:             pathInfo = (String) request.getAttribute(RequestDispatcher.INCLUDE_PATH_INFO);
     299:             servletPath = (String) request.getAttribute(RequestDispatcher.INCLUDE_SERVLET_PATH);
     300: 
     301:         } else {
     302:             pathInfo = request.getPathInfo();
>>>  303:             servletPath = request.getServletPath();
     304:         }
     305:         String result = pathInfo;
     306:         if (result == null) {
     307:             result = servletPath;
     308:         } else if(resolveAgainstContextRoot) {
```

### Data Flow Step 2: servlet/src/main/java/io/undertow/servlet/handlers/DefaultServlet.java, Line 314, Column 16
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/DefaultServlet.java
```java
     309:             result = servletPath + pathInfo;
     310:         }
     311:         if ((result == null) || (result.equals(""))) {
     312:             result = "/";
     313:         }
>>>  314:         return result;
     315: 
     316:     }
     317: 
     318:     private boolean isAllowed(String path) {
     319:         if (!path.isEmpty()) {
```

### Data Flow Step 3: servlet/src/main/java/io/undertow/servlet/handlers/DefaultServlet.java, Line 129, Column 29
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/DefaultServlet.java
```java
     124:         }
     125:     }
     126: 
     127:     @Override
     128:     protected void doGet(final HttpServletRequest req, final HttpServletResponse resp) throws ServletException, IOException {
>>>  129:         final String path = getPath(req);
     130:         if (!isAllowed(path)) {
     131:             resp.sendError(404);
     132:             return;
     133:         }
     134:         final Resource resource = resourceManager.getResource(path);
```

### Data Flow Step 4: servlet/src/main/java/io/undertow/servlet/handlers/DefaultServlet.java, Line 134, Column 63
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/DefaultServlet.java
```java
     129:         final String path = getPath(req);
     130:         if (!isAllowed(path)) {
     131:             resp.sendError(404);
     132:             return;
     133:         }
>>>  134:         final Resource resource = resourceManager.getResource(path);
     135:         if (resource == null) {
     136:             if (req.getDispatcherType() == DispatcherType.INCLUDE) {
     137:                 //servlet 9.3
     138:                 throw new FileNotFoundException(path);
     139:             } else {
```

### Data Flow Step 5: core/src/main/java/io/undertow/server/handlers/resource/ClassPathResourceManager.java, Line 42, Column 33
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/core/src/main/java/io/undertow/server/handlers/resource/ClassPathResourceManager.java
```java
      37:     public ClassPathResourceManager(final ClassLoader classLoader) {
      38:         this(classLoader, "");
      39:     }
      40: 
      41:     @Override
>>>   42:     public Resource getResource(final String path) throws IOException {
      43:         String modPath = path;
      44:         if(modPath.startsWith("/")) {
      45:             modPath = path.substring(1);
      46:         }
      47:         final String realPath = prefix + modPath;
```

### Data Flow Step 6: core/src/main/java/io/undertow/server/handlers/resource/ClassPathResourceManager.java, Line 48, Column 54
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/core/src/main/java/io/undertow/server/handlers/resource/ClassPathResourceManager.java
```java
      43:         String modPath = path;
      44:         if(modPath.startsWith("/")) {
      45:             modPath = path.substring(1);
      46:         }
      47:         final String realPath = prefix + modPath;
>>>   48:         final URL resource = classLoader.getResource(realPath);
      49:         if(resource == null) {
      50:             return null;
      51:         } else {
      52:             return new URLResource(resource, resource.openConnection(), path);
      53:         }
```

## Code Flow 3

### Thread Flow 1

### Data Flow Step 1: servlet/src/main/java/io/undertow/servlet/handlers/ServletInitialHandler.java, Line 198, Column 69
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletInitialHandler.java
```java
     193:             relative = request.getServletPath();
     194:         } else {
     195:             relative = request.getServletPath() + request.getPathInfo();
     196:         }
     197:         exchange.setRelativePath(relative);
>>>  198:         final ServletPathMatch info = paths.getServletHandlerByPath(request.getServletPath());
     199:         final HttpServletResponseImpl oResponse = new HttpServletResponseImpl(exchange, servletContext);
     200:         final HttpServletRequestImpl oRequest = new HttpServletRequestImpl(exchange, servletContext);
     201:         final ServletRequestContext servletRequestContext = new ServletRequestContext(servletContext.getDeployment(), oRequest, oResponse, info);
     202:         servletRequestContext.setServletRequest(request);
     203:         servletRequestContext.setServletResponse(response);
```

### Data Flow Step 2: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java, Line 74, Column 53
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java
```java
      69: 
      70:     public ServletChain getServletHandlerByName(final String name) {
      71:         return getData().getServletHandlerByName(name);
      72:     }
      73: 
>>>   74:     public ServletPathMatch getServletHandlerByPath(final String path) {
      75:         ServletPathMatch match = getData().getServletHandlerByPath(path);
      76:         if (!match.isRequiredWelcomeFileMatch()) {
      77:             return match;
      78:         }
      79:         try {
```

### Data Flow Step 3: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java, Line 75, Column 68
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java
```java
      70:     public ServletChain getServletHandlerByName(final String name) {
      71:         return getData().getServletHandlerByName(name);
      72:     }
      73: 
      74:     public ServletPathMatch getServletHandlerByPath(final String path) {
>>>   75:         ServletPathMatch match = getData().getServletHandlerByPath(path);
      76:         if (!match.isRequiredWelcomeFileMatch()) {
      77:             return match;
      78:         }
      79:         try {
      80: 
```

### Data Flow Step 4: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java, Line 59, Column 53
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java
```java
      54: 
      55:     public ServletPathMatch getServletHandlerByExactPath(final String path) {
      56:         return exactPathMatches.get(path);
      57:     }
      58: 
>>>   59:     public ServletPathMatch getServletHandlerByPath(final String path) {
      60:         ServletPathMatch exact = exactPathMatches.get(path);
      61:         if (exact != null) {
      62:             return exact;
      63:         }
      64:         PathMatch match = prefixMatches.get(path);
```

### Data Flow Step 5: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java, Line 66, Column 32
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java
```java
      61:         if (exact != null) {
      62:             return exact;
      63:         }
      64:         PathMatch match = prefixMatches.get(path);
      65:         if (match != null) {
>>>   66:             return handleMatch(path, match, path.lastIndexOf('.'));
      67:         }
      68:         int extensionPos = -1;
      69:         for (int i = path.length() - 1; i >= 0; --i) {
      70:             final char c = path.charAt(i);
      71:              if (c == '/') {
```

### Data Flow Step 6: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java, Line 88, Column 42
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java
```java
      83:         //this should never happen
      84:         //as the default servlet is aways registered under /*
      85:         throw UndertowMessages.MESSAGES.servletPathMatchFailed();
      86:     }
      87: 
>>>   88:     private ServletPathMatch handleMatch(final String path, final PathMatch match, final int extensionPos) {
      89:         if (match.extensionMatches.isEmpty()) {
      90:             return new ServletPathMatch(match.defaultHandler, path, match.requireWelcomeFileMatch);
      91:         } else {
      92:             if (extensionPos == -1) {
      93:                 return new ServletPathMatch(match.defaultHandler, path, match.requireWelcomeFileMatch);
```

### Data Flow Step 7: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java, Line 90, Column 63
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java
```java
      85:         throw UndertowMessages.MESSAGES.servletPathMatchFailed();
      86:     }
      87: 
      88:     private ServletPathMatch handleMatch(final String path, final PathMatch match, final int extensionPos) {
      89:         if (match.extensionMatches.isEmpty()) {
>>>   90:             return new ServletPathMatch(match.defaultHandler, path, match.requireWelcomeFileMatch);
      91:         } else {
      92:             if (extensionPos == -1) {
      93:                 return new ServletPathMatch(match.defaultHandler, path, match.requireWelcomeFileMatch);
      94:             } else {
      95:                 final String ext;
```

### Data Flow Step 8: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java, Line 33, Column 56
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java
```java
      28:     private final boolean requiredWelcomeFileMatch;
      29:     private final ServletChain servletChain;
      30:     private final String rewriteLocation;
      31:     private final Type type;
      32: 
>>>   33:     public ServletPathMatch(final ServletChain target, final String uri, boolean requiredWelcomeFileMatch) {
      34:         this.servletChain = target;
      35:         this.requiredWelcomeFileMatch = requiredWelcomeFileMatch;
      36:         this.type = Type.NORMAL;
      37:         this.rewriteLocation = null;
      38:         if (target.getServletPath() == null) {
```

### Data Flow Step 9: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java, Line 40, Column 28
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java
```java
      35:         this.requiredWelcomeFileMatch = requiredWelcomeFileMatch;
      36:         this.type = Type.NORMAL;
      37:         this.rewriteLocation = null;
      38:         if (target.getServletPath() == null) {
      39:             //the default servlet is always considered to have matched the full path.
>>>   40:             this.matched = uri;
      41:             this.remaining = null;
      42:         } else {
      43:             this.matched = target.getServletPath();
      44:             if(uri.length() == matched.length()) {
      45:                 remaining = null;
```

### Data Flow Step 10: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java, Line 40, Column 13
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java
```java
      35:         this.requiredWelcomeFileMatch = requiredWelcomeFileMatch;
      36:         this.type = Type.NORMAL;
      37:         this.rewriteLocation = null;
      38:         if (target.getServletPath() == null) {
      39:             //the default servlet is always considered to have matched the full path.
>>>   40:             this.matched = uri;
      41:             this.remaining = null;
      42:         } else {
      43:             this.matched = target.getServletPath();
      44:             if(uri.length() == matched.length()) {
      45:                 remaining = null;
```

### Data Flow Step 11: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java, Line 33, Column 12
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java
```java
      28:     private final boolean requiredWelcomeFileMatch;
      29:     private final ServletChain servletChain;
      30:     private final String rewriteLocation;
      31:     private final Type type;
      32: 
>>>   33:     public ServletPathMatch(final ServletChain target, final String uri, boolean requiredWelcomeFileMatch) {
      34:         this.servletChain = target;
      35:         this.requiredWelcomeFileMatch = requiredWelcomeFileMatch;
      36:         this.type = Type.NORMAL;
      37:         this.rewriteLocation = null;
      38:         if (target.getServletPath() == null) {
```

### Data Flow Step 12: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java, Line 90, Column 20
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java
```java
      85:         throw UndertowMessages.MESSAGES.servletPathMatchFailed();
      86:     }
      87: 
      88:     private ServletPathMatch handleMatch(final String path, final PathMatch match, final int extensionPos) {
      89:         if (match.extensionMatches.isEmpty()) {
>>>   90:             return new ServletPathMatch(match.defaultHandler, path, match.requireWelcomeFileMatch);
      91:         } else {
      92:             if (extensionPos == -1) {
      93:                 return new ServletPathMatch(match.defaultHandler, path, match.requireWelcomeFileMatch);
      94:             } else {
      95:                 final String ext;
```

### Data Flow Step 13: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java, Line 66, Column 20
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java
```java
      61:         if (exact != null) {
      62:             return exact;
      63:         }
      64:         PathMatch match = prefixMatches.get(path);
      65:         if (match != null) {
>>>   66:             return handleMatch(path, match, path.lastIndexOf('.'));
      67:         }
      68:         int extensionPos = -1;
      69:         for (int i = path.length() - 1; i >= 0; --i) {
      70:             final char c = path.charAt(i);
      71:              if (c == '/') {
```

### Data Flow Step 14: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java, Line 75, Column 34
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java
```java
      70:     public ServletChain getServletHandlerByName(final String name) {
      71:         return getData().getServletHandlerByName(name);
      72:     }
      73: 
      74:     public ServletPathMatch getServletHandlerByPath(final String path) {
>>>   75:         ServletPathMatch match = getData().getServletHandlerByPath(path);
      76:         if (!match.isRequiredWelcomeFileMatch()) {
      77:             return match;
      78:         }
      79:         try {
      80: 
```

### Data Flow Step 15: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java, Line 81, Column 63
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java
```java
      76:         if (!match.isRequiredWelcomeFileMatch()) {
      77:             return match;
      78:         }
      79:         try {
      80: 
>>>   81:             String remaining = match.getRemaining() == null ? match.getMatched() : match.getRemaining();
      82:             Resource resource = resourceManager.getResource(remaining);
      83:             if (resource == null || !resource.isDirectory()) {
      84:                 return match;
      85:             }
      86: 
```

### Data Flow Step 16: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java, Line 61, Column 19
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java
```java
      56:         this.requiredWelcomeFileMatch = false;
      57:         this.type = type;
      58:         this.rewriteLocation = rewriteLocation;
      59:     }
      60: 
>>>   61:     public String getMatched() {
      62:         return matched;
      63:     }
      64: 
      65:     public String getRemaining() {
      66:         return remaining;
```

### Data Flow Step 17: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java, Line 62, Column 16
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java
```java
      57:         this.type = type;
      58:         this.rewriteLocation = rewriteLocation;
      59:     }
      60: 
      61:     public String getMatched() {
>>>   62:         return matched;
      63:     }
      64: 
      65:     public String getRemaining() {
      66:         return remaining;
      67:     }
```

### Data Flow Step 18: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java, Line 62, Column 16
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java
```java
      57:         this.type = type;
      58:         this.rewriteLocation = rewriteLocation;
      59:     }
      60: 
      61:     public String getMatched() {
>>>   62:         return matched;
      63:     }
      64: 
      65:     public String getRemaining() {
      66:         return remaining;
      67:     }
```

### Data Flow Step 19: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java, Line 81, Column 63
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java
```java
      76:         if (!match.isRequiredWelcomeFileMatch()) {
      77:             return match;
      78:         }
      79:         try {
      80: 
>>>   81:             String remaining = match.getRemaining() == null ? match.getMatched() : match.getRemaining();
      82:             Resource resource = resourceManager.getResource(remaining);
      83:             if (resource == null || !resource.isDirectory()) {
      84:                 return match;
      85:             }
      86: 
```

### Data Flow Step 20: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java, Line 82, Column 61
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java
```java
      77:             return match;
      78:         }
      79:         try {
      80: 
      81:             String remaining = match.getRemaining() == null ? match.getMatched() : match.getRemaining();
>>>   82:             Resource resource = resourceManager.getResource(remaining);
      83:             if (resource == null || !resource.isDirectory()) {
      84:                 return match;
      85:             }
      86: 
      87:             boolean pathEndsWithSlash = remaining.endsWith("/");
```

### Data Flow Step 21: core/src/main/java/io/undertow/server/handlers/resource/ClassPathResourceManager.java, Line 42, Column 33
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/core/src/main/java/io/undertow/server/handlers/resource/ClassPathResourceManager.java
```java
      37:     public ClassPathResourceManager(final ClassLoader classLoader) {
      38:         this(classLoader, "");
      39:     }
      40: 
      41:     @Override
>>>   42:     public Resource getResource(final String path) throws IOException {
      43:         String modPath = path;
      44:         if(modPath.startsWith("/")) {
      45:             modPath = path.substring(1);
      46:         }
      47:         final String realPath = prefix + modPath;
```

### Data Flow Step 22: core/src/main/java/io/undertow/server/handlers/resource/ClassPathResourceManager.java, Line 48, Column 54
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/core/src/main/java/io/undertow/server/handlers/resource/ClassPathResourceManager.java
```java
      43:         String modPath = path;
      44:         if(modPath.startsWith("/")) {
      45:             modPath = path.substring(1);
      46:         }
      47:         final String realPath = prefix + modPath;
>>>   48:         final URL resource = classLoader.getResource(realPath);
      49:         if(resource == null) {
      50:             return null;
      51:         } else {
      52:             return new URLResource(resource, resource.openConnection(), path);
      53:         }
```

## Code Flow 4

### Thread Flow 1

### Data Flow Step 1: servlet/src/main/java/io/undertow/servlet/spec/AsyncContextImpl.java, Line 154, Column 39
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/spec/AsyncContextImpl.java
```java
     149:         final HttpServletRequestImpl requestImpl = this.servletRequestContext.getOriginalRequest();
     150:         Deployment deployment = requestImpl.getServletContext().getDeployment();
     151: 
     152:         if (requestSupplied && servletRequest instanceof HttpServletRequest) {
     153:             ServletContainer container = deployment.getServletContainer();
>>>  154:             final String requestURI = ((HttpServletRequest) servletRequest).getRequestURI();
     155:             DeploymentManager context = container.getDeploymentByPath(requestURI);
     156:             if (context == null) {
     157:                 throw UndertowServletMessages.MESSAGES.couldNotFindContextToDispatchTo(requestImpl.getOriginalContextPath());
     158:             }
     159:             String toDispatch = requestURI.substring(context.getDeployment().getServletContext().getContextPath().length());
```

### Data Flow Step 2: servlet/src/main/java/io/undertow/servlet/spec/AsyncContextImpl.java, Line 159, Column 33
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/spec/AsyncContextImpl.java
```java
     154:             final String requestURI = ((HttpServletRequest) servletRequest).getRequestURI();
     155:             DeploymentManager context = container.getDeploymentByPath(requestURI);
     156:             if (context == null) {
     157:                 throw UndertowServletMessages.MESSAGES.couldNotFindContextToDispatchTo(requestImpl.getOriginalContextPath());
     158:             }
>>>  159:             String toDispatch = requestURI.substring(context.getDeployment().getServletContext().getContextPath().length());
     160:             String qs = ((HttpServletRequest) servletRequest).getQueryString();
     161:             if (qs != null && !qs.isEmpty()) {
     162:                 toDispatch = toDispatch + "?" + qs;
     163:             }
     164:             dispatch(context.getDeployment().getServletContext(), toDispatch);
```

### Data Flow Step 3: servlet/src/main/java/io/undertow/servlet/spec/AsyncContextImpl.java, Line 159, Column 33
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/spec/AsyncContextImpl.java
```java
     154:             final String requestURI = ((HttpServletRequest) servletRequest).getRequestURI();
     155:             DeploymentManager context = container.getDeploymentByPath(requestURI);
     156:             if (context == null) {
     157:                 throw UndertowServletMessages.MESSAGES.couldNotFindContextToDispatchTo(requestImpl.getOriginalContextPath());
     158:             }
>>>  159:             String toDispatch = requestURI.substring(context.getDeployment().getServletContext().getContextPath().length());
     160:             String qs = ((HttpServletRequest) servletRequest).getQueryString();
     161:             if (qs != null && !qs.isEmpty()) {
     162:                 toDispatch = toDispatch + "?" + qs;
     163:             }
     164:             dispatch(context.getDeployment().getServletContext(), toDispatch);
```

### Data Flow Step 4: servlet/src/main/java/io/undertow/servlet/spec/AsyncContextImpl.java, Line 164, Column 67
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/spec/AsyncContextImpl.java
```java
     159:             String toDispatch = requestURI.substring(context.getDeployment().getServletContext().getContextPath().length());
     160:             String qs = ((HttpServletRequest) servletRequest).getQueryString();
     161:             if (qs != null && !qs.isEmpty()) {
     162:                 toDispatch = toDispatch + "?" + qs;
     163:             }
>>>  164:             dispatch(context.getDeployment().getServletContext(), toDispatch);
     165: 
     166:         } else {
     167:             //original request
     168:             ServletContainer container = deployment.getServletContainer();
     169:             DeploymentManager context = container.getDeploymentByPath(requestImpl.getOriginalContextPath());
```

### Data Flow Step 5: servlet/src/main/java/io/undertow/servlet/spec/AsyncContextImpl.java, Line 203, Column 56
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/spec/AsyncContextImpl.java
```java
     198:     public void dispatch(final String path) {
     199:         dispatch(servletRequest.getServletContext(), path);
     200:     }
     201: 
     202:     @Override
>>>  203:     public void dispatch(final ServletContext context, final String path) {
     204: 
     205:         if (dispatched) {
     206:             throw UndertowServletMessages.MESSAGES.asyncRequestAlreadyDispatched();
     207:         }
     208: 
```

### Data Flow Step 6: servlet/src/main/java/io/undertow/servlet/spec/AsyncContextImpl.java, Line 255, Column 86
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/spec/AsyncContextImpl.java
```java
     250:         requestImpl.getExchange().setRequestURI(newRequestUri);
     251:         requestImpl.setServletContext((ServletContextImpl) context);
     252:         responseImpl.setServletContext((ServletContextImpl) context);
     253: 
     254:         Deployment deployment = requestImpl.getServletContext().getDeployment();
>>>  255:         ServletPathMatch info = deployment.getServletPaths().getServletHandlerByPath(newServletPath);
     256:         requestImpl.getExchange().getAttachment(ServletRequestContext.ATTACHMENT_KEY).setServletPathMatch(info);
     257: 
     258:         dispatchAsyncRequest(deployment.getServletDispatcher(), info, exchange);
     259:     }
     260: 
```

### Data Flow Step 7: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java, Line 74, Column 53
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java
```java
      69: 
      70:     public ServletChain getServletHandlerByName(final String name) {
      71:         return getData().getServletHandlerByName(name);
      72:     }
      73: 
>>>   74:     public ServletPathMatch getServletHandlerByPath(final String path) {
      75:         ServletPathMatch match = getData().getServletHandlerByPath(path);
      76:         if (!match.isRequiredWelcomeFileMatch()) {
      77:             return match;
      78:         }
      79:         try {
```

### Data Flow Step 8: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java, Line 75, Column 68
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java
```java
      70:     public ServletChain getServletHandlerByName(final String name) {
      71:         return getData().getServletHandlerByName(name);
      72:     }
      73: 
      74:     public ServletPathMatch getServletHandlerByPath(final String path) {
>>>   75:         ServletPathMatch match = getData().getServletHandlerByPath(path);
      76:         if (!match.isRequiredWelcomeFileMatch()) {
      77:             return match;
      78:         }
      79:         try {
      80: 
```

### Data Flow Step 9: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java, Line 59, Column 53
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java
```java
      54: 
      55:     public ServletPathMatch getServletHandlerByExactPath(final String path) {
      56:         return exactPathMatches.get(path);
      57:     }
      58: 
>>>   59:     public ServletPathMatch getServletHandlerByPath(final String path) {
      60:         ServletPathMatch exact = exactPathMatches.get(path);
      61:         if (exact != null) {
      62:             return exact;
      63:         }
      64:         PathMatch match = prefixMatches.get(path);
```

### Data Flow Step 10: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java, Line 66, Column 32
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java
```java
      61:         if (exact != null) {
      62:             return exact;
      63:         }
      64:         PathMatch match = prefixMatches.get(path);
      65:         if (match != null) {
>>>   66:             return handleMatch(path, match, path.lastIndexOf('.'));
      67:         }
      68:         int extensionPos = -1;
      69:         for (int i = path.length() - 1; i >= 0; --i) {
      70:             final char c = path.charAt(i);
      71:              if (c == '/') {
```

### Data Flow Step 11: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java, Line 88, Column 42
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java
```java
      83:         //this should never happen
      84:         //as the default servlet is aways registered under /*
      85:         throw UndertowMessages.MESSAGES.servletPathMatchFailed();
      86:     }
      87: 
>>>   88:     private ServletPathMatch handleMatch(final String path, final PathMatch match, final int extensionPos) {
      89:         if (match.extensionMatches.isEmpty()) {
      90:             return new ServletPathMatch(match.defaultHandler, path, match.requireWelcomeFileMatch);
      91:         } else {
      92:             if (extensionPos == -1) {
      93:                 return new ServletPathMatch(match.defaultHandler, path, match.requireWelcomeFileMatch);
```

### Data Flow Step 12: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java, Line 90, Column 63
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java
```java
      85:         throw UndertowMessages.MESSAGES.servletPathMatchFailed();
      86:     }
      87: 
      88:     private ServletPathMatch handleMatch(final String path, final PathMatch match, final int extensionPos) {
      89:         if (match.extensionMatches.isEmpty()) {
>>>   90:             return new ServletPathMatch(match.defaultHandler, path, match.requireWelcomeFileMatch);
      91:         } else {
      92:             if (extensionPos == -1) {
      93:                 return new ServletPathMatch(match.defaultHandler, path, match.requireWelcomeFileMatch);
      94:             } else {
      95:                 final String ext;
```

### Data Flow Step 13: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java, Line 33, Column 56
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java
```java
      28:     private final boolean requiredWelcomeFileMatch;
      29:     private final ServletChain servletChain;
      30:     private final String rewriteLocation;
      31:     private final Type type;
      32: 
>>>   33:     public ServletPathMatch(final ServletChain target, final String uri, boolean requiredWelcomeFileMatch) {
      34:         this.servletChain = target;
      35:         this.requiredWelcomeFileMatch = requiredWelcomeFileMatch;
      36:         this.type = Type.NORMAL;
      37:         this.rewriteLocation = null;
      38:         if (target.getServletPath() == null) {
```

### Data Flow Step 14: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java, Line 40, Column 28
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java
```java
      35:         this.requiredWelcomeFileMatch = requiredWelcomeFileMatch;
      36:         this.type = Type.NORMAL;
      37:         this.rewriteLocation = null;
      38:         if (target.getServletPath() == null) {
      39:             //the default servlet is always considered to have matched the full path.
>>>   40:             this.matched = uri;
      41:             this.remaining = null;
      42:         } else {
      43:             this.matched = target.getServletPath();
      44:             if(uri.length() == matched.length()) {
      45:                 remaining = null;
```

### Data Flow Step 15: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java, Line 40, Column 13
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java
```java
      35:         this.requiredWelcomeFileMatch = requiredWelcomeFileMatch;
      36:         this.type = Type.NORMAL;
      37:         this.rewriteLocation = null;
      38:         if (target.getServletPath() == null) {
      39:             //the default servlet is always considered to have matched the full path.
>>>   40:             this.matched = uri;
      41:             this.remaining = null;
      42:         } else {
      43:             this.matched = target.getServletPath();
      44:             if(uri.length() == matched.length()) {
      45:                 remaining = null;
```

### Data Flow Step 16: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java, Line 33, Column 12
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java
```java
      28:     private final boolean requiredWelcomeFileMatch;
      29:     private final ServletChain servletChain;
      30:     private final String rewriteLocation;
      31:     private final Type type;
      32: 
>>>   33:     public ServletPathMatch(final ServletChain target, final String uri, boolean requiredWelcomeFileMatch) {
      34:         this.servletChain = target;
      35:         this.requiredWelcomeFileMatch = requiredWelcomeFileMatch;
      36:         this.type = Type.NORMAL;
      37:         this.rewriteLocation = null;
      38:         if (target.getServletPath() == null) {
```

### Data Flow Step 17: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java, Line 90, Column 20
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java
```java
      85:         throw UndertowMessages.MESSAGES.servletPathMatchFailed();
      86:     }
      87: 
      88:     private ServletPathMatch handleMatch(final String path, final PathMatch match, final int extensionPos) {
      89:         if (match.extensionMatches.isEmpty()) {
>>>   90:             return new ServletPathMatch(match.defaultHandler, path, match.requireWelcomeFileMatch);
      91:         } else {
      92:             if (extensionPos == -1) {
      93:                 return new ServletPathMatch(match.defaultHandler, path, match.requireWelcomeFileMatch);
      94:             } else {
      95:                 final String ext;
```

### Data Flow Step 18: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java, Line 66, Column 20
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatchesData.java
```java
      61:         if (exact != null) {
      62:             return exact;
      63:         }
      64:         PathMatch match = prefixMatches.get(path);
      65:         if (match != null) {
>>>   66:             return handleMatch(path, match, path.lastIndexOf('.'));
      67:         }
      68:         int extensionPos = -1;
      69:         for (int i = path.length() - 1; i >= 0; --i) {
      70:             final char c = path.charAt(i);
      71:              if (c == '/') {
```

### Data Flow Step 19: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java, Line 75, Column 34
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java
```java
      70:     public ServletChain getServletHandlerByName(final String name) {
      71:         return getData().getServletHandlerByName(name);
      72:     }
      73: 
      74:     public ServletPathMatch getServletHandlerByPath(final String path) {
>>>   75:         ServletPathMatch match = getData().getServletHandlerByPath(path);
      76:         if (!match.isRequiredWelcomeFileMatch()) {
      77:             return match;
      78:         }
      79:         try {
      80: 
```

### Data Flow Step 20: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java, Line 81, Column 63
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java
```java
      76:         if (!match.isRequiredWelcomeFileMatch()) {
      77:             return match;
      78:         }
      79:         try {
      80: 
>>>   81:             String remaining = match.getRemaining() == null ? match.getMatched() : match.getRemaining();
      82:             Resource resource = resourceManager.getResource(remaining);
      83:             if (resource == null || !resource.isDirectory()) {
      84:                 return match;
      85:             }
      86: 
```

### Data Flow Step 21: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java, Line 61, Column 19
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java
```java
      56:         this.requiredWelcomeFileMatch = false;
      57:         this.type = type;
      58:         this.rewriteLocation = rewriteLocation;
      59:     }
      60: 
>>>   61:     public String getMatched() {
      62:         return matched;
      63:     }
      64: 
      65:     public String getRemaining() {
      66:         return remaining;
```

### Data Flow Step 22: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java, Line 62, Column 16
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java
```java
      57:         this.type = type;
      58:         this.rewriteLocation = rewriteLocation;
      59:     }
      60: 
      61:     public String getMatched() {
>>>   62:         return matched;
      63:     }
      64: 
      65:     public String getRemaining() {
      66:         return remaining;
      67:     }
```

### Data Flow Step 23: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java, Line 62, Column 16
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatch.java
```java
      57:         this.type = type;
      58:         this.rewriteLocation = rewriteLocation;
      59:     }
      60: 
      61:     public String getMatched() {
>>>   62:         return matched;
      63:     }
      64: 
      65:     public String getRemaining() {
      66:         return remaining;
      67:     }
```

### Data Flow Step 24: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java, Line 81, Column 63
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java
```java
      76:         if (!match.isRequiredWelcomeFileMatch()) {
      77:             return match;
      78:         }
      79:         try {
      80: 
>>>   81:             String remaining = match.getRemaining() == null ? match.getMatched() : match.getRemaining();
      82:             Resource resource = resourceManager.getResource(remaining);
      83:             if (resource == null || !resource.isDirectory()) {
      84:                 return match;
      85:             }
      86: 
```

### Data Flow Step 25: servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java, Line 82, Column 61
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/servlet/src/main/java/io/undertow/servlet/handlers/ServletPathMatches.java
```java
      77:             return match;
      78:         }
      79:         try {
      80: 
      81:             String remaining = match.getRemaining() == null ? match.getMatched() : match.getRemaining();
>>>   82:             Resource resource = resourceManager.getResource(remaining);
      83:             if (resource == null || !resource.isDirectory()) {
      84:                 return match;
      85:             }
      86: 
      87:             boolean pathEndsWithSlash = remaining.endsWith("/");
```

### Data Flow Step 26: core/src/main/java/io/undertow/server/handlers/resource/ClassPathResourceManager.java, Line 42, Column 33
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/core/src/main/java/io/undertow/server/handlers/resource/ClassPathResourceManager.java
```java
      37:     public ClassPathResourceManager(final ClassLoader classLoader) {
      38:         this(classLoader, "");
      39:     }
      40: 
      41:     @Override
>>>   42:     public Resource getResource(final String path) throws IOException {
      43:         String modPath = path;
      44:         if(modPath.startsWith("/")) {
      45:             modPath = path.substring(1);
      46:         }
      47:         final String realPath = prefix + modPath;
```

### Data Flow Step 27: core/src/main/java/io/undertow/server/handlers/resource/ClassPathResourceManager.java, Line 48, Column 54
File: codeql-dbs/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/root/cwe-bench-java/project-sources/undertow-io__undertow_CVE-2014-7816_1.0.16.Final/core/src/main/java/io/undertow/server/handlers/resource/ClassPathResourceManager.java
```java
      43:         String modPath = path;
      44:         if(modPath.startsWith("/")) {
      45:             modPath = path.substring(1);
      46:         }
      47:         final String realPath = prefix + modPath;
>>>   48:         final URL resource = classLoader.getResource(realPath);
      49:         if(resource == null) {
      50:             return null;
      51:         } else {
      52:             return new URLResource(resource, resource.openConnection(), path);
      53:         }
```
