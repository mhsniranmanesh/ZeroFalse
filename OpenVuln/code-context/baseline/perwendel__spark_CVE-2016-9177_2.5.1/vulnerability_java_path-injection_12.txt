# Vulnerability: java/path-injection
## Message: This path depends on a [user-provided value](1).
This path depends on a [user-provided value](2).
This path depends on a [user-provided value](3).
This path depends on a [user-provided value](4).
This path depends on a [user-provided value](5).

## Code Flow 1

### Thread Flow 1

### Data Flow Step 1: src/main/java/spark/resource/JarResourceHandler.java, Line 67, Column 31
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      62:         if (included) {
      63:             servletPath = (String) request.getAttribute(RequestDispatcher.INCLUDE_SERVLET_PATH);
      64:             pathInfo = (String) request.getAttribute(RequestDispatcher.INCLUDE_PATH_INFO);
      65: 
      66:             if (servletPath == null && pathInfo == null) {
>>>   67:                 servletPath = request.getServletPath();
      68:                 pathInfo = request.getPathInfo();
      69:             }
      70:         } else {
      71:             servletPath = request.getServletPath();
      72:             pathInfo = request.getPathInfo();
```

### Data Flow Step 2: src/main/java/spark/resource/JarResourceHandler.java, Line 75, Column 41
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      70:         } else {
      71:             servletPath = request.getServletPath();
      72:             pathInfo = request.getPathInfo();
      73:         }
      74: 
>>>   75:         String pathInContext = addPaths(servletPath, pathInfo);
      76:         return getResourceStream(pathInContext);
      77:     }
      78: 
      79:     private InputStream getResourceStream(String path) throws MalformedURLException {
      80:         if (path == null || !path.startsWith("/")) {
```

### Data Flow Step 3: src/main/java/spark/resource/AbstractResourceHandler.java, Line 80, Column 35
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/AbstractResourceHandler.java
```java
      75:      *
      76:      * @param segment1 URI path segment (should be encoded)
      77:      * @param segment2 URI path segment (should be encoded)
      78:      * @return Legally combined path segments.
      79:      */
>>>   80:     public static String addPaths(String segment1, String segment2) {
      81:         if (segment1 == null || segment1.length() == 0) {
      82:             if (segment1 != null && segment2 == null) {
      83:                 return segment1;
      84:             }
      85:             return segment2;
```

### Data Flow Step 4: src/main/java/spark/resource/AbstractResourceHandler.java, Line 83, Column 24
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/AbstractResourceHandler.java
```java
      78:      * @return Legally combined path segments.
      79:      */
      80:     public static String addPaths(String segment1, String segment2) {
      81:         if (segment1 == null || segment1.length() == 0) {
      82:             if (segment1 != null && segment2 == null) {
>>>   83:                 return segment1;
      84:             }
      85:             return segment2;
      86:         }
      87:         if (segment2 == null || segment2.length() == 0) {
      88:             return segment1;
```

### Data Flow Step 5: src/main/java/spark/resource/JarResourceHandler.java, Line 75, Column 32
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      70:         } else {
      71:             servletPath = request.getServletPath();
      72:             pathInfo = request.getPathInfo();
      73:         }
      74: 
>>>   75:         String pathInContext = addPaths(servletPath, pathInfo);
      76:         return getResourceStream(pathInContext);
      77:     }
      78: 
      79:     private InputStream getResourceStream(String path) throws MalformedURLException {
      80:         if (path == null || !path.startsWith("/")) {
```

### Data Flow Step 6: src/main/java/spark/resource/JarResourceHandler.java, Line 76, Column 34
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      71:             servletPath = request.getServletPath();
      72:             pathInfo = request.getPathInfo();
      73:         }
      74: 
      75:         String pathInContext = addPaths(servletPath, pathInfo);
>>>   76:         return getResourceStream(pathInContext);
      77:     }
      78: 
      79:     private InputStream getResourceStream(String path) throws MalformedURLException {
      80:         if (path == null || !path.startsWith("/")) {
      81:             throw new MalformedURLException(path);
```

### Data Flow Step 7: src/main/java/spark/resource/JarResourceHandler.java, Line 79, Column 43
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      74: 
      75:         String pathInContext = addPaths(servletPath, pathInfo);
      76:         return getResourceStream(pathInContext);
      77:     }
      78: 
>>>   79:     private InputStream getResourceStream(String path) throws MalformedURLException {
      80:         if (path == null || !path.startsWith("/")) {
      81:             throw new MalformedURLException(path);
      82:         }
      83: 
      84:         InputStream resourceStream = null;
```

### Data Flow Step 8: src/main/java/spark/resource/JarResourceHandler.java, Line 87, Column 38
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      82:         }
      83: 
      84:         InputStream resourceStream = null;
      85: 
      86:         try {
>>>   87:             path = UriPath.canonical(path);
      88:             path = addPaths(baseResource, path);
      89: 
      90:             if (isDirectory(path)) {
      91:                 if (welcomeFileConfigured()) {
      92:                     path = addPaths(path, welcomeFile);
```

### Data Flow Step 9: src/main/java/spark/resource/UriPath.java, Line 32, Column 36
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/UriPath.java
```java
      27:      * if the path tries to .. above its root.
      28:      *
      29:      * @param path the path to convert
      30:      * @return path or null.
      31:      */
>>>   32:     public static String canonical(String path) {
      33:         if (path == null || path.length() == 0) {
      34:             return path;
      35:         }
      36: 
      37:         int end = path.length();
```

### Data Flow Step 10: src/main/java/spark/resource/UriPath.java, Line 34, Column 20
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/UriPath.java
```java
      29:      * @param path the path to convert
      30:      * @return path or null.
      31:      */
      32:     public static String canonical(String path) {
      33:         if (path == null || path.length() == 0) {
>>>   34:             return path;
      35:         }
      36: 
      37:         int end = path.length();
      38:         int start = path.lastIndexOf('/', end);
      39: 
```

### Data Flow Step 11: src/main/java/spark/resource/JarResourceHandler.java, Line 87, Column 20
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      82:         }
      83: 
      84:         InputStream resourceStream = null;
      85: 
      86:         try {
>>>   87:             path = UriPath.canonical(path);
      88:             path = addPaths(baseResource, path);
      89: 
      90:             if (isDirectory(path)) {
      91:                 if (welcomeFileConfigured()) {
      92:                     path = addPaths(path, welcomeFile);
```

### Data Flow Step 12: src/main/java/spark/resource/JarResourceHandler.java, Line 88, Column 43
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      83: 
      84:         InputStream resourceStream = null;
      85: 
      86:         try {
      87:             path = UriPath.canonical(path);
>>>   88:             path = addPaths(baseResource, path);
      89: 
      90:             if (isDirectory(path)) {
      91:                 if (welcomeFileConfigured()) {
      92:                     path = addPaths(path, welcomeFile);
      93:                     resourceStream = loadStream(path);
```

### Data Flow Step 13: src/main/java/spark/resource/AbstractResourceHandler.java, Line 80, Column 52
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/AbstractResourceHandler.java
```java
      75:      *
      76:      * @param segment1 URI path segment (should be encoded)
      77:      * @param segment2 URI path segment (should be encoded)
      78:      * @return Legally combined path segments.
      79:      */
>>>   80:     public static String addPaths(String segment1, String segment2) {
      81:         if (segment1 == null || segment1.length() == 0) {
      82:             if (segment1 != null && segment2 == null) {
      83:                 return segment1;
      84:             }
      85:             return segment2;
```

### Data Flow Step 14: src/main/java/spark/resource/AbstractResourceHandler.java, Line 85, Column 20
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/AbstractResourceHandler.java
```java
      80:     public static String addPaths(String segment1, String segment2) {
      81:         if (segment1 == null || segment1.length() == 0) {
      82:             if (segment1 != null && segment2 == null) {
      83:                 return segment1;
      84:             }
>>>   85:             return segment2;
      86:         }
      87:         if (segment2 == null || segment2.length() == 0) {
      88:             return segment1;
      89:         }
      90: 
```

### Data Flow Step 15: src/main/java/spark/resource/JarResourceHandler.java, Line 88, Column 20
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      83: 
      84:         InputStream resourceStream = null;
      85: 
      86:         try {
      87:             path = UriPath.canonical(path);
>>>   88:             path = addPaths(baseResource, path);
      89: 
      90:             if (isDirectory(path)) {
      91:                 if (welcomeFileConfigured()) {
      92:                     path = addPaths(path, welcomeFile);
      93:                     resourceStream = loadStream(path);
```

### Data Flow Step 16: src/main/java/spark/resource/JarResourceHandler.java, Line 96, Column 45
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      91:                 if (welcomeFileConfigured()) {
      92:                     path = addPaths(path, welcomeFile);
      93:                     resourceStream = loadStream(path);
      94:                 }
      95:             } else {
>>>   96:                 resourceStream = loadStream(path);
      97:             }
      98: 
      99:         } catch (Exception e) {
     100:             if (LOG.isDebugEnabled()) {
     101:                 LOG.debug(e.getClass().getSimpleName() + " when trying to get resource. " + e.getMessage());
```

### Data Flow Step 17: src/main/java/spark/resource/JarResourceHandler.java, Line 108, Column 36
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
     103:         }
     104: 
     105:         return resourceStream;
     106:     }
     107: 
>>>  108:     private InputStream loadStream(String path) {
     109:         return JarResourceHandler.class.getResourceAsStream(path);
     110:     }
     111: 
     112:     private boolean welcomeFileConfigured() {
     113:         return welcomeFile != null;
```

### Data Flow Step 18: src/main/java/spark/resource/JarResourceHandler.java, Line 109, Column 61
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
     104: 
     105:         return resourceStream;
     106:     }
     107: 
     108:     private InputStream loadStream(String path) {
>>>  109:         return JarResourceHandler.class.getResourceAsStream(path);
     110:     }
     111: 
     112:     private boolean welcomeFileConfigured() {
     113:         return welcomeFile != null;
     114:     }
```

## Code Flow 2

### Thread Flow 1

### Data Flow Step 1: src/main/java/spark/resource/JarResourceHandler.java, Line 68, Column 28
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      63:             servletPath = (String) request.getAttribute(RequestDispatcher.INCLUDE_SERVLET_PATH);
      64:             pathInfo = (String) request.getAttribute(RequestDispatcher.INCLUDE_PATH_INFO);
      65: 
      66:             if (servletPath == null && pathInfo == null) {
      67:                 servletPath = request.getServletPath();
>>>   68:                 pathInfo = request.getPathInfo();
      69:             }
      70:         } else {
      71:             servletPath = request.getServletPath();
      72:             pathInfo = request.getPathInfo();
      73:         }
```

### Data Flow Step 2: src/main/java/spark/resource/JarResourceHandler.java, Line 75, Column 54
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      70:         } else {
      71:             servletPath = request.getServletPath();
      72:             pathInfo = request.getPathInfo();
      73:         }
      74: 
>>>   75:         String pathInContext = addPaths(servletPath, pathInfo);
      76:         return getResourceStream(pathInContext);
      77:     }
      78: 
      79:     private InputStream getResourceStream(String path) throws MalformedURLException {
      80:         if (path == null || !path.startsWith("/")) {
```

### Data Flow Step 3: src/main/java/spark/resource/AbstractResourceHandler.java, Line 80, Column 52
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/AbstractResourceHandler.java
```java
      75:      *
      76:      * @param segment1 URI path segment (should be encoded)
      77:      * @param segment2 URI path segment (should be encoded)
      78:      * @return Legally combined path segments.
      79:      */
>>>   80:     public static String addPaths(String segment1, String segment2) {
      81:         if (segment1 == null || segment1.length() == 0) {
      82:             if (segment1 != null && segment2 == null) {
      83:                 return segment1;
      84:             }
      85:             return segment2;
```

### Data Flow Step 4: src/main/java/spark/resource/AbstractResourceHandler.java, Line 85, Column 20
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/AbstractResourceHandler.java
```java
      80:     public static String addPaths(String segment1, String segment2) {
      81:         if (segment1 == null || segment1.length() == 0) {
      82:             if (segment1 != null && segment2 == null) {
      83:                 return segment1;
      84:             }
>>>   85:             return segment2;
      86:         }
      87:         if (segment2 == null || segment2.length() == 0) {
      88:             return segment1;
      89:         }
      90: 
```

### Data Flow Step 5: src/main/java/spark/resource/JarResourceHandler.java, Line 75, Column 32
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      70:         } else {
      71:             servletPath = request.getServletPath();
      72:             pathInfo = request.getPathInfo();
      73:         }
      74: 
>>>   75:         String pathInContext = addPaths(servletPath, pathInfo);
      76:         return getResourceStream(pathInContext);
      77:     }
      78: 
      79:     private InputStream getResourceStream(String path) throws MalformedURLException {
      80:         if (path == null || !path.startsWith("/")) {
```

### Data Flow Step 6: src/main/java/spark/resource/JarResourceHandler.java, Line 76, Column 34
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      71:             servletPath = request.getServletPath();
      72:             pathInfo = request.getPathInfo();
      73:         }
      74: 
      75:         String pathInContext = addPaths(servletPath, pathInfo);
>>>   76:         return getResourceStream(pathInContext);
      77:     }
      78: 
      79:     private InputStream getResourceStream(String path) throws MalformedURLException {
      80:         if (path == null || !path.startsWith("/")) {
      81:             throw new MalformedURLException(path);
```

### Data Flow Step 7: src/main/java/spark/resource/JarResourceHandler.java, Line 79, Column 43
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      74: 
      75:         String pathInContext = addPaths(servletPath, pathInfo);
      76:         return getResourceStream(pathInContext);
      77:     }
      78: 
>>>   79:     private InputStream getResourceStream(String path) throws MalformedURLException {
      80:         if (path == null || !path.startsWith("/")) {
      81:             throw new MalformedURLException(path);
      82:         }
      83: 
      84:         InputStream resourceStream = null;
```

### Data Flow Step 8: src/main/java/spark/resource/JarResourceHandler.java, Line 87, Column 38
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      82:         }
      83: 
      84:         InputStream resourceStream = null;
      85: 
      86:         try {
>>>   87:             path = UriPath.canonical(path);
      88:             path = addPaths(baseResource, path);
      89: 
      90:             if (isDirectory(path)) {
      91:                 if (welcomeFileConfigured()) {
      92:                     path = addPaths(path, welcomeFile);
```

### Data Flow Step 9: src/main/java/spark/resource/UriPath.java, Line 32, Column 36
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/UriPath.java
```java
      27:      * if the path tries to .. above its root.
      28:      *
      29:      * @param path the path to convert
      30:      * @return path or null.
      31:      */
>>>   32:     public static String canonical(String path) {
      33:         if (path == null || path.length() == 0) {
      34:             return path;
      35:         }
      36: 
      37:         int end = path.length();
```

### Data Flow Step 10: src/main/java/spark/resource/UriPath.java, Line 34, Column 20
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/UriPath.java
```java
      29:      * @param path the path to convert
      30:      * @return path or null.
      31:      */
      32:     public static String canonical(String path) {
      33:         if (path == null || path.length() == 0) {
>>>   34:             return path;
      35:         }
      36: 
      37:         int end = path.length();
      38:         int start = path.lastIndexOf('/', end);
      39: 
```

### Data Flow Step 11: src/main/java/spark/resource/JarResourceHandler.java, Line 87, Column 20
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      82:         }
      83: 
      84:         InputStream resourceStream = null;
      85: 
      86:         try {
>>>   87:             path = UriPath.canonical(path);
      88:             path = addPaths(baseResource, path);
      89: 
      90:             if (isDirectory(path)) {
      91:                 if (welcomeFileConfigured()) {
      92:                     path = addPaths(path, welcomeFile);
```

### Data Flow Step 12: src/main/java/spark/resource/JarResourceHandler.java, Line 88, Column 43
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      83: 
      84:         InputStream resourceStream = null;
      85: 
      86:         try {
      87:             path = UriPath.canonical(path);
>>>   88:             path = addPaths(baseResource, path);
      89: 
      90:             if (isDirectory(path)) {
      91:                 if (welcomeFileConfigured()) {
      92:                     path = addPaths(path, welcomeFile);
      93:                     resourceStream = loadStream(path);
```

### Data Flow Step 13: src/main/java/spark/resource/AbstractResourceHandler.java, Line 80, Column 52
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/AbstractResourceHandler.java
```java
      75:      *
      76:      * @param segment1 URI path segment (should be encoded)
      77:      * @param segment2 URI path segment (should be encoded)
      78:      * @return Legally combined path segments.
      79:      */
>>>   80:     public static String addPaths(String segment1, String segment2) {
      81:         if (segment1 == null || segment1.length() == 0) {
      82:             if (segment1 != null && segment2 == null) {
      83:                 return segment1;
      84:             }
      85:             return segment2;
```

### Data Flow Step 14: src/main/java/spark/resource/AbstractResourceHandler.java, Line 85, Column 20
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/AbstractResourceHandler.java
```java
      80:     public static String addPaths(String segment1, String segment2) {
      81:         if (segment1 == null || segment1.length() == 0) {
      82:             if (segment1 != null && segment2 == null) {
      83:                 return segment1;
      84:             }
>>>   85:             return segment2;
      86:         }
      87:         if (segment2 == null || segment2.length() == 0) {
      88:             return segment1;
      89:         }
      90: 
```

### Data Flow Step 15: src/main/java/spark/resource/JarResourceHandler.java, Line 88, Column 20
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      83: 
      84:         InputStream resourceStream = null;
      85: 
      86:         try {
      87:             path = UriPath.canonical(path);
>>>   88:             path = addPaths(baseResource, path);
      89: 
      90:             if (isDirectory(path)) {
      91:                 if (welcomeFileConfigured()) {
      92:                     path = addPaths(path, welcomeFile);
      93:                     resourceStream = loadStream(path);
```

### Data Flow Step 16: src/main/java/spark/resource/JarResourceHandler.java, Line 96, Column 45
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      91:                 if (welcomeFileConfigured()) {
      92:                     path = addPaths(path, welcomeFile);
      93:                     resourceStream = loadStream(path);
      94:                 }
      95:             } else {
>>>   96:                 resourceStream = loadStream(path);
      97:             }
      98: 
      99:         } catch (Exception e) {
     100:             if (LOG.isDebugEnabled()) {
     101:                 LOG.debug(e.getClass().getSimpleName() + " when trying to get resource. " + e.getMessage());
```

### Data Flow Step 17: src/main/java/spark/resource/JarResourceHandler.java, Line 108, Column 36
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
     103:         }
     104: 
     105:         return resourceStream;
     106:     }
     107: 
>>>  108:     private InputStream loadStream(String path) {
     109:         return JarResourceHandler.class.getResourceAsStream(path);
     110:     }
     111: 
     112:     private boolean welcomeFileConfigured() {
     113:         return welcomeFile != null;
```

### Data Flow Step 18: src/main/java/spark/resource/JarResourceHandler.java, Line 109, Column 61
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
     104: 
     105:         return resourceStream;
     106:     }
     107: 
     108:     private InputStream loadStream(String path) {
>>>  109:         return JarResourceHandler.class.getResourceAsStream(path);
     110:     }
     111: 
     112:     private boolean welcomeFileConfigured() {
     113:         return welcomeFile != null;
     114:     }
```

## Code Flow 3

### Thread Flow 1

### Data Flow Step 1: src/main/java/spark/resource/JarResourceHandler.java, Line 71, Column 27
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      66:             if (servletPath == null && pathInfo == null) {
      67:                 servletPath = request.getServletPath();
      68:                 pathInfo = request.getPathInfo();
      69:             }
      70:         } else {
>>>   71:             servletPath = request.getServletPath();
      72:             pathInfo = request.getPathInfo();
      73:         }
      74: 
      75:         String pathInContext = addPaths(servletPath, pathInfo);
      76:         return getResourceStream(pathInContext);
```

### Data Flow Step 2: src/main/java/spark/resource/JarResourceHandler.java, Line 75, Column 41
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      70:         } else {
      71:             servletPath = request.getServletPath();
      72:             pathInfo = request.getPathInfo();
      73:         }
      74: 
>>>   75:         String pathInContext = addPaths(servletPath, pathInfo);
      76:         return getResourceStream(pathInContext);
      77:     }
      78: 
      79:     private InputStream getResourceStream(String path) throws MalformedURLException {
      80:         if (path == null || !path.startsWith("/")) {
```

### Data Flow Step 3: src/main/java/spark/resource/AbstractResourceHandler.java, Line 80, Column 35
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/AbstractResourceHandler.java
```java
      75:      *
      76:      * @param segment1 URI path segment (should be encoded)
      77:      * @param segment2 URI path segment (should be encoded)
      78:      * @return Legally combined path segments.
      79:      */
>>>   80:     public static String addPaths(String segment1, String segment2) {
      81:         if (segment1 == null || segment1.length() == 0) {
      82:             if (segment1 != null && segment2 == null) {
      83:                 return segment1;
      84:             }
      85:             return segment2;
```

### Data Flow Step 4: src/main/java/spark/resource/AbstractResourceHandler.java, Line 83, Column 24
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/AbstractResourceHandler.java
```java
      78:      * @return Legally combined path segments.
      79:      */
      80:     public static String addPaths(String segment1, String segment2) {
      81:         if (segment1 == null || segment1.length() == 0) {
      82:             if (segment1 != null && segment2 == null) {
>>>   83:                 return segment1;
      84:             }
      85:             return segment2;
      86:         }
      87:         if (segment2 == null || segment2.length() == 0) {
      88:             return segment1;
```

### Data Flow Step 5: src/main/java/spark/resource/JarResourceHandler.java, Line 75, Column 32
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      70:         } else {
      71:             servletPath = request.getServletPath();
      72:             pathInfo = request.getPathInfo();
      73:         }
      74: 
>>>   75:         String pathInContext = addPaths(servletPath, pathInfo);
      76:         return getResourceStream(pathInContext);
      77:     }
      78: 
      79:     private InputStream getResourceStream(String path) throws MalformedURLException {
      80:         if (path == null || !path.startsWith("/")) {
```

### Data Flow Step 6: src/main/java/spark/resource/JarResourceHandler.java, Line 76, Column 34
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      71:             servletPath = request.getServletPath();
      72:             pathInfo = request.getPathInfo();
      73:         }
      74: 
      75:         String pathInContext = addPaths(servletPath, pathInfo);
>>>   76:         return getResourceStream(pathInContext);
      77:     }
      78: 
      79:     private InputStream getResourceStream(String path) throws MalformedURLException {
      80:         if (path == null || !path.startsWith("/")) {
      81:             throw new MalformedURLException(path);
```

### Data Flow Step 7: src/main/java/spark/resource/JarResourceHandler.java, Line 79, Column 43
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      74: 
      75:         String pathInContext = addPaths(servletPath, pathInfo);
      76:         return getResourceStream(pathInContext);
      77:     }
      78: 
>>>   79:     private InputStream getResourceStream(String path) throws MalformedURLException {
      80:         if (path == null || !path.startsWith("/")) {
      81:             throw new MalformedURLException(path);
      82:         }
      83: 
      84:         InputStream resourceStream = null;
```

### Data Flow Step 8: src/main/java/spark/resource/JarResourceHandler.java, Line 87, Column 38
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      82:         }
      83: 
      84:         InputStream resourceStream = null;
      85: 
      86:         try {
>>>   87:             path = UriPath.canonical(path);
      88:             path = addPaths(baseResource, path);
      89: 
      90:             if (isDirectory(path)) {
      91:                 if (welcomeFileConfigured()) {
      92:                     path = addPaths(path, welcomeFile);
```

### Data Flow Step 9: src/main/java/spark/resource/UriPath.java, Line 32, Column 36
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/UriPath.java
```java
      27:      * if the path tries to .. above its root.
      28:      *
      29:      * @param path the path to convert
      30:      * @return path or null.
      31:      */
>>>   32:     public static String canonical(String path) {
      33:         if (path == null || path.length() == 0) {
      34:             return path;
      35:         }
      36: 
      37:         int end = path.length();
```

### Data Flow Step 10: src/main/java/spark/resource/UriPath.java, Line 34, Column 20
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/UriPath.java
```java
      29:      * @param path the path to convert
      30:      * @return path or null.
      31:      */
      32:     public static String canonical(String path) {
      33:         if (path == null || path.length() == 0) {
>>>   34:             return path;
      35:         }
      36: 
      37:         int end = path.length();
      38:         int start = path.lastIndexOf('/', end);
      39: 
```

### Data Flow Step 11: src/main/java/spark/resource/JarResourceHandler.java, Line 87, Column 20
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      82:         }
      83: 
      84:         InputStream resourceStream = null;
      85: 
      86:         try {
>>>   87:             path = UriPath.canonical(path);
      88:             path = addPaths(baseResource, path);
      89: 
      90:             if (isDirectory(path)) {
      91:                 if (welcomeFileConfigured()) {
      92:                     path = addPaths(path, welcomeFile);
```

### Data Flow Step 12: src/main/java/spark/resource/JarResourceHandler.java, Line 88, Column 43
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      83: 
      84:         InputStream resourceStream = null;
      85: 
      86:         try {
      87:             path = UriPath.canonical(path);
>>>   88:             path = addPaths(baseResource, path);
      89: 
      90:             if (isDirectory(path)) {
      91:                 if (welcomeFileConfigured()) {
      92:                     path = addPaths(path, welcomeFile);
      93:                     resourceStream = loadStream(path);
```

### Data Flow Step 13: src/main/java/spark/resource/AbstractResourceHandler.java, Line 80, Column 52
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/AbstractResourceHandler.java
```java
      75:      *
      76:      * @param segment1 URI path segment (should be encoded)
      77:      * @param segment2 URI path segment (should be encoded)
      78:      * @return Legally combined path segments.
      79:      */
>>>   80:     public static String addPaths(String segment1, String segment2) {
      81:         if (segment1 == null || segment1.length() == 0) {
      82:             if (segment1 != null && segment2 == null) {
      83:                 return segment1;
      84:             }
      85:             return segment2;
```

### Data Flow Step 14: src/main/java/spark/resource/AbstractResourceHandler.java, Line 85, Column 20
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/AbstractResourceHandler.java
```java
      80:     public static String addPaths(String segment1, String segment2) {
      81:         if (segment1 == null || segment1.length() == 0) {
      82:             if (segment1 != null && segment2 == null) {
      83:                 return segment1;
      84:             }
>>>   85:             return segment2;
      86:         }
      87:         if (segment2 == null || segment2.length() == 0) {
      88:             return segment1;
      89:         }
      90: 
```

### Data Flow Step 15: src/main/java/spark/resource/JarResourceHandler.java, Line 88, Column 20
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      83: 
      84:         InputStream resourceStream = null;
      85: 
      86:         try {
      87:             path = UriPath.canonical(path);
>>>   88:             path = addPaths(baseResource, path);
      89: 
      90:             if (isDirectory(path)) {
      91:                 if (welcomeFileConfigured()) {
      92:                     path = addPaths(path, welcomeFile);
      93:                     resourceStream = loadStream(path);
```

### Data Flow Step 16: src/main/java/spark/resource/JarResourceHandler.java, Line 96, Column 45
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      91:                 if (welcomeFileConfigured()) {
      92:                     path = addPaths(path, welcomeFile);
      93:                     resourceStream = loadStream(path);
      94:                 }
      95:             } else {
>>>   96:                 resourceStream = loadStream(path);
      97:             }
      98: 
      99:         } catch (Exception e) {
     100:             if (LOG.isDebugEnabled()) {
     101:                 LOG.debug(e.getClass().getSimpleName() + " when trying to get resource. " + e.getMessage());
```

### Data Flow Step 17: src/main/java/spark/resource/JarResourceHandler.java, Line 108, Column 36
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
     103:         }
     104: 
     105:         return resourceStream;
     106:     }
     107: 
>>>  108:     private InputStream loadStream(String path) {
     109:         return JarResourceHandler.class.getResourceAsStream(path);
     110:     }
     111: 
     112:     private boolean welcomeFileConfigured() {
     113:         return welcomeFile != null;
```

### Data Flow Step 18: src/main/java/spark/resource/JarResourceHandler.java, Line 109, Column 61
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
     104: 
     105:         return resourceStream;
     106:     }
     107: 
     108:     private InputStream loadStream(String path) {
>>>  109:         return JarResourceHandler.class.getResourceAsStream(path);
     110:     }
     111: 
     112:     private boolean welcomeFileConfigured() {
     113:         return welcomeFile != null;
     114:     }
```

## Code Flow 4

### Thread Flow 1

### Data Flow Step 1: src/main/java/spark/resource/JarResourceHandler.java, Line 72, Column 24
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      67:                 servletPath = request.getServletPath();
      68:                 pathInfo = request.getPathInfo();
      69:             }
      70:         } else {
      71:             servletPath = request.getServletPath();
>>>   72:             pathInfo = request.getPathInfo();
      73:         }
      74: 
      75:         String pathInContext = addPaths(servletPath, pathInfo);
      76:         return getResourceStream(pathInContext);
      77:     }
```

### Data Flow Step 2: src/main/java/spark/resource/JarResourceHandler.java, Line 75, Column 54
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      70:         } else {
      71:             servletPath = request.getServletPath();
      72:             pathInfo = request.getPathInfo();
      73:         }
      74: 
>>>   75:         String pathInContext = addPaths(servletPath, pathInfo);
      76:         return getResourceStream(pathInContext);
      77:     }
      78: 
      79:     private InputStream getResourceStream(String path) throws MalformedURLException {
      80:         if (path == null || !path.startsWith("/")) {
```

### Data Flow Step 3: src/main/java/spark/resource/AbstractResourceHandler.java, Line 80, Column 52
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/AbstractResourceHandler.java
```java
      75:      *
      76:      * @param segment1 URI path segment (should be encoded)
      77:      * @param segment2 URI path segment (should be encoded)
      78:      * @return Legally combined path segments.
      79:      */
>>>   80:     public static String addPaths(String segment1, String segment2) {
      81:         if (segment1 == null || segment1.length() == 0) {
      82:             if (segment1 != null && segment2 == null) {
      83:                 return segment1;
      84:             }
      85:             return segment2;
```

### Data Flow Step 4: src/main/java/spark/resource/AbstractResourceHandler.java, Line 85, Column 20
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/AbstractResourceHandler.java
```java
      80:     public static String addPaths(String segment1, String segment2) {
      81:         if (segment1 == null || segment1.length() == 0) {
      82:             if (segment1 != null && segment2 == null) {
      83:                 return segment1;
      84:             }
>>>   85:             return segment2;
      86:         }
      87:         if (segment2 == null || segment2.length() == 0) {
      88:             return segment1;
      89:         }
      90: 
```

### Data Flow Step 5: src/main/java/spark/resource/JarResourceHandler.java, Line 75, Column 32
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      70:         } else {
      71:             servletPath = request.getServletPath();
      72:             pathInfo = request.getPathInfo();
      73:         }
      74: 
>>>   75:         String pathInContext = addPaths(servletPath, pathInfo);
      76:         return getResourceStream(pathInContext);
      77:     }
      78: 
      79:     private InputStream getResourceStream(String path) throws MalformedURLException {
      80:         if (path == null || !path.startsWith("/")) {
```

### Data Flow Step 6: src/main/java/spark/resource/JarResourceHandler.java, Line 76, Column 34
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      71:             servletPath = request.getServletPath();
      72:             pathInfo = request.getPathInfo();
      73:         }
      74: 
      75:         String pathInContext = addPaths(servletPath, pathInfo);
>>>   76:         return getResourceStream(pathInContext);
      77:     }
      78: 
      79:     private InputStream getResourceStream(String path) throws MalformedURLException {
      80:         if (path == null || !path.startsWith("/")) {
      81:             throw new MalformedURLException(path);
```

### Data Flow Step 7: src/main/java/spark/resource/JarResourceHandler.java, Line 79, Column 43
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      74: 
      75:         String pathInContext = addPaths(servletPath, pathInfo);
      76:         return getResourceStream(pathInContext);
      77:     }
      78: 
>>>   79:     private InputStream getResourceStream(String path) throws MalformedURLException {
      80:         if (path == null || !path.startsWith("/")) {
      81:             throw new MalformedURLException(path);
      82:         }
      83: 
      84:         InputStream resourceStream = null;
```

### Data Flow Step 8: src/main/java/spark/resource/JarResourceHandler.java, Line 87, Column 38
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      82:         }
      83: 
      84:         InputStream resourceStream = null;
      85: 
      86:         try {
>>>   87:             path = UriPath.canonical(path);
      88:             path = addPaths(baseResource, path);
      89: 
      90:             if (isDirectory(path)) {
      91:                 if (welcomeFileConfigured()) {
      92:                     path = addPaths(path, welcomeFile);
```

### Data Flow Step 9: src/main/java/spark/resource/UriPath.java, Line 32, Column 36
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/UriPath.java
```java
      27:      * if the path tries to .. above its root.
      28:      *
      29:      * @param path the path to convert
      30:      * @return path or null.
      31:      */
>>>   32:     public static String canonical(String path) {
      33:         if (path == null || path.length() == 0) {
      34:             return path;
      35:         }
      36: 
      37:         int end = path.length();
```

### Data Flow Step 10: src/main/java/spark/resource/UriPath.java, Line 34, Column 20
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/UriPath.java
```java
      29:      * @param path the path to convert
      30:      * @return path or null.
      31:      */
      32:     public static String canonical(String path) {
      33:         if (path == null || path.length() == 0) {
>>>   34:             return path;
      35:         }
      36: 
      37:         int end = path.length();
      38:         int start = path.lastIndexOf('/', end);
      39: 
```

### Data Flow Step 11: src/main/java/spark/resource/JarResourceHandler.java, Line 87, Column 20
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      82:         }
      83: 
      84:         InputStream resourceStream = null;
      85: 
      86:         try {
>>>   87:             path = UriPath.canonical(path);
      88:             path = addPaths(baseResource, path);
      89: 
      90:             if (isDirectory(path)) {
      91:                 if (welcomeFileConfigured()) {
      92:                     path = addPaths(path, welcomeFile);
```

### Data Flow Step 12: src/main/java/spark/resource/JarResourceHandler.java, Line 88, Column 43
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      83: 
      84:         InputStream resourceStream = null;
      85: 
      86:         try {
      87:             path = UriPath.canonical(path);
>>>   88:             path = addPaths(baseResource, path);
      89: 
      90:             if (isDirectory(path)) {
      91:                 if (welcomeFileConfigured()) {
      92:                     path = addPaths(path, welcomeFile);
      93:                     resourceStream = loadStream(path);
```

### Data Flow Step 13: src/main/java/spark/resource/AbstractResourceHandler.java, Line 80, Column 52
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/AbstractResourceHandler.java
```java
      75:      *
      76:      * @param segment1 URI path segment (should be encoded)
      77:      * @param segment2 URI path segment (should be encoded)
      78:      * @return Legally combined path segments.
      79:      */
>>>   80:     public static String addPaths(String segment1, String segment2) {
      81:         if (segment1 == null || segment1.length() == 0) {
      82:             if (segment1 != null && segment2 == null) {
      83:                 return segment1;
      84:             }
      85:             return segment2;
```

### Data Flow Step 14: src/main/java/spark/resource/AbstractResourceHandler.java, Line 85, Column 20
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/AbstractResourceHandler.java
```java
      80:     public static String addPaths(String segment1, String segment2) {
      81:         if (segment1 == null || segment1.length() == 0) {
      82:             if (segment1 != null && segment2 == null) {
      83:                 return segment1;
      84:             }
>>>   85:             return segment2;
      86:         }
      87:         if (segment2 == null || segment2.length() == 0) {
      88:             return segment1;
      89:         }
      90: 
```

### Data Flow Step 15: src/main/java/spark/resource/JarResourceHandler.java, Line 88, Column 20
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      83: 
      84:         InputStream resourceStream = null;
      85: 
      86:         try {
      87:             path = UriPath.canonical(path);
>>>   88:             path = addPaths(baseResource, path);
      89: 
      90:             if (isDirectory(path)) {
      91:                 if (welcomeFileConfigured()) {
      92:                     path = addPaths(path, welcomeFile);
      93:                     resourceStream = loadStream(path);
```

### Data Flow Step 16: src/main/java/spark/resource/JarResourceHandler.java, Line 96, Column 45
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
      91:                 if (welcomeFileConfigured()) {
      92:                     path = addPaths(path, welcomeFile);
      93:                     resourceStream = loadStream(path);
      94:                 }
      95:             } else {
>>>   96:                 resourceStream = loadStream(path);
      97:             }
      98: 
      99:         } catch (Exception e) {
     100:             if (LOG.isDebugEnabled()) {
     101:                 LOG.debug(e.getClass().getSimpleName() + " when trying to get resource. " + e.getMessage());
```

### Data Flow Step 17: src/main/java/spark/resource/JarResourceHandler.java, Line 108, Column 36
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
     103:         }
     104: 
     105:         return resourceStream;
     106:     }
     107: 
>>>  108:     private InputStream loadStream(String path) {
     109:         return JarResourceHandler.class.getResourceAsStream(path);
     110:     }
     111: 
     112:     private boolean welcomeFileConfigured() {
     113:         return welcomeFile != null;
```

### Data Flow Step 18: src/main/java/spark/resource/JarResourceHandler.java, Line 109, Column 61
File: codeql-dbs/perwendel__spark_CVE-2016-9177_2.5.1/root/cwe-bench-java/project-sources/perwendel__spark_CVE-2016-9177_2.5.1/src/main/java/spark/resource/JarResourceHandler.java
```java
     104: 
     105:         return resourceStream;
     106:     }
     107: 
     108:     private InputStream loadStream(String path) {
>>>  109:         return JarResourceHandler.class.getResourceAsStream(path);
     110:     }
     111: 
     112:     private boolean welcomeFileConfigured() {
     113:         return welcomeFile != null;
     114:     }
```
