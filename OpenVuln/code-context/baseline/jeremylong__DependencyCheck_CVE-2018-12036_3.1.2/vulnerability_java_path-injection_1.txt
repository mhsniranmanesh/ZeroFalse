# Vulnerability: java/path-injection
## Message: This path depends on a [user-provided value](1).

## Code Flow 1

### Thread Flow 1

### Data Flow Step 1: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 123, Column 67
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     118:                 os.flush();
     119:             }
     120: 
     121:             switch (conn.getResponseCode()) {
     122:                 case 200:
>>>  123:                     try (InputStream in = new BufferedInputStream(conn.getInputStream());
     124:                             JsonReader jsonReader = Json.createReader(in)) {
     125:                         final JsonArray array = jsonReader.readArray();
     126: 
     127:                         if (array != null) {
     128:                             for (int i = 0; i < array.size(); i++) {
```

### Data Flow Step 2: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 124, Column 71
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     119:             }
     120: 
     121:             switch (conn.getResponseCode()) {
     122:                 case 200:
     123:                     try (InputStream in = new BufferedInputStream(conn.getInputStream());
>>>  124:                             JsonReader jsonReader = Json.createReader(in)) {
     125:                         final JsonArray array = jsonReader.readArray();
     126: 
     127:                         if (array != null) {
     128:                             for (int i = 0; i < array.size(); i++) {
     129:                                 final JsonObject object = array.getJsonObject(i);
```

### Data Flow Step 3: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 124, Column 53
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     119:             }
     120: 
     121:             switch (conn.getResponseCode()) {
     122:                 case 200:
     123:                     try (InputStream in = new BufferedInputStream(conn.getInputStream());
>>>  124:                             JsonReader jsonReader = Json.createReader(in)) {
     125:                         final JsonArray array = jsonReader.readArray();
     126: 
     127:                         if (array != null) {
     128:                             for (int i = 0; i < array.size(); i++) {
     129:                                 final JsonObject object = array.getJsonObject(i);
```

### Data Flow Step 4: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 125, Column 49
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     120: 
     121:             switch (conn.getResponseCode()) {
     122:                 case 200:
     123:                     try (InputStream in = new BufferedInputStream(conn.getInputStream());
     124:                             JsonReader jsonReader = Json.createReader(in)) {
>>>  125:                         final JsonArray array = jsonReader.readArray();
     126: 
     127:                         if (array != null) {
     128:                             for (int i = 0; i < array.size(); i++) {
     129:                                 final JsonObject object = array.getJsonObject(i);
     130:                                 final Advisory advisory = new Advisory();
```

### Data Flow Step 5: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 125, Column 49
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     120: 
     121:             switch (conn.getResponseCode()) {
     122:                 case 200:
     123:                     try (InputStream in = new BufferedInputStream(conn.getInputStream());
     124:                             JsonReader jsonReader = Json.createReader(in)) {
>>>  125:                         final JsonArray array = jsonReader.readArray();
     126: 
     127:                         if (array != null) {
     128:                             for (int i = 0; i < array.size(); i++) {
     129:                                 final JsonObject object = array.getJsonObject(i);
     130:                                 final Advisory advisory = new Advisory();
```

### Data Flow Step 6: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 129, Column 59
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     124:                             JsonReader jsonReader = Json.createReader(in)) {
     125:                         final JsonArray array = jsonReader.readArray();
     126: 
     127:                         if (array != null) {
     128:                             for (int i = 0; i < array.size(); i++) {
>>>  129:                                 final JsonObject object = array.getJsonObject(i);
     130:                                 final Advisory advisory = new Advisory();
     131:                                 advisory.setId(object.getInt("id"));
     132:                                 advisory.setUpdatedAt(object.getString("updated_at", null));
     133:                                 advisory.setCreatedAt(object.getString("created_at", null));
     134:                                 advisory.setPublishDate(object.getString("publish_date", null));
```

### Data Flow Step 7: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 129, Column 59
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     124:                             JsonReader jsonReader = Json.createReader(in)) {
     125:                         final JsonArray array = jsonReader.readArray();
     126: 
     127:                         if (array != null) {
     128:                             for (int i = 0; i < array.size(); i++) {
>>>  129:                                 final JsonObject object = array.getJsonObject(i);
     130:                                 final Advisory advisory = new Advisory();
     131:                                 advisory.setId(object.getInt("id"));
     132:                                 advisory.setUpdatedAt(object.getString("updated_at", null));
     133:                                 advisory.setCreatedAt(object.getString("created_at", null));
     134:                                 advisory.setPublishDate(object.getString("publish_date", null));
```

### Data Flow Step 8: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 145, Column 52
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     140:                                     advisory.setCvssScore(Float.parseFloat(object.getJsonNumber("cvss_score").toString()));
     141:                                 } else {
     142:                                     advisory.setCvssScore(-1);
     143:                                 }
     144: 
>>>  145:                                 advisory.setModule(object.getString("module", null));
     146:                                 advisory.setVersion(object.getString("version", null));
     147:                                 advisory.setVulnerableVersions(object.getString("vulnerable_versions", null));
     148:                                 advisory.setPatchedVersions(object.getString("patched_versions", null));
     149:                                 advisory.setTitle(object.getString("title", null));
     150:                                 advisory.setAdvisory(object.getString("advisory", null));
```

### Data Flow Step 9: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 145, Column 52
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     140:                                     advisory.setCvssScore(Float.parseFloat(object.getJsonNumber("cvss_score").toString()));
     141:                                 } else {
     142:                                     advisory.setCvssScore(-1);
     143:                                 }
     144: 
>>>  145:                                 advisory.setModule(object.getString("module", null));
     146:                                 advisory.setVersion(object.getString("version", null));
     147:                                 advisory.setVulnerableVersions(object.getString("vulnerable_versions", null));
     148:                                 advisory.setPatchedVersions(object.getString("patched_versions", null));
     149:                                 advisory.setTitle(object.getString("title", null));
     150:                                 advisory.setAdvisory(object.getString("advisory", null));
```

### Data Flow Step 10: core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java, Line 270, Column 27
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java
```java
     265:     /**
     266:      * Sets the name of the Node module the advisory is for.
     267:      *
     268:      * @param module the name of the4 module
     269:      */
>>>  270:     public void setModule(String module) {
     271:         this.module = module;
     272:     }
     273: 
     274:     /**
     275:      * Returns the version of the Node module the advisory is for.
```

### Data Flow Step 11: core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java, Line 271, Column 23
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java
```java
     266:      * Sets the name of the Node module the advisory is for.
     267:      *
     268:      * @param module the name of the4 module
     269:      */
     270:     public void setModule(String module) {
>>>  271:         this.module = module;
     272:     }
     273: 
     274:     /**
     275:      * Returns the version of the Node module the advisory is for.
     276:      *
```

### Data Flow Step 12: core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java, Line 271, Column 9
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java
```java
     266:      * Sets the name of the Node module the advisory is for.
     267:      *
     268:      * @param module the name of the4 module
     269:      */
     270:     public void setModule(String module) {
>>>  271:         this.module = module;
     272:     }
     273: 
     274:     /**
     275:      * Returns the version of the Node module the advisory is for.
     276:      *
```

### Data Flow Step 13: core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java, Line 270, Column 17
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java
```java
     265:     /**
     266:      * Sets the name of the Node module the advisory is for.
     267:      *
     268:      * @param module the name of the4 module
     269:      */
>>>  270:     public void setModule(String module) {
     271:         this.module = module;
     272:     }
     273: 
     274:     /**
     275:      * Returns the version of the Node module the advisory is for.
```

### Data Flow Step 14: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 145, Column 33
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     140:                                     advisory.setCvssScore(Float.parseFloat(object.getJsonNumber("cvss_score").toString()));
     141:                                 } else {
     142:                                     advisory.setCvssScore(-1);
     143:                                 }
     144: 
>>>  145:                                 advisory.setModule(object.getString("module", null));
     146:                                 advisory.setVersion(object.getString("version", null));
     147:                                 advisory.setVulnerableVersions(object.getString("vulnerable_versions", null));
     148:                                 advisory.setPatchedVersions(object.getString("patched_versions", null));
     149:                                 advisory.setTitle(object.getString("title", null));
     150:                                 advisory.setAdvisory(object.getString("advisory", null));
```

### Data Flow Step 15: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 159, Column 44
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     154:                                 for (int j = 0; j < jsonPath.size(); j++) {
     155:                                     stringPath.add(jsonPath.getString(j));
     156:                                 }
     157:                                 advisory.setPath(stringPath.toArray(new String[stringPath.size()]));
     158: 
>>>  159:                                 result.add(advisory);
     160:                             }
     161:                         }
     162:                     }
     163:                     break;
     164: 
```

### Data Flow Step 16: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 159, Column 33
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     154:                                 for (int j = 0; j < jsonPath.size(); j++) {
     155:                                     stringPath.add(jsonPath.getString(j));
     156:                                 }
     157:                                 advisory.setPath(stringPath.toArray(new String[stringPath.size()]));
     158: 
>>>  159:                                 result.add(advisory);
     160:                             }
     161:                         }
     162:                     }
     163:                     break;
     164: 
```

### Data Flow Step 17: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 174, Column 20
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     169:                 default:
     170:                     LOGGER.debug("Could not connect to Node Security Platform. Received response code: {} {}",
     171:                             conn.getResponseCode(), conn.getResponseMessage());
     172:                     throw new IOException("Could not connect to Node Security Platform");
     173:             }
>>>  174:             return result;
     175:         } catch (IOException ex) {
     176:             if (ex instanceof javax.net.ssl.SSLHandshakeException
     177:                     && ex.getMessage().contains("unable to find valid certification path to requested target")) {
     178:                 final String msg = String.format("Unable to connect to '%s' - the Java trust store does not contain a trusted root for the cert. "
     179:                         + " Please see https://github.com/jeremylong/InstallCert for one method of updating the trusted certificates.", nspCheckUrl);
```

### Data Flow Step 18: core/src/main/java/org/owasp/dependencycheck/analyzer/NspAnalyzer.java, Line 178, Column 47
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/analyzer/NspAnalyzer.java
```java
     173:             // Create a new 'package' object that acts as a container for the sanitized package.json
     174:             final JsonObjectBuilder builder = Json.createObjectBuilder();
     175:             final JsonObject nspPayload = builder.add("package", sanitizedJson).build();
     176: 
     177:             // Submits the package payload to the nsp check service
>>>  178:             final List<Advisory> advisories = searcher.submitPackage(nspPayload);
     179: 
     180:             for (Advisory advisory : advisories) {
     181:                 /*
     182:                  * Create a new vulnerability out of the advisory returned by nsp.
     183:                  */
```

### Data Flow Step 19: core/src/main/java/org/owasp/dependencycheck/analyzer/NspAnalyzer.java, Line 180, Column 38
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/analyzer/NspAnalyzer.java
```java
     175:             final JsonObject nspPayload = builder.add("package", sanitizedJson).build();
     176: 
     177:             // Submits the package payload to the nsp check service
     178:             final List<Advisory> advisories = searcher.submitPackage(nspPayload);
     179: 
>>>  180:             for (Advisory advisory : advisories) {
     181:                 /*
     182:                  * Create a new vulnerability out of the advisory returned by nsp.
     183:                  */
     184:                 final Vulnerability vuln = new Vulnerability();
     185:                 vuln.setCvssScore(advisory.getCvssScore());
```

### Data Flow Step 20: core/src/main/java/org/owasp/dependencycheck/analyzer/NspAnalyzer.java, Line 185, Column 35
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/analyzer/NspAnalyzer.java
```java
     180:             for (Advisory advisory : advisories) {
     181:                 /*
     182:                  * Create a new vulnerability out of the advisory returned by nsp.
     183:                  */
     184:                 final Vulnerability vuln = new Vulnerability();
>>>  185:                 vuln.setCvssScore(advisory.getCvssScore());
     186:                 vuln.setDescription(advisory.getOverview());
     187:                 vuln.setName(String.valueOf(advisory.getId()));
     188:                 vuln.setSource(Vulnerability.Source.NSP);
     189:                 vuln.addReference(
     190:                         "NSP",
```

### Data Flow Step 21: core/src/main/java/org/owasp/dependencycheck/analyzer/NspAnalyzer.java, Line 208, Column 80
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/analyzer/NspAnalyzer.java
```java
     203:                 vs.setName(advisory.getModule() + ":" + advisory.getVulnerableVersions());
     204:                 vuln.setVulnerableSoftware(new HashSet<>(Arrays.asList(vs)));
     205: 
     206:                 final Dependency existing = findDependency(engine, advisory.getModule(), advisory.getVersion());
     207:                 if (existing == null) {
>>>  208:                     final Dependency nodeModule = createDependency(dependency, advisory.getModule(), advisory.getVersion(), "transitive");
     209:                     nodeModule.addVulnerability(vuln);
     210:                     engine.addDependency(nodeModule);
     211:                 } else {
     212:                     existing.addVulnerability(vuln);
     213:                 }
```

### Data Flow Step 22: core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java, Line 261, Column 19
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java
```java
     256:     /**
     257:      * Returns the name of the Node module the advisory is for.
     258:      *
     259:      * @return the name of the module
     260:      */
>>>  261:     public String getModule() {
     262:         return module;
     263:     }
     264: 
     265:     /**
     266:      * Sets the name of the Node module the advisory is for.
```

### Data Flow Step 23: core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java, Line 262, Column 16
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java
```java
     257:      * Returns the name of the Node module the advisory is for.
     258:      *
     259:      * @return the name of the module
     260:      */
     261:     public String getModule() {
>>>  262:         return module;
     263:     }
     264: 
     265:     /**
     266:      * Sets the name of the Node module the advisory is for.
     267:      *
```

### Data Flow Step 24: core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java, Line 262, Column 16
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java
```java
     257:      * Returns the name of the Node module the advisory is for.
     258:      *
     259:      * @return the name of the module
     260:      */
     261:     public String getModule() {
>>>  262:         return module;
     263:     }
     264: 
     265:     /**
     266:      * Sets the name of the Node module the advisory is for.
     267:      *
```

### Data Flow Step 25: core/src/main/java/org/owasp/dependencycheck/analyzer/NspAnalyzer.java, Line 208, Column 80
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/analyzer/NspAnalyzer.java
```java
     203:                 vs.setName(advisory.getModule() + ":" + advisory.getVulnerableVersions());
     204:                 vuln.setVulnerableSoftware(new HashSet<>(Arrays.asList(vs)));
     205: 
     206:                 final Dependency existing = findDependency(engine, advisory.getModule(), advisory.getVersion());
     207:                 if (existing == null) {
>>>  208:                     final Dependency nodeModule = createDependency(dependency, advisory.getModule(), advisory.getVersion(), "transitive");
     209:                     nodeModule.addVulnerability(vuln);
     210:                     engine.addDependency(nodeModule);
     211:                 } else {
     212:                     existing.addVulnerability(vuln);
     213:                 }
```

### Data Flow Step 26: core/src/main/java/org/owasp/dependencycheck/analyzer/AbstractNpmAnalyzer.java, Line 115, Column 66
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/analyzer/AbstractNpmAnalyzer.java
```java
     110:      * @param name the name of the dependency to create
     111:      * @param version the version of the dependency to create
     112:      * @param scope the scope of the dependency being created
     113:      * @return the generated dependency
     114:      */
>>>  115:     protected Dependency createDependency(Dependency dependency, String name, String version, String scope) {
     116:         final Dependency nodeModule = new Dependency(new File(dependency.getActualFile() + "?" + name), true);
     117:         nodeModule.setEcosystem(NPM_DEPENDENCY_ECOSYSTEM);
     118:         //this is virtual - the sha1 is purely for the hyperlink in the final html report
     119:         nodeModule.setSha1sum(Checksum.getSHA1Checksum(String.format("%s:%s", name, version)));
     120:         nodeModule.setMd5sum(Checksum.getMD5Checksum(String.format("%s:%s", name, version)));
```

### Data Flow Step 27: core/src/main/java/org/owasp/dependencycheck/analyzer/AbstractNpmAnalyzer.java, Line 116, Column 63
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/analyzer/AbstractNpmAnalyzer.java
```java
     111:      * @param version the version of the dependency to create
     112:      * @param scope the scope of the dependency being created
     113:      * @return the generated dependency
     114:      */
     115:     protected Dependency createDependency(Dependency dependency, String name, String version, String scope) {
>>>  116:         final Dependency nodeModule = new Dependency(new File(dependency.getActualFile() + "?" + name), true);
     117:         nodeModule.setEcosystem(NPM_DEPENDENCY_ECOSYSTEM);
     118:         //this is virtual - the sha1 is purely for the hyperlink in the final html report
     119:         nodeModule.setSha1sum(Checksum.getSHA1Checksum(String.format("%s:%s", name, version)));
     120:         nodeModule.setMd5sum(Checksum.getMD5Checksum(String.format("%s:%s", name, version)));
     121:         nodeModule.addEvidence(EvidenceType.PRODUCT, "package.json", "name", name, Confidence.HIGHEST);
```

### Data Flow Step 28: core/src/main/java/org/owasp/dependencycheck/analyzer/AbstractNpmAnalyzer.java, Line 116, Column 54
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/analyzer/AbstractNpmAnalyzer.java
```java
     111:      * @param version the version of the dependency to create
     112:      * @param scope the scope of the dependency being created
     113:      * @return the generated dependency
     114:      */
     115:     protected Dependency createDependency(Dependency dependency, String name, String version, String scope) {
>>>  116:         final Dependency nodeModule = new Dependency(new File(dependency.getActualFile() + "?" + name), true);
     117:         nodeModule.setEcosystem(NPM_DEPENDENCY_ECOSYSTEM);
     118:         //this is virtual - the sha1 is purely for the hyperlink in the final html report
     119:         nodeModule.setSha1sum(Checksum.getSHA1Checksum(String.format("%s:%s", name, version)));
     120:         nodeModule.setMd5sum(Checksum.getMD5Checksum(String.format("%s:%s", name, version)));
     121:         nodeModule.addEvidence(EvidenceType.PRODUCT, "package.json", "name", name, Confidence.HIGHEST);
```

### Data Flow Step 29: core/src/main/java/org/owasp/dependencycheck/dependency/Dependency.java, Line 185, Column 23
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/dependency/Dependency.java
```java
     180:      *
     181:      * @param file the File to create the dependency object from.
     182:      * @param isVirtual specifies if the dependency is virtual indicating the
     183:      * file doesn't actually exist.
     184:      */
>>>  185:     public Dependency(File file, boolean isVirtual) {
     186:         this();
     187:         this.isVirtual = isVirtual;
     188:         this.actualFilePath = file.getAbsolutePath();
     189:         this.filePath = this.actualFilePath;
     190:         this.fileName = file.getName();
```

### Data Flow Step 30: core/src/main/java/org/owasp/dependencycheck/dependency/Dependency.java, Line 192, Column 25
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/dependency/Dependency.java
```java
     187:         this.isVirtual = isVirtual;
     188:         this.actualFilePath = file.getAbsolutePath();
     189:         this.filePath = this.actualFilePath;
     190:         this.fileName = file.getName();
     191:         this.packagePath = filePath;
>>>  192:         determineHashes(file);
     193:     }
     194: 
     195:     /**
     196:      * Returns the file name of the dependency.
     197:      *
```

### Data Flow Step 31: core/src/main/java/org/owasp/dependencycheck/dependency/Dependency.java, Line 572, Column 34
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/dependency/Dependency.java
```java
     567:     /**
     568:      * Determines the SHA1 and MD5 sum for the given file.
     569:      *
     570:      * @param file the file to create checksums for
     571:      */
>>>  572:     private void determineHashes(File file) {
     573:         String md5 = null;
     574:         String sha1 = null;
     575:         if (isVirtual) {
     576:             return;
     577:         }
```

### Data Flow Step 32: core/src/main/java/org/owasp/dependencycheck/dependency/Dependency.java, Line 579, Column 43
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/dependency/Dependency.java
```java
     574:         String sha1 = null;
     575:         if (isVirtual) {
     576:             return;
     577:         }
     578:         try {
>>>  579:             md5 = Checksum.getMD5Checksum(file);
     580:             sha1 = Checksum.getSHA1Checksum(file);
     581:         } catch (IOException ex) {
     582:             LOGGER.warn("Unable to read '{}' to determine hashes.", file.getName());
     583:             LOGGER.debug("", ex);
     584:         } catch (NoSuchAlgorithmException ex) {
```

### Data Flow Step 33: utils/src/main/java/org/owasp/dependencycheck/utils/Checksum.java, Line 94, Column 41
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/utils/src/main/java/org/owasp/dependencycheck/utils/Checksum.java
```java
      89:      * @param file the file to generate the MD5 checksum
      90:      * @return the hex representation of the MD5 hash
      91:      * @throws IOException when the file passed in does not exist
      92:      * @throws NoSuchAlgorithmException when the MD5 algorithm is not available
      93:      */
>>>   94:     public static String getMD5Checksum(File file) throws IOException, NoSuchAlgorithmException {
      95:         final byte[] b = getChecksum("MD5", file);
      96:         return getHex(b);
      97:     }
      98: 
      99:     /**
```

### Data Flow Step 34: utils/src/main/java/org/owasp/dependencycheck/utils/Checksum.java, Line 95, Column 45
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/utils/src/main/java/org/owasp/dependencycheck/utils/Checksum.java
```java
      90:      * @return the hex representation of the MD5 hash
      91:      * @throws IOException when the file passed in does not exist
      92:      * @throws NoSuchAlgorithmException when the MD5 algorithm is not available
      93:      */
      94:     public static String getMD5Checksum(File file) throws IOException, NoSuchAlgorithmException {
>>>   95:         final byte[] b = getChecksum("MD5", file);
      96:         return getHex(b);
      97:     }
      98: 
      99:     /**
     100:      * Calculates the SHA1 checksum of a specified file.
```

### Data Flow Step 35: utils/src/main/java/org/owasp/dependencycheck/utils/Checksum.java, Line 68, Column 56
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/utils/src/main/java/org/owasp/dependencycheck/utils/Checksum.java
```java
      63:      * @return the checksum
      64:      * @throws IOException when the file does not exist
      65:      * @throws NoSuchAlgorithmException when an algorithm is specified that does
      66:      * not exist
      67:      */
>>>   68:     public static byte[] getChecksum(String algorithm, File file) throws NoSuchAlgorithmException, IOException {
      69:         final MessageDigest md = MessageDigest.getInstance(algorithm);
      70:         try (FileInputStream fis = new FileInputStream(file);
      71:                 FileChannel ch = fis.getChannel()) {
      72:             final ByteBuffer buf = ByteBuffer.allocateDirect(8192);
      73:             int b = ch.read(buf);
```

### Data Flow Step 36: utils/src/main/java/org/owasp/dependencycheck/utils/Checksum.java, Line 70, Column 56
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/utils/src/main/java/org/owasp/dependencycheck/utils/Checksum.java
```java
      65:      * @throws NoSuchAlgorithmException when an algorithm is specified that does
      66:      * not exist
      67:      */
      68:     public static byte[] getChecksum(String algorithm, File file) throws NoSuchAlgorithmException, IOException {
      69:         final MessageDigest md = MessageDigest.getInstance(algorithm);
>>>   70:         try (FileInputStream fis = new FileInputStream(file);
      71:                 FileChannel ch = fis.getChannel()) {
      72:             final ByteBuffer buf = ByteBuffer.allocateDirect(8192);
      73:             int b = ch.read(buf);
      74:             while (b != -1 && b != 0) {
      75:                 buf.flip();
```

## Code Flow 2

### Thread Flow 1

### Data Flow Step 1: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 123, Column 67
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     118:                 os.flush();
     119:             }
     120: 
     121:             switch (conn.getResponseCode()) {
     122:                 case 200:
>>>  123:                     try (InputStream in = new BufferedInputStream(conn.getInputStream());
     124:                             JsonReader jsonReader = Json.createReader(in)) {
     125:                         final JsonArray array = jsonReader.readArray();
     126: 
     127:                         if (array != null) {
     128:                             for (int i = 0; i < array.size(); i++) {
```

### Data Flow Step 2: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 123, Column 43
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     118:                 os.flush();
     119:             }
     120: 
     121:             switch (conn.getResponseCode()) {
     122:                 case 200:
>>>  123:                     try (InputStream in = new BufferedInputStream(conn.getInputStream());
     124:                             JsonReader jsonReader = Json.createReader(in)) {
     125:                         final JsonArray array = jsonReader.readArray();
     126: 
     127:                         if (array != null) {
     128:                             for (int i = 0; i < array.size(); i++) {
```

### Data Flow Step 3: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 124, Column 71
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     119:             }
     120: 
     121:             switch (conn.getResponseCode()) {
     122:                 case 200:
     123:                     try (InputStream in = new BufferedInputStream(conn.getInputStream());
>>>  124:                             JsonReader jsonReader = Json.createReader(in)) {
     125:                         final JsonArray array = jsonReader.readArray();
     126: 
     127:                         if (array != null) {
     128:                             for (int i = 0; i < array.size(); i++) {
     129:                                 final JsonObject object = array.getJsonObject(i);
```

### Data Flow Step 4: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 124, Column 53
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     119:             }
     120: 
     121:             switch (conn.getResponseCode()) {
     122:                 case 200:
     123:                     try (InputStream in = new BufferedInputStream(conn.getInputStream());
>>>  124:                             JsonReader jsonReader = Json.createReader(in)) {
     125:                         final JsonArray array = jsonReader.readArray();
     126: 
     127:                         if (array != null) {
     128:                             for (int i = 0; i < array.size(); i++) {
     129:                                 final JsonObject object = array.getJsonObject(i);
```

### Data Flow Step 5: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 125, Column 49
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     120: 
     121:             switch (conn.getResponseCode()) {
     122:                 case 200:
     123:                     try (InputStream in = new BufferedInputStream(conn.getInputStream());
     124:                             JsonReader jsonReader = Json.createReader(in)) {
>>>  125:                         final JsonArray array = jsonReader.readArray();
     126: 
     127:                         if (array != null) {
     128:                             for (int i = 0; i < array.size(); i++) {
     129:                                 final JsonObject object = array.getJsonObject(i);
     130:                                 final Advisory advisory = new Advisory();
```

### Data Flow Step 6: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 125, Column 49
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     120: 
     121:             switch (conn.getResponseCode()) {
     122:                 case 200:
     123:                     try (InputStream in = new BufferedInputStream(conn.getInputStream());
     124:                             JsonReader jsonReader = Json.createReader(in)) {
>>>  125:                         final JsonArray array = jsonReader.readArray();
     126: 
     127:                         if (array != null) {
     128:                             for (int i = 0; i < array.size(); i++) {
     129:                                 final JsonObject object = array.getJsonObject(i);
     130:                                 final Advisory advisory = new Advisory();
```

### Data Flow Step 7: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 129, Column 59
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     124:                             JsonReader jsonReader = Json.createReader(in)) {
     125:                         final JsonArray array = jsonReader.readArray();
     126: 
     127:                         if (array != null) {
     128:                             for (int i = 0; i < array.size(); i++) {
>>>  129:                                 final JsonObject object = array.getJsonObject(i);
     130:                                 final Advisory advisory = new Advisory();
     131:                                 advisory.setId(object.getInt("id"));
     132:                                 advisory.setUpdatedAt(object.getString("updated_at", null));
     133:                                 advisory.setCreatedAt(object.getString("created_at", null));
     134:                                 advisory.setPublishDate(object.getString("publish_date", null));
```

### Data Flow Step 8: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 129, Column 59
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     124:                             JsonReader jsonReader = Json.createReader(in)) {
     125:                         final JsonArray array = jsonReader.readArray();
     126: 
     127:                         if (array != null) {
     128:                             for (int i = 0; i < array.size(); i++) {
>>>  129:                                 final JsonObject object = array.getJsonObject(i);
     130:                                 final Advisory advisory = new Advisory();
     131:                                 advisory.setId(object.getInt("id"));
     132:                                 advisory.setUpdatedAt(object.getString("updated_at", null));
     133:                                 advisory.setCreatedAt(object.getString("created_at", null));
     134:                                 advisory.setPublishDate(object.getString("publish_date", null));
```

### Data Flow Step 9: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 145, Column 52
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     140:                                     advisory.setCvssScore(Float.parseFloat(object.getJsonNumber("cvss_score").toString()));
     141:                                 } else {
     142:                                     advisory.setCvssScore(-1);
     143:                                 }
     144: 
>>>  145:                                 advisory.setModule(object.getString("module", null));
     146:                                 advisory.setVersion(object.getString("version", null));
     147:                                 advisory.setVulnerableVersions(object.getString("vulnerable_versions", null));
     148:                                 advisory.setPatchedVersions(object.getString("patched_versions", null));
     149:                                 advisory.setTitle(object.getString("title", null));
     150:                                 advisory.setAdvisory(object.getString("advisory", null));
```

### Data Flow Step 10: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 145, Column 52
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     140:                                     advisory.setCvssScore(Float.parseFloat(object.getJsonNumber("cvss_score").toString()));
     141:                                 } else {
     142:                                     advisory.setCvssScore(-1);
     143:                                 }
     144: 
>>>  145:                                 advisory.setModule(object.getString("module", null));
     146:                                 advisory.setVersion(object.getString("version", null));
     147:                                 advisory.setVulnerableVersions(object.getString("vulnerable_versions", null));
     148:                                 advisory.setPatchedVersions(object.getString("patched_versions", null));
     149:                                 advisory.setTitle(object.getString("title", null));
     150:                                 advisory.setAdvisory(object.getString("advisory", null));
```

### Data Flow Step 11: core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java, Line 270, Column 27
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java
```java
     265:     /**
     266:      * Sets the name of the Node module the advisory is for.
     267:      *
     268:      * @param module the name of the4 module
     269:      */
>>>  270:     public void setModule(String module) {
     271:         this.module = module;
     272:     }
     273: 
     274:     /**
     275:      * Returns the version of the Node module the advisory is for.
```

### Data Flow Step 12: core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java, Line 271, Column 23
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java
```java
     266:      * Sets the name of the Node module the advisory is for.
     267:      *
     268:      * @param module the name of the4 module
     269:      */
     270:     public void setModule(String module) {
>>>  271:         this.module = module;
     272:     }
     273: 
     274:     /**
     275:      * Returns the version of the Node module the advisory is for.
     276:      *
```

### Data Flow Step 13: core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java, Line 271, Column 9
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java
```java
     266:      * Sets the name of the Node module the advisory is for.
     267:      *
     268:      * @param module the name of the4 module
     269:      */
     270:     public void setModule(String module) {
>>>  271:         this.module = module;
     272:     }
     273: 
     274:     /**
     275:      * Returns the version of the Node module the advisory is for.
     276:      *
```

### Data Flow Step 14: core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java, Line 270, Column 17
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java
```java
     265:     /**
     266:      * Sets the name of the Node module the advisory is for.
     267:      *
     268:      * @param module the name of the4 module
     269:      */
>>>  270:     public void setModule(String module) {
     271:         this.module = module;
     272:     }
     273: 
     274:     /**
     275:      * Returns the version of the Node module the advisory is for.
```

### Data Flow Step 15: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 145, Column 33
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     140:                                     advisory.setCvssScore(Float.parseFloat(object.getJsonNumber("cvss_score").toString()));
     141:                                 } else {
     142:                                     advisory.setCvssScore(-1);
     143:                                 }
     144: 
>>>  145:                                 advisory.setModule(object.getString("module", null));
     146:                                 advisory.setVersion(object.getString("version", null));
     147:                                 advisory.setVulnerableVersions(object.getString("vulnerable_versions", null));
     148:                                 advisory.setPatchedVersions(object.getString("patched_versions", null));
     149:                                 advisory.setTitle(object.getString("title", null));
     150:                                 advisory.setAdvisory(object.getString("advisory", null));
```

### Data Flow Step 16: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 159, Column 44
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     154:                                 for (int j = 0; j < jsonPath.size(); j++) {
     155:                                     stringPath.add(jsonPath.getString(j));
     156:                                 }
     157:                                 advisory.setPath(stringPath.toArray(new String[stringPath.size()]));
     158: 
>>>  159:                                 result.add(advisory);
     160:                             }
     161:                         }
     162:                     }
     163:                     break;
     164: 
```

### Data Flow Step 17: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 159, Column 33
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     154:                                 for (int j = 0; j < jsonPath.size(); j++) {
     155:                                     stringPath.add(jsonPath.getString(j));
     156:                                 }
     157:                                 advisory.setPath(stringPath.toArray(new String[stringPath.size()]));
     158: 
>>>  159:                                 result.add(advisory);
     160:                             }
     161:                         }
     162:                     }
     163:                     break;
     164: 
```

### Data Flow Step 18: core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java, Line 174, Column 20
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/NspSearch.java
```java
     169:                 default:
     170:                     LOGGER.debug("Could not connect to Node Security Platform. Received response code: {} {}",
     171:                             conn.getResponseCode(), conn.getResponseMessage());
     172:                     throw new IOException("Could not connect to Node Security Platform");
     173:             }
>>>  174:             return result;
     175:         } catch (IOException ex) {
     176:             if (ex instanceof javax.net.ssl.SSLHandshakeException
     177:                     && ex.getMessage().contains("unable to find valid certification path to requested target")) {
     178:                 final String msg = String.format("Unable to connect to '%s' - the Java trust store does not contain a trusted root for the cert. "
     179:                         + " Please see https://github.com/jeremylong/InstallCert for one method of updating the trusted certificates.", nspCheckUrl);
```

### Data Flow Step 19: core/src/main/java/org/owasp/dependencycheck/analyzer/NspAnalyzer.java, Line 178, Column 47
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/analyzer/NspAnalyzer.java
```java
     173:             // Create a new 'package' object that acts as a container for the sanitized package.json
     174:             final JsonObjectBuilder builder = Json.createObjectBuilder();
     175:             final JsonObject nspPayload = builder.add("package", sanitizedJson).build();
     176: 
     177:             // Submits the package payload to the nsp check service
>>>  178:             final List<Advisory> advisories = searcher.submitPackage(nspPayload);
     179: 
     180:             for (Advisory advisory : advisories) {
     181:                 /*
     182:                  * Create a new vulnerability out of the advisory returned by nsp.
     183:                  */
```

### Data Flow Step 20: core/src/main/java/org/owasp/dependencycheck/analyzer/NspAnalyzer.java, Line 180, Column 38
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/analyzer/NspAnalyzer.java
```java
     175:             final JsonObject nspPayload = builder.add("package", sanitizedJson).build();
     176: 
     177:             // Submits the package payload to the nsp check service
     178:             final List<Advisory> advisories = searcher.submitPackage(nspPayload);
     179: 
>>>  180:             for (Advisory advisory : advisories) {
     181:                 /*
     182:                  * Create a new vulnerability out of the advisory returned by nsp.
     183:                  */
     184:                 final Vulnerability vuln = new Vulnerability();
     185:                 vuln.setCvssScore(advisory.getCvssScore());
```

### Data Flow Step 21: core/src/main/java/org/owasp/dependencycheck/analyzer/NspAnalyzer.java, Line 185, Column 35
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/analyzer/NspAnalyzer.java
```java
     180:             for (Advisory advisory : advisories) {
     181:                 /*
     182:                  * Create a new vulnerability out of the advisory returned by nsp.
     183:                  */
     184:                 final Vulnerability vuln = new Vulnerability();
>>>  185:                 vuln.setCvssScore(advisory.getCvssScore());
     186:                 vuln.setDescription(advisory.getOverview());
     187:                 vuln.setName(String.valueOf(advisory.getId()));
     188:                 vuln.setSource(Vulnerability.Source.NSP);
     189:                 vuln.addReference(
     190:                         "NSP",
```

### Data Flow Step 22: core/src/main/java/org/owasp/dependencycheck/analyzer/NspAnalyzer.java, Line 208, Column 80
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/analyzer/NspAnalyzer.java
```java
     203:                 vs.setName(advisory.getModule() + ":" + advisory.getVulnerableVersions());
     204:                 vuln.setVulnerableSoftware(new HashSet<>(Arrays.asList(vs)));
     205: 
     206:                 final Dependency existing = findDependency(engine, advisory.getModule(), advisory.getVersion());
     207:                 if (existing == null) {
>>>  208:                     final Dependency nodeModule = createDependency(dependency, advisory.getModule(), advisory.getVersion(), "transitive");
     209:                     nodeModule.addVulnerability(vuln);
     210:                     engine.addDependency(nodeModule);
     211:                 } else {
     212:                     existing.addVulnerability(vuln);
     213:                 }
```

### Data Flow Step 23: core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java, Line 261, Column 19
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java
```java
     256:     /**
     257:      * Returns the name of the Node module the advisory is for.
     258:      *
     259:      * @return the name of the module
     260:      */
>>>  261:     public String getModule() {
     262:         return module;
     263:     }
     264: 
     265:     /**
     266:      * Sets the name of the Node module the advisory is for.
```

### Data Flow Step 24: core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java, Line 262, Column 16
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java
```java
     257:      * Returns the name of the Node module the advisory is for.
     258:      *
     259:      * @return the name of the module
     260:      */
     261:     public String getModule() {
>>>  262:         return module;
     263:     }
     264: 
     265:     /**
     266:      * Sets the name of the Node module the advisory is for.
     267:      *
```

### Data Flow Step 25: core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java, Line 262, Column 16
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/data/nsp/Advisory.java
```java
     257:      * Returns the name of the Node module the advisory is for.
     258:      *
     259:      * @return the name of the module
     260:      */
     261:     public String getModule() {
>>>  262:         return module;
     263:     }
     264: 
     265:     /**
     266:      * Sets the name of the Node module the advisory is for.
     267:      *
```

### Data Flow Step 26: core/src/main/java/org/owasp/dependencycheck/analyzer/NspAnalyzer.java, Line 208, Column 80
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/analyzer/NspAnalyzer.java
```java
     203:                 vs.setName(advisory.getModule() + ":" + advisory.getVulnerableVersions());
     204:                 vuln.setVulnerableSoftware(new HashSet<>(Arrays.asList(vs)));
     205: 
     206:                 final Dependency existing = findDependency(engine, advisory.getModule(), advisory.getVersion());
     207:                 if (existing == null) {
>>>  208:                     final Dependency nodeModule = createDependency(dependency, advisory.getModule(), advisory.getVersion(), "transitive");
     209:                     nodeModule.addVulnerability(vuln);
     210:                     engine.addDependency(nodeModule);
     211:                 } else {
     212:                     existing.addVulnerability(vuln);
     213:                 }
```

### Data Flow Step 27: core/src/main/java/org/owasp/dependencycheck/analyzer/AbstractNpmAnalyzer.java, Line 115, Column 66
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/analyzer/AbstractNpmAnalyzer.java
```java
     110:      * @param name the name of the dependency to create
     111:      * @param version the version of the dependency to create
     112:      * @param scope the scope of the dependency being created
     113:      * @return the generated dependency
     114:      */
>>>  115:     protected Dependency createDependency(Dependency dependency, String name, String version, String scope) {
     116:         final Dependency nodeModule = new Dependency(new File(dependency.getActualFile() + "?" + name), true);
     117:         nodeModule.setEcosystem(NPM_DEPENDENCY_ECOSYSTEM);
     118:         //this is virtual - the sha1 is purely for the hyperlink in the final html report
     119:         nodeModule.setSha1sum(Checksum.getSHA1Checksum(String.format("%s:%s", name, version)));
     120:         nodeModule.setMd5sum(Checksum.getMD5Checksum(String.format("%s:%s", name, version)));
```

### Data Flow Step 28: core/src/main/java/org/owasp/dependencycheck/analyzer/AbstractNpmAnalyzer.java, Line 116, Column 63
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/analyzer/AbstractNpmAnalyzer.java
```java
     111:      * @param version the version of the dependency to create
     112:      * @param scope the scope of the dependency being created
     113:      * @return the generated dependency
     114:      */
     115:     protected Dependency createDependency(Dependency dependency, String name, String version, String scope) {
>>>  116:         final Dependency nodeModule = new Dependency(new File(dependency.getActualFile() + "?" + name), true);
     117:         nodeModule.setEcosystem(NPM_DEPENDENCY_ECOSYSTEM);
     118:         //this is virtual - the sha1 is purely for the hyperlink in the final html report
     119:         nodeModule.setSha1sum(Checksum.getSHA1Checksum(String.format("%s:%s", name, version)));
     120:         nodeModule.setMd5sum(Checksum.getMD5Checksum(String.format("%s:%s", name, version)));
     121:         nodeModule.addEvidence(EvidenceType.PRODUCT, "package.json", "name", name, Confidence.HIGHEST);
```

### Data Flow Step 29: core/src/main/java/org/owasp/dependencycheck/analyzer/AbstractNpmAnalyzer.java, Line 116, Column 54
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/analyzer/AbstractNpmAnalyzer.java
```java
     111:      * @param version the version of the dependency to create
     112:      * @param scope the scope of the dependency being created
     113:      * @return the generated dependency
     114:      */
     115:     protected Dependency createDependency(Dependency dependency, String name, String version, String scope) {
>>>  116:         final Dependency nodeModule = new Dependency(new File(dependency.getActualFile() + "?" + name), true);
     117:         nodeModule.setEcosystem(NPM_DEPENDENCY_ECOSYSTEM);
     118:         //this is virtual - the sha1 is purely for the hyperlink in the final html report
     119:         nodeModule.setSha1sum(Checksum.getSHA1Checksum(String.format("%s:%s", name, version)));
     120:         nodeModule.setMd5sum(Checksum.getMD5Checksum(String.format("%s:%s", name, version)));
     121:         nodeModule.addEvidence(EvidenceType.PRODUCT, "package.json", "name", name, Confidence.HIGHEST);
```

### Data Flow Step 30: core/src/main/java/org/owasp/dependencycheck/dependency/Dependency.java, Line 185, Column 23
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/dependency/Dependency.java
```java
     180:      *
     181:      * @param file the File to create the dependency object from.
     182:      * @param isVirtual specifies if the dependency is virtual indicating the
     183:      * file doesn't actually exist.
     184:      */
>>>  185:     public Dependency(File file, boolean isVirtual) {
     186:         this();
     187:         this.isVirtual = isVirtual;
     188:         this.actualFilePath = file.getAbsolutePath();
     189:         this.filePath = this.actualFilePath;
     190:         this.fileName = file.getName();
```

### Data Flow Step 31: core/src/main/java/org/owasp/dependencycheck/dependency/Dependency.java, Line 192, Column 25
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/dependency/Dependency.java
```java
     187:         this.isVirtual = isVirtual;
     188:         this.actualFilePath = file.getAbsolutePath();
     189:         this.filePath = this.actualFilePath;
     190:         this.fileName = file.getName();
     191:         this.packagePath = filePath;
>>>  192:         determineHashes(file);
     193:     }
     194: 
     195:     /**
     196:      * Returns the file name of the dependency.
     197:      *
```

### Data Flow Step 32: core/src/main/java/org/owasp/dependencycheck/dependency/Dependency.java, Line 572, Column 34
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/dependency/Dependency.java
```java
     567:     /**
     568:      * Determines the SHA1 and MD5 sum for the given file.
     569:      *
     570:      * @param file the file to create checksums for
     571:      */
>>>  572:     private void determineHashes(File file) {
     573:         String md5 = null;
     574:         String sha1 = null;
     575:         if (isVirtual) {
     576:             return;
     577:         }
```

### Data Flow Step 33: core/src/main/java/org/owasp/dependencycheck/dependency/Dependency.java, Line 580, Column 45
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/dependency/Dependency.java
```java
     575:         if (isVirtual) {
     576:             return;
     577:         }
     578:         try {
     579:             md5 = Checksum.getMD5Checksum(file);
>>>  580:             sha1 = Checksum.getSHA1Checksum(file);
     581:         } catch (IOException ex) {
     582:             LOGGER.warn("Unable to read '{}' to determine hashes.", file.getName());
     583:             LOGGER.debug("", ex);
     584:         } catch (NoSuchAlgorithmException ex) {
     585:             LOGGER.warn("Unable to use MD5 or SHA1 checksums.");
```

### Data Flow Step 34: utils/src/main/java/org/owasp/dependencycheck/utils/Checksum.java, Line 107, Column 42
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/utils/src/main/java/org/owasp/dependencycheck/utils/Checksum.java
```java
     102:      * @param file the file to generate the MD5 checksum
     103:      * @return the hex representation of the SHA1 hash
     104:      * @throws IOException when the file passed in does not exist
     105:      * @throws NoSuchAlgorithmException when the SHA1 algorithm is not available
     106:      */
>>>  107:     public static String getSHA1Checksum(File file) throws IOException, NoSuchAlgorithmException {
     108:         final byte[] b = getChecksum("SHA1", file);
     109:         return getHex(b);
     110:     }
     111: 
     112:     /**
```

### Data Flow Step 35: utils/src/main/java/org/owasp/dependencycheck/utils/Checksum.java, Line 108, Column 46
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/utils/src/main/java/org/owasp/dependencycheck/utils/Checksum.java
```java
     103:      * @return the hex representation of the SHA1 hash
     104:      * @throws IOException when the file passed in does not exist
     105:      * @throws NoSuchAlgorithmException when the SHA1 algorithm is not available
     106:      */
     107:     public static String getSHA1Checksum(File file) throws IOException, NoSuchAlgorithmException {
>>>  108:         final byte[] b = getChecksum("SHA1", file);
     109:         return getHex(b);
     110:     }
     111: 
     112:     /**
     113:      * Calculates the MD5 checksum of a specified bytes.
```

### Data Flow Step 36: utils/src/main/java/org/owasp/dependencycheck/utils/Checksum.java, Line 68, Column 56
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/utils/src/main/java/org/owasp/dependencycheck/utils/Checksum.java
```java
      63:      * @return the checksum
      64:      * @throws IOException when the file does not exist
      65:      * @throws NoSuchAlgorithmException when an algorithm is specified that does
      66:      * not exist
      67:      */
>>>   68:     public static byte[] getChecksum(String algorithm, File file) throws NoSuchAlgorithmException, IOException {
      69:         final MessageDigest md = MessageDigest.getInstance(algorithm);
      70:         try (FileInputStream fis = new FileInputStream(file);
      71:                 FileChannel ch = fis.getChannel()) {
      72:             final ByteBuffer buf = ByteBuffer.allocateDirect(8192);
      73:             int b = ch.read(buf);
```

### Data Flow Step 37: utils/src/main/java/org/owasp/dependencycheck/utils/Checksum.java, Line 70, Column 56
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/utils/src/main/java/org/owasp/dependencycheck/utils/Checksum.java
```java
      65:      * @throws NoSuchAlgorithmException when an algorithm is specified that does
      66:      * not exist
      67:      */
      68:     public static byte[] getChecksum(String algorithm, File file) throws NoSuchAlgorithmException, IOException {
      69:         final MessageDigest md = MessageDigest.getInstance(algorithm);
>>>   70:         try (FileInputStream fis = new FileInputStream(file);
      71:                 FileChannel ch = fis.getChannel()) {
      72:             final ByteBuffer buf = ByteBuffer.allocateDirect(8192);
      73:             int b = ch.read(buf);
      74:             while (b != -1 && b != 0) {
      75:                 buf.flip();
```
