# Vulnerability: java/zipslip
## Message: Unsanitized archive entry, which may contain '..', is used in a [file system operation](1).
Unsanitized archive entry, which may contain '..', is used in a [file system operation](2).

## Code Flow 1

### Thread Flow 1

### Data Flow Step 1: core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java, Line 96, Column 56
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java
```java
      91:         try (FileInputStream fis = new FileInputStream(archive);
      92:                 BufferedInputStream bis = new BufferedInputStream(fis);
      93:                 ZipInputStream zis = new ZipInputStream(bis)) {
      94:             while ((entry = zis.getNextEntry()) != null) {
      95:                 if (entry.isDirectory()) {
>>>   96:                     final File d = new File(extractTo, entry.getName());
      97:                     if (!d.exists() && !d.mkdirs()) {
      98:                         final String msg = String.format("Unable to create '%s'.", d.getAbsolutePath());
      99:                         throw new ExtractionException(msg);
     100:                     }
     101:                 } else {
```

### Data Flow Step 2: core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java, Line 97, Column 26
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java
```java
      92:                 BufferedInputStream bis = new BufferedInputStream(fis);
      93:                 ZipInputStream zis = new ZipInputStream(bis)) {
      94:             while ((entry = zis.getNextEntry()) != null) {
      95:                 if (entry.isDirectory()) {
      96:                     final File d = new File(extractTo, entry.getName());
>>>   97:                     if (!d.exists() && !d.mkdirs()) {
      98:                         final String msg = String.format("Unable to create '%s'.", d.getAbsolutePath());
      99:                         throw new ExtractionException(msg);
     100:                     }
     101:                 } else {
     102:                     final File file = new File(extractTo, entry.getName());
```

## Code Flow 2

### Thread Flow 1

### Data Flow Step 1: core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java, Line 96, Column 56
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java
```java
      91:         try (FileInputStream fis = new FileInputStream(archive);
      92:                 BufferedInputStream bis = new BufferedInputStream(fis);
      93:                 ZipInputStream zis = new ZipInputStream(bis)) {
      94:             while ((entry = zis.getNextEntry()) != null) {
      95:                 if (entry.isDirectory()) {
>>>   96:                     final File d = new File(extractTo, entry.getName());
      97:                     if (!d.exists() && !d.mkdirs()) {
      98:                         final String msg = String.format("Unable to create '%s'.", d.getAbsolutePath());
      99:                         throw new ExtractionException(msg);
     100:                     }
     101:                 } else {
```

### Data Flow Step 2: core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java, Line 97, Column 41
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java
```java
      92:                 BufferedInputStream bis = new BufferedInputStream(fis);
      93:                 ZipInputStream zis = new ZipInputStream(bis)) {
      94:             while ((entry = zis.getNextEntry()) != null) {
      95:                 if (entry.isDirectory()) {
      96:                     final File d = new File(extractTo, entry.getName());
>>>   97:                     if (!d.exists() && !d.mkdirs()) {
      98:                         final String msg = String.format("Unable to create '%s'.", d.getAbsolutePath());
      99:                         throw new ExtractionException(msg);
     100:                     }
     101:                 } else {
     102:                     final File file = new File(extractTo, entry.getName());
```
