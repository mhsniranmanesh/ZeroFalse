# Vulnerability: java/zipslip
## Message: Unsanitized archive entry, which may contain '..', is used in a [file system operation](1).
Unsanitized archive entry, which may contain '..', is used in a [file system operation](2).
Unsanitized archive entry, which may contain '..', is used in a [file system operation](3).

## Code Flow 1

### Thread Flow 1

### Data Flow Step 1: core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java, Line 199, Column 49
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java
```java
     194:      * @throws ExtractionException thrown if there is an error reading from the
     195:      * archive stream
     196:      */
     197:     private static void extractFile(ArchiveInputStream input, File destination,
     198:             FilenameFilter filter, ArchiveEntry entry) throws ExtractionException {
>>>  199:         final File file = new File(destination, entry.getName());
     200:         if (filter.accept(file.getParentFile(), file.getName())) {
     201:             LOGGER.debug("Extracting '{}'", file.getPath());
     202:             createParentFile(file);
     203: 
     204:             try (FileOutputStream fos = new FileOutputStream(file)) {
```

### Data Flow Step 2: core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java, Line 204, Column 62
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java
```java
     199:         final File file = new File(destination, entry.getName());
     200:         if (filter.accept(file.getParentFile(), file.getName())) {
     201:             LOGGER.debug("Extracting '{}'", file.getPath());
     202:             createParentFile(file);
     203: 
>>>  204:             try (FileOutputStream fos = new FileOutputStream(file)) {
     205:                 IOUtils.copy(input, fos);
     206:             } catch (FileNotFoundException ex) {
     207:                 LOGGER.debug("", ex);
     208:                 final String msg = String.format("Unable to find file '%s'.", file.getName());
     209:                 throw new ExtractionException(msg, ex);
```

## Code Flow 2

### Thread Flow 1

### Data Flow Step 1: core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java, Line 199, Column 49
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java
```java
     194:      * @throws ExtractionException thrown if there is an error reading from the
     195:      * archive stream
     196:      */
     197:     private static void extractFile(ArchiveInputStream input, File destination,
     198:             FilenameFilter filter, ArchiveEntry entry) throws ExtractionException {
>>>  199:         final File file = new File(destination, entry.getName());
     200:         if (filter.accept(file.getParentFile(), file.getName())) {
     201:             LOGGER.debug("Extracting '{}'", file.getPath());
     202:             createParentFile(file);
     203: 
     204:             try (FileOutputStream fos = new FileOutputStream(file)) {
```

### Data Flow Step 2: core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java, Line 202, Column 30
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java
```java
     197:     private static void extractFile(ArchiveInputStream input, File destination,
     198:             FilenameFilter filter, ArchiveEntry entry) throws ExtractionException {
     199:         final File file = new File(destination, entry.getName());
     200:         if (filter.accept(file.getParentFile(), file.getName())) {
     201:             LOGGER.debug("Extracting '{}'", file.getPath());
>>>  202:             createParentFile(file);
     203: 
     204:             try (FileOutputStream fos = new FileOutputStream(file)) {
     205:                 IOUtils.copy(input, fos);
     206:             } catch (FileNotFoundException ex) {
     207:                 LOGGER.debug("", ex);
```

### Data Flow Step 3: core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java, Line 226, Column 42
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java
```java
     221:      *
     222:      * @param file the file path
     223:      * @throws ExtractionException thrown if the parent paths could not be
     224:      * created
     225:      */
>>>  226:     private static void createParentFile(final File file) throws ExtractionException {
     227:         final File parent = file.getParentFile();
     228:         if (!parent.isDirectory() && !parent.mkdirs()) {
     229:             final String msg = String.format(
     230:                     "Unable to build directory '%s'.",
     231:                     parent.getAbsolutePath());
```

### Data Flow Step 4: core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java, Line 227, Column 29
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java
```java
     222:      * @param file the file path
     223:      * @throws ExtractionException thrown if the parent paths could not be
     224:      * created
     225:      */
     226:     private static void createParentFile(final File file) throws ExtractionException {
>>>  227:         final File parent = file.getParentFile();
     228:         if (!parent.isDirectory() && !parent.mkdirs()) {
     229:             final String msg = String.format(
     230:                     "Unable to build directory '%s'.",
     231:                     parent.getAbsolutePath());
     232:             throw new ExtractionException(msg);
```

### Data Flow Step 5: core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java, Line 227, Column 29
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java
```java
     222:      * @param file the file path
     223:      * @throws ExtractionException thrown if the parent paths could not be
     224:      * created
     225:      */
     226:     private static void createParentFile(final File file) throws ExtractionException {
>>>  227:         final File parent = file.getParentFile();
     228:         if (!parent.isDirectory() && !parent.mkdirs()) {
     229:             final String msg = String.format(
     230:                     "Unable to build directory '%s'.",
     231:                     parent.getAbsolutePath());
     232:             throw new ExtractionException(msg);
```

### Data Flow Step 6: core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java, Line 228, Column 14
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java
```java
     223:      * @throws ExtractionException thrown if the parent paths could not be
     224:      * created
     225:      */
     226:     private static void createParentFile(final File file) throws ExtractionException {
     227:         final File parent = file.getParentFile();
>>>  228:         if (!parent.isDirectory() && !parent.mkdirs()) {
     229:             final String msg = String.format(
     230:                     "Unable to build directory '%s'.",
     231:                     parent.getAbsolutePath());
     232:             throw new ExtractionException(msg);
     233:         }
```

## Code Flow 3

### Thread Flow 1

### Data Flow Step 1: core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java, Line 199, Column 49
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java
```java
     194:      * @throws ExtractionException thrown if there is an error reading from the
     195:      * archive stream
     196:      */
     197:     private static void extractFile(ArchiveInputStream input, File destination,
     198:             FilenameFilter filter, ArchiveEntry entry) throws ExtractionException {
>>>  199:         final File file = new File(destination, entry.getName());
     200:         if (filter.accept(file.getParentFile(), file.getName())) {
     201:             LOGGER.debug("Extracting '{}'", file.getPath());
     202:             createParentFile(file);
     203: 
     204:             try (FileOutputStream fos = new FileOutputStream(file)) {
```

### Data Flow Step 2: core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java, Line 202, Column 30
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java
```java
     197:     private static void extractFile(ArchiveInputStream input, File destination,
     198:             FilenameFilter filter, ArchiveEntry entry) throws ExtractionException {
     199:         final File file = new File(destination, entry.getName());
     200:         if (filter.accept(file.getParentFile(), file.getName())) {
     201:             LOGGER.debug("Extracting '{}'", file.getPath());
>>>  202:             createParentFile(file);
     203: 
     204:             try (FileOutputStream fos = new FileOutputStream(file)) {
     205:                 IOUtils.copy(input, fos);
     206:             } catch (FileNotFoundException ex) {
     207:                 LOGGER.debug("", ex);
```

### Data Flow Step 3: core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java, Line 226, Column 42
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java
```java
     221:      *
     222:      * @param file the file path
     223:      * @throws ExtractionException thrown if the parent paths could not be
     224:      * created
     225:      */
>>>  226:     private static void createParentFile(final File file) throws ExtractionException {
     227:         final File parent = file.getParentFile();
     228:         if (!parent.isDirectory() && !parent.mkdirs()) {
     229:             final String msg = String.format(
     230:                     "Unable to build directory '%s'.",
     231:                     parent.getAbsolutePath());
```

### Data Flow Step 4: core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java, Line 227, Column 29
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java
```java
     222:      * @param file the file path
     223:      * @throws ExtractionException thrown if the parent paths could not be
     224:      * created
     225:      */
     226:     private static void createParentFile(final File file) throws ExtractionException {
>>>  227:         final File parent = file.getParentFile();
     228:         if (!parent.isDirectory() && !parent.mkdirs()) {
     229:             final String msg = String.format(
     230:                     "Unable to build directory '%s'.",
     231:                     parent.getAbsolutePath());
     232:             throw new ExtractionException(msg);
```

### Data Flow Step 5: core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java, Line 227, Column 29
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java
```java
     222:      * @param file the file path
     223:      * @throws ExtractionException thrown if the parent paths could not be
     224:      * created
     225:      */
     226:     private static void createParentFile(final File file) throws ExtractionException {
>>>  227:         final File parent = file.getParentFile();
     228:         if (!parent.isDirectory() && !parent.mkdirs()) {
     229:             final String msg = String.format(
     230:                     "Unable to build directory '%s'.",
     231:                     parent.getAbsolutePath());
     232:             throw new ExtractionException(msg);
```

### Data Flow Step 6: core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java, Line 228, Column 39
File: codeql-dbs/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/root/cwe-bench-java/project-sources/jeremylong__DependencyCheck_CVE-2018-12036_3.1.2/core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java
```java
     223:      * @throws ExtractionException thrown if the parent paths could not be
     224:      * created
     225:      */
     226:     private static void createParentFile(final File file) throws ExtractionException {
     227:         final File parent = file.getParentFile();
>>>  228:         if (!parent.isDirectory() && !parent.mkdirs()) {
     229:             final String msg = String.format(
     230:                     "Unable to build directory '%s'.",
     231:                     parent.getAbsolutePath());
     232:             throw new ExtractionException(msg);
     233:         }
```
