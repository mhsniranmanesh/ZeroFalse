# Vulnerability: java/xss
## Message: Cross-site scripting vulnerability due to a [user-provided value](1).
Cross-site scripting vulnerability due to a [user-provided value](2).

## Code Flow 1

### Thread Flow 1

### Data Flow Step 1: services/src/main/java/org/keycloak/theme/ClassLoaderTheme.java, Line 125, Column 20
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/theme/ClassLoaderTheme.java
```java
     120:         final URL resourceURL = classLoader.getResource(resourceRoot + path);
     121:         if(resourceURL == null || !resourceURL.getPath().startsWith(rootPath)) {
     122:             return null;
     123:         }
     124:         else {
>>>  125:             return resourceURL.openConnection().getInputStream();
     126:         }
     127:     }
     128: 
     129:     @Override
     130:     public Properties getMessages(Locale locale) throws IOException {
```

### Data Flow Step 2: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 158, Column 36
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     153:     @GET
     154:     @Path("/welcome-content/{path}")
     155:     @Produces(MediaType.TEXT_HTML_UTF_8)
     156:     public Response getResource(@PathParam("path") String path) {
     157:         try {
>>>  158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
     161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
     162:                 return builder.build();
     163:             } else {
```

### Data Flow Step 3: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 161, Column 64
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     156:     public Response getResource(@PathParam("path") String path) {
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
>>>  161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
     162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
```

### Data Flow Step 4: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 161, Column 52
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     156:     public Response getResource(@PathParam("path") String path) {
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
>>>  161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
     162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
```

### Data Flow Step 5: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 161, Column 52
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     156:     public Response getResource(@PathParam("path") String path) {
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
>>>  161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
     162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
```

### Data Flow Step 6: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 161, Column 52
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     156:     public Response getResource(@PathParam("path") String path) {
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
>>>  161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
     162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
```

### Data Flow Step 7: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 162, Column 24
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
     161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
>>>  162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
     167:             throw new WebApplicationException(Response.Status.INTERNAL_SERVER_ERROR);
```

### Data Flow Step 8: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 162, Column 24
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
     161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
>>>  162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
     167:             throw new WebApplicationException(Response.Status.INTERNAL_SERVER_ERROR);
```

## Code Flow 2

### Thread Flow 1

### Data Flow Step 1: services/src/main/java/org/keycloak/theme/ClassLoaderTheme.java, Line 125, Column 20
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/theme/ClassLoaderTheme.java
```java
     120:         final URL resourceURL = classLoader.getResource(resourceRoot + path);
     121:         if(resourceURL == null || !resourceURL.getPath().startsWith(rootPath)) {
     122:             return null;
     123:         }
     124:         else {
>>>  125:             return resourceURL.openConnection().getInputStream();
     126:         }
     127:     }
     128: 
     129:     @Override
     130:     public Properties getMessages(Locale locale) throws IOException {
```

### Data Flow Step 2: services/src/main/java/org/keycloak/theme/DefaultThemeManager.java, Line 210, Column 40
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/theme/DefaultThemeManager.java
```java
     205:         }
     206: 
     207:         @Override
     208:         public InputStream getResourceAsStream(String path) throws IOException {
     209:             for (Theme t : themes) {
>>>  210:                 InputStream resource = t.getResourceAsStream(path);
     211:                 if (resource != null) {
     212:                     return resource;
     213:                 }
     214:             }
     215: 
```

### Data Flow Step 3: services/src/main/java/org/keycloak/theme/DefaultThemeManager.java, Line 212, Column 28
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/theme/DefaultThemeManager.java
```java
     207:         @Override
     208:         public InputStream getResourceAsStream(String path) throws IOException {
     209:             for (Theme t : themes) {
     210:                 InputStream resource = t.getResourceAsStream(path);
     211:                 if (resource != null) {
>>>  212:                     return resource;
     213:                 }
     214:             }
     215: 
     216:             for (ThemeResourceProvider t : themeResourceProviders) {
     217:                 InputStream resource = t.getResourceAsStream(path);
```

### Data Flow Step 4: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 158, Column 36
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     153:     @GET
     154:     @Path("/welcome-content/{path}")
     155:     @Produces(MediaType.TEXT_HTML_UTF_8)
     156:     public Response getResource(@PathParam("path") String path) {
     157:         try {
>>>  158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
     161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
     162:                 return builder.build();
     163:             } else {
```

### Data Flow Step 5: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 161, Column 64
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     156:     public Response getResource(@PathParam("path") String path) {
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
>>>  161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
     162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
```

### Data Flow Step 6: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 161, Column 52
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     156:     public Response getResource(@PathParam("path") String path) {
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
>>>  161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
     162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
```

### Data Flow Step 7: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 161, Column 52
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     156:     public Response getResource(@PathParam("path") String path) {
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
>>>  161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
     162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
```

### Data Flow Step 8: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 161, Column 52
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     156:     public Response getResource(@PathParam("path") String path) {
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
>>>  161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
     162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
```

### Data Flow Step 9: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 162, Column 24
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
     161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
>>>  162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
     167:             throw new WebApplicationException(Response.Status.INTERNAL_SERVER_ERROR);
```

### Data Flow Step 10: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 162, Column 24
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
     161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
>>>  162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
     167:             throw new WebApplicationException(Response.Status.INTERNAL_SERVER_ERROR);
```

## Code Flow 3

### Thread Flow 1

### Data Flow Step 1: services/src/main/java/org/keycloak/theme/ClasspathThemeResourceProviderFactory.java, Line 60, Column 20
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/theme/ClasspathThemeResourceProviderFactory.java
```java
      55:         final URL resourceURL = classLoader.getResource(THEME_RESOURCES_RESOURCES + path);
      56:         if(resourceURL == null || !resourceURL.getPath().startsWith(rootPath)) {
      57:             return null;
      58:         }
      59:         else {
>>>   60:             return resourceURL.openConnection().getInputStream();
      61:         }
      62:     }
      63: 
      64:     @Override
      65:     public Properties getMessages(String baseBundlename, Locale locale) throws IOException {
```

### Data Flow Step 2: services/src/main/java/org/keycloak/theme/ClasspathThemeResourceProviderFactory.java, Line 47, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/theme/ClasspathThemeResourceProviderFactory.java
```java
      42:         return classLoader.getResource(THEME_RESOURCES_TEMPLATES + name);
      43:     }
      44: 
      45:     @Override
      46:     public InputStream getResourceAsStream(String path) throws IOException {
>>>   47:         return getResourceAsStream(path, classLoader.getResource(THEME_RESOURCES_RESOURCES));
      48:     }
      49: 
      50:     protected InputStream getResourceAsStream(String path, URL rootResourceURL) throws IOException {
      51:         if (rootResourceURL == null) {
      52:             return null;
```

### Data Flow Step 3: services/src/main/java/org/keycloak/theme/DefaultThemeManager.java, Line 217, Column 40
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/theme/DefaultThemeManager.java
```java
     212:                     return resource;
     213:                 }
     214:             }
     215: 
     216:             for (ThemeResourceProvider t : themeResourceProviders) {
>>>  217:                 InputStream resource = t.getResourceAsStream(path);
     218:                 if (resource != null) {
     219:                     return resource;
     220:                 }
     221:             }
     222: 
```

### Data Flow Step 4: services/src/main/java/org/keycloak/theme/DefaultThemeManager.java, Line 219, Column 28
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/theme/DefaultThemeManager.java
```java
     214:             }
     215: 
     216:             for (ThemeResourceProvider t : themeResourceProviders) {
     217:                 InputStream resource = t.getResourceAsStream(path);
     218:                 if (resource != null) {
>>>  219:                     return resource;
     220:                 }
     221:             }
     222: 
     223:             return null;
     224:         }
```

### Data Flow Step 5: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 158, Column 36
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     153:     @GET
     154:     @Path("/welcome-content/{path}")
     155:     @Produces(MediaType.TEXT_HTML_UTF_8)
     156:     public Response getResource(@PathParam("path") String path) {
     157:         try {
>>>  158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
     161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
     162:                 return builder.build();
     163:             } else {
```

### Data Flow Step 6: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 161, Column 64
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     156:     public Response getResource(@PathParam("path") String path) {
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
>>>  161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
     162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
```

### Data Flow Step 7: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 161, Column 52
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     156:     public Response getResource(@PathParam("path") String path) {
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
>>>  161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
     162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
```

### Data Flow Step 8: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 161, Column 52
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     156:     public Response getResource(@PathParam("path") String path) {
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
>>>  161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
     162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
```

### Data Flow Step 9: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 161, Column 52
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     156:     public Response getResource(@PathParam("path") String path) {
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
>>>  161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
     162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
```

### Data Flow Step 10: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 162, Column 24
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
     161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
>>>  162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
     167:             throw new WebApplicationException(Response.Status.INTERNAL_SERVER_ERROR);
```

### Data Flow Step 11: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 162, Column 24
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
     161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
>>>  162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
     167:             throw new WebApplicationException(Response.Status.INTERNAL_SERVER_ERROR);
```

## Code Flow 4

### Thread Flow 1

### Data Flow Step 1: services/src/main/java/org/keycloak/theme/ClasspathThemeResourceProviderFactory.java, Line 60, Column 20
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/theme/ClasspathThemeResourceProviderFactory.java
```java
      55:         final URL resourceURL = classLoader.getResource(THEME_RESOURCES_RESOURCES + path);
      56:         if(resourceURL == null || !resourceURL.getPath().startsWith(rootPath)) {
      57:             return null;
      58:         }
      59:         else {
>>>   60:             return resourceURL.openConnection().getInputStream();
      61:         }
      62:     }
      63: 
      64:     @Override
      65:     public Properties getMessages(String baseBundlename, Locale locale) throws IOException {
```

### Data Flow Step 2: quarkus/runtime/src/main/java/org/keycloak/quarkus/runtime/themes/FlatClasspathThemeResourceProviderFactory.java, Line 37, Column 30
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/quarkus/runtime/src/main/java/org/keycloak/quarkus/runtime/themes/FlatClasspathThemeResourceProviderFactory.java
```java
      32:     @Override
      33:     public InputStream getResourceAsStream(String path) throws IOException {
      34:         Enumeration<URL> resources = classLoader.getResources(THEME_RESOURCES_RESOURCES);
      35: 
      36:         while (resources.hasMoreElements()) {
>>>   37:             InputStream is = getResourceAsStream(path, resources.nextElement());
      38: 
      39:             if (is != null) {
      40:                 return is;
      41:             }
      42:         }
```

### Data Flow Step 3: quarkus/runtime/src/main/java/org/keycloak/quarkus/runtime/themes/FlatClasspathThemeResourceProviderFactory.java, Line 40, Column 24
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/quarkus/runtime/src/main/java/org/keycloak/quarkus/runtime/themes/FlatClasspathThemeResourceProviderFactory.java
```java
      35: 
      36:         while (resources.hasMoreElements()) {
      37:             InputStream is = getResourceAsStream(path, resources.nextElement());
      38: 
      39:             if (is != null) {
>>>   40:                 return is;
      41:             }
      42:         }
      43: 
      44:         return null;
      45:     }
```

### Data Flow Step 4: services/src/main/java/org/keycloak/theme/DefaultThemeManager.java, Line 217, Column 40
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/theme/DefaultThemeManager.java
```java
     212:                     return resource;
     213:                 }
     214:             }
     215: 
     216:             for (ThemeResourceProvider t : themeResourceProviders) {
>>>  217:                 InputStream resource = t.getResourceAsStream(path);
     218:                 if (resource != null) {
     219:                     return resource;
     220:                 }
     221:             }
     222: 
```

### Data Flow Step 5: services/src/main/java/org/keycloak/theme/DefaultThemeManager.java, Line 219, Column 28
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/theme/DefaultThemeManager.java
```java
     214:             }
     215: 
     216:             for (ThemeResourceProvider t : themeResourceProviders) {
     217:                 InputStream resource = t.getResourceAsStream(path);
     218:                 if (resource != null) {
>>>  219:                     return resource;
     220:                 }
     221:             }
     222: 
     223:             return null;
     224:         }
```

### Data Flow Step 6: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 158, Column 36
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     153:     @GET
     154:     @Path("/welcome-content/{path}")
     155:     @Produces(MediaType.TEXT_HTML_UTF_8)
     156:     public Response getResource(@PathParam("path") String path) {
     157:         try {
>>>  158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
     161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
     162:                 return builder.build();
     163:             } else {
```

### Data Flow Step 7: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 161, Column 64
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     156:     public Response getResource(@PathParam("path") String path) {
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
>>>  161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
     162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
```

### Data Flow Step 8: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 161, Column 52
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     156:     public Response getResource(@PathParam("path") String path) {
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
>>>  161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
     162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
```

### Data Flow Step 9: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 161, Column 52
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     156:     public Response getResource(@PathParam("path") String path) {
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
>>>  161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
     162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
```

### Data Flow Step 10: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 161, Column 52
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     156:     public Response getResource(@PathParam("path") String path) {
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
>>>  161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
     162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
```

### Data Flow Step 11: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 162, Column 24
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
     161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
>>>  162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
     167:             throw new WebApplicationException(Response.Status.INTERNAL_SERVER_ERROR);
```

### Data Flow Step 12: services/src/main/java/org/keycloak/services/resources/WelcomeResource.java, Line 162, Column 24
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java
```java
     157:         try {
     158:             InputStream resource = getTheme().getResourceAsStream(path);
     159:             if (resource != null) {
     160:                 String contentType = MimeTypeUtil.getContentType(path);
     161:                 Response.ResponseBuilder builder = Response.ok(resource).type(contentType).cacheControl(CacheControlUtil.getDefaultCacheControl());
>>>  162:                 return builder.build();
     163:             } else {
     164:                 return Response.status(Response.Status.NOT_FOUND).build();
     165:             }
     166:         } catch (IOException e) {
     167:             throw new WebApplicationException(Response.Status.INTERNAL_SERVER_ERROR);
```
