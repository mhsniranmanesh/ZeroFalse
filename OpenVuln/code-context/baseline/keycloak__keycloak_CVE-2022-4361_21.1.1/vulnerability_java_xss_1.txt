# Vulnerability: java/xss
## Message: Cross-site scripting vulnerability due to a [user-provided value](1).
Cross-site scripting vulnerability due to a [user-provided value](2).

## Code Flow 1

### Thread Flow 1

### Data Flow Step 1: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 112, Column 34
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
     107:             throw new java.io.IOException("Bad status: " + status);
     108:         }
     109:         if (entity == null) {
     110:             throw new java.io.IOException("No Entity");
     111:         }
>>>  112:         java.io.InputStream is = entity.getContent();
     113:         try {
     114:             tokenResponse = JsonSerialization.readValue(is, AccessTokenResponse.class);
     115:         } finally {
     116:             try {
     117:                 is.close();
```

### Data Flow Step 2: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 114, Column 57
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
     109:         if (entity == null) {
     110:             throw new java.io.IOException("No Entity");
     111:         }
     112:         java.io.InputStream is = entity.getContent();
     113:         try {
>>>  114:             tokenResponse = JsonSerialization.readValue(is, AccessTokenResponse.class);
     115:         } finally {
     116:             try {
     117:                 is.close();
     118:             } catch (java.io.IOException ignored) { }
     119:         }
```

### Data Flow Step 3: core/src/main/java/org/keycloak/util/JsonSerialization.java, Line 78, Column 35
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/util/JsonSerialization.java
```java
      73: 
      74:     public static <T> T readValue(String bytes, Class<T> type) throws IOException {
      75:         return mapper.readValue(bytes, type);
      76:     }
      77: 
>>>   78:     public static <T> T readValue(InputStream bytes, Class<T> type) throws IOException {
      79:         return readValue(bytes, type, false);
      80:     }
      81: 
      82:     public static <T> T readValue(String string, TypeReference<T> type) throws IOException {
      83:         return mapper.readValue(string, type);
```

### Data Flow Step 4: core/src/main/java/org/keycloak/util/JsonSerialization.java, Line 79, Column 26
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/util/JsonSerialization.java
```java
      74:     public static <T> T readValue(String bytes, Class<T> type) throws IOException {
      75:         return mapper.readValue(bytes, type);
      76:     }
      77: 
      78:     public static <T> T readValue(InputStream bytes, Class<T> type) throws IOException {
>>>   79:         return readValue(bytes, type, false);
      80:     }
      81: 
      82:     public static <T> T readValue(String string, TypeReference<T> type) throws IOException {
      83:         return mapper.readValue(string, type);
      84:     }
```

### Data Flow Step 5: core/src/main/java/org/keycloak/util/JsonSerialization.java, Line 90, Column 35
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/util/JsonSerialization.java
```java
      85: 
      86:     public static <T> T readValue(InputStream bytes, TypeReference<T> type) throws IOException {
      87:         return mapper.readValue(bytes, type);
      88:     }
      89: 
>>>   90:     public static <T> T readValue(InputStream bytes, Class<T> type, boolean replaceSystemProperties) throws IOException {
      91:         if (replaceSystemProperties) {
      92:             return sysPropertiesAwareMapper.readValue(bytes, type);
      93:         } else {
      94:             return mapper.readValue(bytes, type);
      95:         }
```

### Data Flow Step 6: core/src/main/java/org/keycloak/util/JsonSerialization.java, Line 94, Column 20
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/util/JsonSerialization.java
```java
      89: 
      90:     public static <T> T readValue(InputStream bytes, Class<T> type, boolean replaceSystemProperties) throws IOException {
      91:         if (replaceSystemProperties) {
      92:             return sysPropertiesAwareMapper.readValue(bytes, type);
      93:         } else {
>>>   94:             return mapper.readValue(bytes, type);
      95:         }
      96:     }
      97: 
      98:     /**
      99:      * Creates an {@link ObjectNode} based on the given {@code pojo}, copying all its properties to the resulting {@link ObjectNode}.
```

### Data Flow Step 7: core/src/main/java/org/keycloak/util/JsonSerialization.java, Line 79, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/util/JsonSerialization.java
```java
      74:     public static <T> T readValue(String bytes, Class<T> type) throws IOException {
      75:         return mapper.readValue(bytes, type);
      76:     }
      77: 
      78:     public static <T> T readValue(InputStream bytes, Class<T> type) throws IOException {
>>>   79:         return readValue(bytes, type, false);
      80:     }
      81: 
      82:     public static <T> T readValue(String string, TypeReference<T> type) throws IOException {
      83:         return mapper.readValue(string, type);
      84:     }
```

### Data Flow Step 8: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 114, Column 29
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
     109:         if (entity == null) {
     110:             throw new java.io.IOException("No Entity");
     111:         }
     112:         java.io.InputStream is = entity.getContent();
     113:         try {
>>>  114:             tokenResponse = JsonSerialization.readValue(is, AccessTokenResponse.class);
     115:         } finally {
     116:             try {
     117:                 is.close();
     118:             } catch (java.io.IOException ignored) { }
     119:         }
```

### Data Flow Step 9: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 121, Column 14
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
     116:             try {
     117:                 is.close();
     118:             } catch (java.io.IOException ignored) { }
     119:         }
     120: 
>>>  121:     	return (tokenResponse);
     122:     }
     123: 
     124: }
```

### Data Flow Step 10: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 76, Column 19
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
      71:         try {
      72:             String userpw=new String(Base64.decode(tokenString));
      73:             int seperatorIndex = userpw.indexOf(":");
      74:             String user = userpw.substring(0, seperatorIndex);
      75:             String pw = userpw.substring(seperatorIndex + 1);
>>>   76:             atr = getToken(user, pw);
      77:             tokenString = atr.getToken();
      78:         } catch (Exception e) {
      79:             log.debug("Failed to obtain token", e);
      80:             challenge = challengeResponse(exchange, OIDCAuthenticationError.Reason.INVALID_TOKEN, "no_token", e.getMessage());
      81:             return AuthOutcome.FAILED;
```

### Data Flow Step 11: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 77, Column 27
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
      72:             String userpw=new String(Base64.decode(tokenString));
      73:             int seperatorIndex = userpw.indexOf(":");
      74:             String user = userpw.substring(0, seperatorIndex);
      75:             String pw = userpw.substring(seperatorIndex + 1);
      76:             atr = getToken(user, pw);
>>>   77:             tokenString = atr.getToken();
      78:         } catch (Exception e) {
      79:             log.debug("Failed to obtain token", e);
      80:             challenge = challengeResponse(exchange, OIDCAuthenticationError.Reason.INVALID_TOKEN, "no_token", e.getMessage());
      81:             return AuthOutcome.FAILED;
      82:         }
```

### Data Flow Step 12: core/src/main/java/org/keycloak/representations/AccessTokenResponse.java, Line 81, Column 19
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/representations/AccessTokenResponse.java
```java
      76: 
      77:     public void setScope(String scope) {
      78:         this.scope = scope;
      79:     }
      80: 
>>>   81:     public String getToken() {
      82:         return token;
      83:     }
      84: 
      85:     public void setToken(String token) {
      86:         this.token = token;
```

### Data Flow Step 13: core/src/main/java/org/keycloak/representations/AccessTokenResponse.java, Line 82, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/representations/AccessTokenResponse.java
```java
      77:     public void setScope(String scope) {
      78:         this.scope = scope;
      79:     }
      80: 
      81:     public String getToken() {
>>>   82:         return token;
      83:     }
      84: 
      85:     public void setToken(String token) {
      86:         this.token = token;
      87:     }
```

### Data Flow Step 14: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 77, Column 27
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
      72:             String userpw=new String(Base64.decode(tokenString));
      73:             int seperatorIndex = userpw.indexOf(":");
      74:             String user = userpw.substring(0, seperatorIndex);
      75:             String pw = userpw.substring(seperatorIndex + 1);
      76:             atr = getToken(user, pw);
>>>   77:             tokenString = atr.getToken();
      78:         } catch (Exception e) {
      79:             log.debug("Failed to obtain token", e);
      80:             challenge = challengeResponse(exchange, OIDCAuthenticationError.Reason.INVALID_TOKEN, "no_token", e.getMessage());
      81:             return AuthOutcome.FAILED;
      82:         }
```

### Data Flow Step 15: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 77, Column 13
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
      72:             String userpw=new String(Base64.decode(tokenString));
      73:             int seperatorIndex = userpw.indexOf(":");
      74:             String user = userpw.substring(0, seperatorIndex);
      75:             String pw = userpw.substring(seperatorIndex + 1);
      76:             atr = getToken(user, pw);
>>>   77:             tokenString = atr.getToken();
      78:         } catch (Exception e) {
      79:             log.debug("Failed to obtain token", e);
      80:             challenge = challengeResponse(exchange, OIDCAuthenticationError.Reason.INVALID_TOKEN, "no_token", e.getMessage());
      81:             return AuthOutcome.FAILED;
      82:         }
```

### Data Flow Step 16: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 48, Column 24
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
      43: 
      44:     public BasicAuthRequestAuthenticator(KeycloakDeployment deployment) {
      45:     	super(deployment);
      46:     }
      47: 
>>>   48:     public AuthOutcome authenticate(HttpFacade exchange)  {
      49:         List<String> authHeaders = exchange.getRequest().getHeaders("Authorization");
      50:         if (authHeaders == null || authHeaders.isEmpty()) {
      51:             log.debug("Authorization header not present");
      52:             challenge = challengeResponse(exchange, OIDCAuthenticationError.Reason.NO_AUTHORIZATION_HEADER, null, null);
      53:             return AuthOutcome.NOT_ATTEMPTED;
```

### Data Flow Step 17: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 218, Column 23
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     213:         BearerTokenRequestAuthenticator authenticator = new BearerTokenRequestAuthenticator(resolvedDeployment);
     214:         AuthOutcome outcome = authenticator.authenticate(facade);
     215: 
     216:         if (outcome == AuthOutcome.NOT_ATTEMPTED && resolvedDeployment.isEnableBasicAuth()) {
     217:             authenticator = new BasicAuthRequestAuthenticator(resolvedDeployment);
>>>  218:             outcome = authenticator.authenticate(facade);
     219:         }
     220: 
     221:         if (outcome == AuthOutcome.FAILED || outcome == AuthOutcome.NOT_ATTEMPTED) {
     222:             AuthChallenge challenge = authenticator.getChallenge();
     223:             log.fine("Authentication outcome: " + outcome);
```

### Data Flow Step 18: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 241, Column 71
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     236:             if (verifySslFailed(facade, resolvedDeployment)) {
     237:                 return;
     238:             }
     239:         }
     240: 
>>>  241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
```

### Data Flow Step 19: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 245, Column 141
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     240: 
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
>>>  245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
```

### Data Flow Step 20: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 246, Column 121
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
>>>  246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
     251:         facade.setSecurityContext(skSession);
```

### Data Flow Step 21: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java, Line 54, Column 19
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java
```java
      49: 
      50:     public AuthChallenge getChallenge() {
      51:         return challenge;
      52:     }
      53: 
>>>   54:     public String getTokenString() {
      55:         return tokenString;
      56:     }
      57: 
      58:     public AccessToken getToken() {
      59:         return token;
```

### Data Flow Step 22: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java, Line 55, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java
```java
      50:     public AuthChallenge getChallenge() {
      51:         return challenge;
      52:     }
      53: 
      54:     public String getTokenString() {
>>>   55:         return tokenString;
      56:     }
      57: 
      58:     public AccessToken getToken() {
      59:         return token;
      60:     }
```

### Data Flow Step 23: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java, Line 55, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java
```java
      50:     public AuthChallenge getChallenge() {
      51:         return challenge;
      52:     }
      53: 
      54:     public String getTokenString() {
>>>   55:         return tokenString;
      56:     }
      57: 
      58:     public AccessToken getToken() {
      59:         return token;
      60:     }
```

### Data Flow Step 24: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 246, Column 121
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
>>>  246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
     251:         facade.setSecurityContext(skSession);
```

### Data Flow Step 25: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 47, Column 108
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      42:     protected String refreshToken;
      43: 
      44:     public RefreshableKeycloakSecurityContext() {
      45:     }
      46: 
>>>   47:     public RefreshableKeycloakSecurityContext(KeycloakDeployment deployment, AdapterTokenStore tokenStore, String tokenString, AccessToken token, String idTokenString, IDToken idToken, String refreshToken) {
      48:         super(tokenString, token, idTokenString, idToken);
      49:         this.deployment = deployment;
      50:         this.tokenStore = tokenStore;
      51:         this.refreshToken = refreshToken;
      52:     }
```

### Data Flow Step 26: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 48, Column 15
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      43: 
      44:     public RefreshableKeycloakSecurityContext() {
      45:     }
      46: 
      47:     public RefreshableKeycloakSecurityContext(KeycloakDeployment deployment, AdapterTokenStore tokenStore, String tokenString, AccessToken token, String idTokenString, IDToken idToken, String refreshToken) {
>>>   48:         super(tokenString, token, idTokenString, idToken);
      49:         this.deployment = deployment;
      50:         this.tokenStore = tokenStore;
      51:         this.refreshToken = refreshToken;
      52:     }
      53: 
```

### Data Flow Step 27: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 50, Column 36
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      45:     protected transient AuthorizationContext authorizationContext;
      46: 
      47:     public KeycloakSecurityContext() {
      48:     }
      49: 
>>>   50:     public KeycloakSecurityContext(String tokenString, AccessToken token, String idTokenString, IDToken idToken) {
      51:         this.tokenString = tokenString;
      52:         this.token = token;
      53:         this.idToken = idToken;
      54:         this.idTokenString = idTokenString;
      55:     }
```

### Data Flow Step 28: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 51, Column 28
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      46: 
      47:     public KeycloakSecurityContext() {
      48:     }
      49: 
      50:     public KeycloakSecurityContext(String tokenString, AccessToken token, String idTokenString, IDToken idToken) {
>>>   51:         this.tokenString = tokenString;
      52:         this.token = token;
      53:         this.idToken = idToken;
      54:         this.idTokenString = idTokenString;
      55:     }
      56: 
```

### Data Flow Step 29: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 51, Column 9
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      46: 
      47:     public KeycloakSecurityContext() {
      48:     }
      49: 
      50:     public KeycloakSecurityContext(String tokenString, AccessToken token, String idTokenString, IDToken idToken) {
>>>   51:         this.tokenString = tokenString;
      52:         this.token = token;
      53:         this.idToken = idToken;
      54:         this.idTokenString = idTokenString;
      55:     }
      56: 
```

### Data Flow Step 30: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 50, Column 12
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      45:     protected transient AuthorizationContext authorizationContext;
      46: 
      47:     public KeycloakSecurityContext() {
      48:     }
      49: 
>>>   50:     public KeycloakSecurityContext(String tokenString, AccessToken token, String idTokenString, IDToken idToken) {
      51:         this.tokenString = tokenString;
      52:         this.token = token;
      53:         this.idToken = idToken;
      54:         this.idTokenString = idTokenString;
      55:     }
```

### Data Flow Step 31: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 48, Column 9
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      43: 
      44:     public RefreshableKeycloakSecurityContext() {
      45:     }
      46: 
      47:     public RefreshableKeycloakSecurityContext(KeycloakDeployment deployment, AdapterTokenStore tokenStore, String tokenString, AccessToken token, String idTokenString, IDToken idToken, String refreshToken) {
>>>   48:         super(tokenString, token, idTokenString, idToken);
      49:         this.deployment = deployment;
      50:         this.tokenStore = tokenStore;
      51:         this.refreshToken = refreshToken;
      52:     }
      53: 
```

### Data Flow Step 32: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 47, Column 12
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      42:     protected String refreshToken;
      43: 
      44:     public RefreshableKeycloakSecurityContext() {
      45:     }
      46: 
>>>   47:     public RefreshableKeycloakSecurityContext(KeycloakDeployment deployment, AdapterTokenStore tokenStore, String tokenString, AccessToken token, String idTokenString, IDToken idToken, String refreshToken) {
      48:         super(tokenString, token, idTokenString, idToken);
      49:         this.deployment = deployment;
      50:         this.tokenStore = tokenStore;
      51:         this.refreshToken = refreshToken;
      52:     }
```

### Data Flow Step 33: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 246, Column 56
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
>>>  246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
     251:         facade.setSecurityContext(skSession);
```

### Data Flow Step 34: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 251, Column 35
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
>>>  251:         facade.setSecurityContext(skSession);
     252:         String principalName = AdapterUtils.getPrincipalName(resolvedDeployment, bearer.getToken());
     253:         final KeycloakPrincipal<RefreshableKeycloakSecurityContext> principal = new KeycloakPrincipal<RefreshableKeycloakSecurityContext>(principalName, skSession);
     254:         SecurityContext anonymousSecurityContext = getRequestSecurityContext(request);
     255:         final boolean isSecure = anonymousSecurityContext.isSecure();
     256:         final Set<String> roles = AdapterUtils.getRolesFromSecurityContext(skSession);
```

### Data Flow Step 35: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 218, Column 36
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     213:     @Override
     214:     public KeycloakSecurityContext getSecurityContext() {
     215:         return keycloakSecurityContext;
     216:     }
     217: 
>>>  218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
     219:         this.keycloakSecurityContext = securityContext;
     220:     }
     221: 
     222:     @Override
     223:     public Request getRequest() {
```

### Data Flow Step 36: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 219, Column 40
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     214:     public KeycloakSecurityContext getSecurityContext() {
     215:         return keycloakSecurityContext;
     216:     }
     217: 
     218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
>>>  219:         this.keycloakSecurityContext = securityContext;
     220:     }
     221: 
     222:     @Override
     223:     public Request getRequest() {
     224:         return requestFacade;
```

### Data Flow Step 37: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 219, Column 9
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     214:     public KeycloakSecurityContext getSecurityContext() {
     215:         return keycloakSecurityContext;
     216:     }
     217: 
     218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
>>>  219:         this.keycloakSecurityContext = securityContext;
     220:     }
     221: 
     222:     @Override
     223:     public Request getRequest() {
     224:         return requestFacade;
```

### Data Flow Step 38: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 218, Column 17
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     213:     @Override
     214:     public KeycloakSecurityContext getSecurityContext() {
     215:         return keycloakSecurityContext;
     216:     }
     217: 
>>>  218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
     219:         this.keycloakSecurityContext = securityContext;
     220:     }
     221: 
     222:     @Override
     223:     public Request getRequest() {
```

### Data Flow Step 39: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 251, Column 9
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
>>>  251:         facade.setSecurityContext(skSession);
     252:         String principalName = AdapterUtils.getPrincipalName(resolvedDeployment, bearer.getToken());
     253:         final KeycloakPrincipal<RefreshableKeycloakSecurityContext> principal = new KeycloakPrincipal<RefreshableKeycloakSecurityContext>(principalName, skSession);
     254:         SecurityContext anonymousSecurityContext = getRequestSecurityContext(request);
     255:         final boolean isSecure = anonymousSecurityContext.isSecure();
     256:         final Set<String> roles = AdapterUtils.getRolesFromSecurityContext(skSession);
```

### Data Flow Step 40: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 245, Column 45
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     240: 
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
>>>  245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
```

### Data Flow Step 41: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 241, Column 34
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     236:             if (verifySslFailed(facade, resolvedDeployment)) {
     237:                 return;
     238:             }
     239:         }
     240: 
>>>  241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
```

### Data Flow Step 42: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 242, Column 27
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     237:                 return;
     238:             }
     239:         }
     240: 
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
>>>  242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
```

### Data Flow Step 43: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 295, Column 38
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     290: 
     291:     protected SecurityContext getRequestSecurityContext(ContainerRequestContext request) {
     292:         return request.getSecurityContext();
     293:     }
     294: 
>>>  295:     protected void handleAuthActions(JaxrsHttpFacade facade, KeycloakDeployment deployment) {
     296:         AuthenticatedActionsHandler authActionsHandler = new AuthenticatedActionsHandler(deployment, facade);
     297:         if (authActionsHandler.handledRequest()) {
     298:             // Send response now (if not already sent)
     299:             if (!facade.isResponseFinished()) {
     300:                 facade.getResponse().end();
```

### Data Flow Step 44: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 296, Column 102
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     291:     protected SecurityContext getRequestSecurityContext(ContainerRequestContext request) {
     292:         return request.getSecurityContext();
     293:     }
     294: 
     295:     protected void handleAuthActions(JaxrsHttpFacade facade, KeycloakDeployment deployment) {
>>>  296:         AuthenticatedActionsHandler authActionsHandler = new AuthenticatedActionsHandler(deployment, facade);
     297:         if (authActionsHandler.handledRequest()) {
     298:             // Send response now (if not already sent)
     299:             if (!facade.isResponseFinished()) {
     300:                 facade.getResponse().end();
     301:             }
```

### Data Flow Step 45: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 49, Column 71
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      44: public class AuthenticatedActionsHandler {
      45:     private static final Logger log = Logger.getLogger(AuthenticatedActionsHandler.class);
      46:     protected KeycloakDeployment deployment;
      47:     protected OIDCHttpFacade facade;
      48: 
>>>   49:     public AuthenticatedActionsHandler(KeycloakDeployment deployment, OIDCHttpFacade facade) {
      50:         this.deployment = deployment;
      51:         this.facade = facade;
      52:     }
      53: 
      54:     public boolean handledRequest() {
```

### Data Flow Step 46: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 51, Column 23
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      46:     protected KeycloakDeployment deployment;
      47:     protected OIDCHttpFacade facade;
      48: 
      49:     public AuthenticatedActionsHandler(KeycloakDeployment deployment, OIDCHttpFacade facade) {
      50:         this.deployment = deployment;
>>>   51:         this.facade = facade;
      52:     }
      53: 
      54:     public boolean handledRequest() {
      55:         log.debugv("AuthenticatedActionsValve.invoke {0}", facade.getRequest().getURI());
      56:         if (corsRequest()) return true;
```

### Data Flow Step 47: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 51, Column 9
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      46:     protected KeycloakDeployment deployment;
      47:     protected OIDCHttpFacade facade;
      48: 
      49:     public AuthenticatedActionsHandler(KeycloakDeployment deployment, OIDCHttpFacade facade) {
      50:         this.deployment = deployment;
>>>   51:         this.facade = facade;
      52:     }
      53: 
      54:     public boolean handledRequest() {
      55:         log.debugv("AuthenticatedActionsValve.invoke {0}", facade.getRequest().getURI());
      56:         if (corsRequest()) return true;
```

### Data Flow Step 48: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 49, Column 12
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      44: public class AuthenticatedActionsHandler {
      45:     private static final Logger log = Logger.getLogger(AuthenticatedActionsHandler.class);
      46:     protected KeycloakDeployment deployment;
      47:     protected OIDCHttpFacade facade;
      48: 
>>>   49:     public AuthenticatedActionsHandler(KeycloakDeployment deployment, OIDCHttpFacade facade) {
      50:         this.deployment = deployment;
      51:         this.facade = facade;
      52:     }
      53: 
      54:     public boolean handledRequest() {
```

### Data Flow Step 49: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 296, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     291:     protected SecurityContext getRequestSecurityContext(ContainerRequestContext request) {
     292:         return request.getSecurityContext();
     293:     }
     294: 
     295:     protected void handleAuthActions(JaxrsHttpFacade facade, KeycloakDeployment deployment) {
>>>  296:         AuthenticatedActionsHandler authActionsHandler = new AuthenticatedActionsHandler(deployment, facade);
     297:         if (authActionsHandler.handledRequest()) {
     298:             // Send response now (if not already sent)
     299:             if (!facade.isResponseFinished()) {
     300:                 facade.getResponse().end();
     301:             }
```

### Data Flow Step 50: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 297, Column 13
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     292:         return request.getSecurityContext();
     293:     }
     294: 
     295:     protected void handleAuthActions(JaxrsHttpFacade facade, KeycloakDeployment deployment) {
     296:         AuthenticatedActionsHandler authActionsHandler = new AuthenticatedActionsHandler(deployment, facade);
>>>  297:         if (authActionsHandler.handledRequest()) {
     298:             // Send response now (if not already sent)
     299:             if (!facade.isResponseFinished()) {
     300:                 facade.getResponse().end();
     301:             }
     302:         }
```

### Data Flow Step 51: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 54, Column 20
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      49:     public AuthenticatedActionsHandler(KeycloakDeployment deployment, OIDCHttpFacade facade) {
      50:         this.deployment = deployment;
      51:         this.facade = facade;
      52:     }
      53: 
>>>   54:     public boolean handledRequest() {
      55:         log.debugv("AuthenticatedActionsValve.invoke {0}", facade.getRequest().getURI());
      56:         if (corsRequest()) return true;
      57:         String requestUri = facade.getRequest().getURI();
      58:         if (requestUri.endsWith(AdapterConstants.K_QUERY_BEARER_TOKEN)) {
      59:             queryBearerToken();
```

### Data Flow Step 52: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 59, Column 13
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      54:     public boolean handledRequest() {
      55:         log.debugv("AuthenticatedActionsValve.invoke {0}", facade.getRequest().getURI());
      56:         if (corsRequest()) return true;
      57:         String requestUri = facade.getRequest().getURI();
      58:         if (requestUri.endsWith(AdapterConstants.K_QUERY_BEARER_TOKEN)) {
>>>   59:             queryBearerToken();
      60:             return true;
      61:         }
      62:         if (!isAuthorized()) {
      63:             return true;
      64:         }
```

### Data Flow Step 53: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 68, Column 20
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      63:             return true;
      64:         }
      65:         return false;
      66:     }
      67: 
>>>   68:     protected void queryBearerToken()  {
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
```

### Data Flow Step 54: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 74, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
>>>   74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
      75:         } catch (IOException e) {
      76:             throw new RuntimeException(e);
      77:         }
      78:         facade.getResponse().end();
      79:     }
```

### Data Flow Step 55: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 74, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
>>>   74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
      75:         } catch (IOException e) {
      76:             throw new RuntimeException(e);
      77:         }
      78:         facade.getResponse().end();
      79:     }
```

### Data Flow Step 56: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 214, Column 36
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     209:             responseFinished = true;
     210:         }
     211:     }
     212: 
     213:     @Override
>>>  214:     public KeycloakSecurityContext getSecurityContext() {
     215:         return keycloakSecurityContext;
     216:     }
     217: 
     218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
     219:         this.keycloakSecurityContext = securityContext;
```

### Data Flow Step 57: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 215, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     210:         }
     211:     }
     212: 
     213:     @Override
     214:     public KeycloakSecurityContext getSecurityContext() {
>>>  215:         return keycloakSecurityContext;
     216:     }
     217: 
     218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
     219:         this.keycloakSecurityContext = securityContext;
     220:     }
```

### Data Flow Step 58: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 215, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     210:         }
     211:     }
     212: 
     213:     @Override
     214:     public KeycloakSecurityContext getSecurityContext() {
>>>  215:         return keycloakSecurityContext;
     216:     }
     217: 
     218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
     219:         this.keycloakSecurityContext = securityContext;
     220:     }
```

### Data Flow Step 59: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 74, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
>>>   74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
      75:         } catch (IOException e) {
      76:             throw new RuntimeException(e);
      77:         }
      78:         facade.getResponse().end();
      79:     }
```

### Data Flow Step 60: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 61, Column 19
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      56: 
      57:     public AccessToken getToken() {
      58:         return token;
      59:     }
      60: 
>>>   61:     public String getTokenString() {
      62:         return tokenString;
      63:     }
      64: 
      65:     public AuthorizationContext getAuthorizationContext() {
      66:         return authorizationContext;
```

### Data Flow Step 61: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 62, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      57:     public AccessToken getToken() {
      58:         return token;
      59:     }
      60: 
      61:     public String getTokenString() {
>>>   62:         return tokenString;
      63:     }
      64: 
      65:     public AuthorizationContext getAuthorizationContext() {
      66:         return authorizationContext;
      67:     }
```

### Data Flow Step 62: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 62, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      57:     public AccessToken getToken() {
      58:         return token;
      59:     }
      60: 
      61:     public String getTokenString() {
>>>   62:         return tokenString;
      63:     }
      64: 
      65:     public AuthorizationContext getAuthorizationContext() {
      66:         return authorizationContext;
      67:     }
```

### Data Flow Step 63: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 74, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
>>>   74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
      75:         } catch (IOException e) {
      76:             throw new RuntimeException(e);
      77:         }
      78:         facade.getResponse().end();
      79:     }
```

### Data Flow Step 64: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 74, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
>>>   74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
      75:         } catch (IOException e) {
      76:             throw new RuntimeException(e);
      77:         }
      78:         facade.getResponse().end();
      79:     }
```

## Code Flow 2

### Thread Flow 1

### Data Flow Step 1: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 112, Column 34
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
     107:             throw new java.io.IOException("Bad status: " + status);
     108:         }
     109:         if (entity == null) {
     110:             throw new java.io.IOException("No Entity");
     111:         }
>>>  112:         java.io.InputStream is = entity.getContent();
     113:         try {
     114:             tokenResponse = JsonSerialization.readValue(is, AccessTokenResponse.class);
     115:         } finally {
     116:             try {
     117:                 is.close();
```

### Data Flow Step 2: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 114, Column 57
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
     109:         if (entity == null) {
     110:             throw new java.io.IOException("No Entity");
     111:         }
     112:         java.io.InputStream is = entity.getContent();
     113:         try {
>>>  114:             tokenResponse = JsonSerialization.readValue(is, AccessTokenResponse.class);
     115:         } finally {
     116:             try {
     117:                 is.close();
     118:             } catch (java.io.IOException ignored) { }
     119:         }
```

### Data Flow Step 3: core/src/main/java/org/keycloak/util/JsonSerialization.java, Line 78, Column 35
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/util/JsonSerialization.java
```java
      73: 
      74:     public static <T> T readValue(String bytes, Class<T> type) throws IOException {
      75:         return mapper.readValue(bytes, type);
      76:     }
      77: 
>>>   78:     public static <T> T readValue(InputStream bytes, Class<T> type) throws IOException {
      79:         return readValue(bytes, type, false);
      80:     }
      81: 
      82:     public static <T> T readValue(String string, TypeReference<T> type) throws IOException {
      83:         return mapper.readValue(string, type);
```

### Data Flow Step 4: core/src/main/java/org/keycloak/util/JsonSerialization.java, Line 79, Column 26
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/util/JsonSerialization.java
```java
      74:     public static <T> T readValue(String bytes, Class<T> type) throws IOException {
      75:         return mapper.readValue(bytes, type);
      76:     }
      77: 
      78:     public static <T> T readValue(InputStream bytes, Class<T> type) throws IOException {
>>>   79:         return readValue(bytes, type, false);
      80:     }
      81: 
      82:     public static <T> T readValue(String string, TypeReference<T> type) throws IOException {
      83:         return mapper.readValue(string, type);
      84:     }
```

### Data Flow Step 5: core/src/main/java/org/keycloak/util/JsonSerialization.java, Line 90, Column 35
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/util/JsonSerialization.java
```java
      85: 
      86:     public static <T> T readValue(InputStream bytes, TypeReference<T> type) throws IOException {
      87:         return mapper.readValue(bytes, type);
      88:     }
      89: 
>>>   90:     public static <T> T readValue(InputStream bytes, Class<T> type, boolean replaceSystemProperties) throws IOException {
      91:         if (replaceSystemProperties) {
      92:             return sysPropertiesAwareMapper.readValue(bytes, type);
      93:         } else {
      94:             return mapper.readValue(bytes, type);
      95:         }
```

### Data Flow Step 6: core/src/main/java/org/keycloak/util/JsonSerialization.java, Line 94, Column 37
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/util/JsonSerialization.java
```java
      89: 
      90:     public static <T> T readValue(InputStream bytes, Class<T> type, boolean replaceSystemProperties) throws IOException {
      91:         if (replaceSystemProperties) {
      92:             return sysPropertiesAwareMapper.readValue(bytes, type);
      93:         } else {
>>>   94:             return mapper.readValue(bytes, type);
      95:         }
      96:     }
      97: 
      98:     /**
      99:      * Creates an {@link ObjectNode} based on the given {@code pojo}, copying all its properties to the resulting {@link ObjectNode}.
```

### Data Flow Step 7: core/src/main/java/org/keycloak/util/JsonSerialization.java, Line 94, Column 20
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/util/JsonSerialization.java
```java
      89: 
      90:     public static <T> T readValue(InputStream bytes, Class<T> type, boolean replaceSystemProperties) throws IOException {
      91:         if (replaceSystemProperties) {
      92:             return sysPropertiesAwareMapper.readValue(bytes, type);
      93:         } else {
>>>   94:             return mapper.readValue(bytes, type);
      95:         }
      96:     }
      97: 
      98:     /**
      99:      * Creates an {@link ObjectNode} based on the given {@code pojo}, copying all its properties to the resulting {@link ObjectNode}.
```

### Data Flow Step 8: core/src/main/java/org/keycloak/util/JsonSerialization.java, Line 79, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/util/JsonSerialization.java
```java
      74:     public static <T> T readValue(String bytes, Class<T> type) throws IOException {
      75:         return mapper.readValue(bytes, type);
      76:     }
      77: 
      78:     public static <T> T readValue(InputStream bytes, Class<T> type) throws IOException {
>>>   79:         return readValue(bytes, type, false);
      80:     }
      81: 
      82:     public static <T> T readValue(String string, TypeReference<T> type) throws IOException {
      83:         return mapper.readValue(string, type);
      84:     }
```

### Data Flow Step 9: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 114, Column 29
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
     109:         if (entity == null) {
     110:             throw new java.io.IOException("No Entity");
     111:         }
     112:         java.io.InputStream is = entity.getContent();
     113:         try {
>>>  114:             tokenResponse = JsonSerialization.readValue(is, AccessTokenResponse.class);
     115:         } finally {
     116:             try {
     117:                 is.close();
     118:             } catch (java.io.IOException ignored) { }
     119:         }
```

### Data Flow Step 10: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 121, Column 14
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
     116:             try {
     117:                 is.close();
     118:             } catch (java.io.IOException ignored) { }
     119:         }
     120: 
>>>  121:     	return (tokenResponse);
     122:     }
     123: 
     124: }
```

### Data Flow Step 11: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 76, Column 19
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
      71:         try {
      72:             String userpw=new String(Base64.decode(tokenString));
      73:             int seperatorIndex = userpw.indexOf(":");
      74:             String user = userpw.substring(0, seperatorIndex);
      75:             String pw = userpw.substring(seperatorIndex + 1);
>>>   76:             atr = getToken(user, pw);
      77:             tokenString = atr.getToken();
      78:         } catch (Exception e) {
      79:             log.debug("Failed to obtain token", e);
      80:             challenge = challengeResponse(exchange, OIDCAuthenticationError.Reason.INVALID_TOKEN, "no_token", e.getMessage());
      81:             return AuthOutcome.FAILED;
```

### Data Flow Step 12: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 77, Column 27
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
      72:             String userpw=new String(Base64.decode(tokenString));
      73:             int seperatorIndex = userpw.indexOf(":");
      74:             String user = userpw.substring(0, seperatorIndex);
      75:             String pw = userpw.substring(seperatorIndex + 1);
      76:             atr = getToken(user, pw);
>>>   77:             tokenString = atr.getToken();
      78:         } catch (Exception e) {
      79:             log.debug("Failed to obtain token", e);
      80:             challenge = challengeResponse(exchange, OIDCAuthenticationError.Reason.INVALID_TOKEN, "no_token", e.getMessage());
      81:             return AuthOutcome.FAILED;
      82:         }
```

### Data Flow Step 13: core/src/main/java/org/keycloak/representations/AccessTokenResponse.java, Line 81, Column 19
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/representations/AccessTokenResponse.java
```java
      76: 
      77:     public void setScope(String scope) {
      78:         this.scope = scope;
      79:     }
      80: 
>>>   81:     public String getToken() {
      82:         return token;
      83:     }
      84: 
      85:     public void setToken(String token) {
      86:         this.token = token;
```

### Data Flow Step 14: core/src/main/java/org/keycloak/representations/AccessTokenResponse.java, Line 82, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/representations/AccessTokenResponse.java
```java
      77:     public void setScope(String scope) {
      78:         this.scope = scope;
      79:     }
      80: 
      81:     public String getToken() {
>>>   82:         return token;
      83:     }
      84: 
      85:     public void setToken(String token) {
      86:         this.token = token;
      87:     }
```

### Data Flow Step 15: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 77, Column 27
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
      72:             String userpw=new String(Base64.decode(tokenString));
      73:             int seperatorIndex = userpw.indexOf(":");
      74:             String user = userpw.substring(0, seperatorIndex);
      75:             String pw = userpw.substring(seperatorIndex + 1);
      76:             atr = getToken(user, pw);
>>>   77:             tokenString = atr.getToken();
      78:         } catch (Exception e) {
      79:             log.debug("Failed to obtain token", e);
      80:             challenge = challengeResponse(exchange, OIDCAuthenticationError.Reason.INVALID_TOKEN, "no_token", e.getMessage());
      81:             return AuthOutcome.FAILED;
      82:         }
```

### Data Flow Step 16: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 77, Column 13
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
      72:             String userpw=new String(Base64.decode(tokenString));
      73:             int seperatorIndex = userpw.indexOf(":");
      74:             String user = userpw.substring(0, seperatorIndex);
      75:             String pw = userpw.substring(seperatorIndex + 1);
      76:             atr = getToken(user, pw);
>>>   77:             tokenString = atr.getToken();
      78:         } catch (Exception e) {
      79:             log.debug("Failed to obtain token", e);
      80:             challenge = challengeResponse(exchange, OIDCAuthenticationError.Reason.INVALID_TOKEN, "no_token", e.getMessage());
      81:             return AuthOutcome.FAILED;
      82:         }
```

### Data Flow Step 17: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 48, Column 24
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
      43: 
      44:     public BasicAuthRequestAuthenticator(KeycloakDeployment deployment) {
      45:     	super(deployment);
      46:     }
      47: 
>>>   48:     public AuthOutcome authenticate(HttpFacade exchange)  {
      49:         List<String> authHeaders = exchange.getRequest().getHeaders("Authorization");
      50:         if (authHeaders == null || authHeaders.isEmpty()) {
      51:             log.debug("Authorization header not present");
      52:             challenge = challengeResponse(exchange, OIDCAuthenticationError.Reason.NO_AUTHORIZATION_HEADER, null, null);
      53:             return AuthOutcome.NOT_ATTEMPTED;
```

### Data Flow Step 18: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 218, Column 23
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     213:         BearerTokenRequestAuthenticator authenticator = new BearerTokenRequestAuthenticator(resolvedDeployment);
     214:         AuthOutcome outcome = authenticator.authenticate(facade);
     215: 
     216:         if (outcome == AuthOutcome.NOT_ATTEMPTED && resolvedDeployment.isEnableBasicAuth()) {
     217:             authenticator = new BasicAuthRequestAuthenticator(resolvedDeployment);
>>>  218:             outcome = authenticator.authenticate(facade);
     219:         }
     220: 
     221:         if (outcome == AuthOutcome.FAILED || outcome == AuthOutcome.NOT_ATTEMPTED) {
     222:             AuthChallenge challenge = authenticator.getChallenge();
     223:             log.fine("Authentication outcome: " + outcome);
```

### Data Flow Step 19: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 241, Column 71
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     236:             if (verifySslFailed(facade, resolvedDeployment)) {
     237:                 return;
     238:             }
     239:         }
     240: 
>>>  241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
```

### Data Flow Step 20: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 245, Column 141
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     240: 
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
>>>  245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
```

### Data Flow Step 21: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 246, Column 121
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
>>>  246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
     251:         facade.setSecurityContext(skSession);
```

### Data Flow Step 22: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java, Line 54, Column 19
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java
```java
      49: 
      50:     public AuthChallenge getChallenge() {
      51:         return challenge;
      52:     }
      53: 
>>>   54:     public String getTokenString() {
      55:         return tokenString;
      56:     }
      57: 
      58:     public AccessToken getToken() {
      59:         return token;
```

### Data Flow Step 23: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java, Line 55, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java
```java
      50:     public AuthChallenge getChallenge() {
      51:         return challenge;
      52:     }
      53: 
      54:     public String getTokenString() {
>>>   55:         return tokenString;
      56:     }
      57: 
      58:     public AccessToken getToken() {
      59:         return token;
      60:     }
```

### Data Flow Step 24: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java, Line 55, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java
```java
      50:     public AuthChallenge getChallenge() {
      51:         return challenge;
      52:     }
      53: 
      54:     public String getTokenString() {
>>>   55:         return tokenString;
      56:     }
      57: 
      58:     public AccessToken getToken() {
      59:         return token;
      60:     }
```

### Data Flow Step 25: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 246, Column 121
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
>>>  246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
     251:         facade.setSecurityContext(skSession);
```

### Data Flow Step 26: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 47, Column 108
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      42:     protected String refreshToken;
      43: 
      44:     public RefreshableKeycloakSecurityContext() {
      45:     }
      46: 
>>>   47:     public RefreshableKeycloakSecurityContext(KeycloakDeployment deployment, AdapterTokenStore tokenStore, String tokenString, AccessToken token, String idTokenString, IDToken idToken, String refreshToken) {
      48:         super(tokenString, token, idTokenString, idToken);
      49:         this.deployment = deployment;
      50:         this.tokenStore = tokenStore;
      51:         this.refreshToken = refreshToken;
      52:     }
```

### Data Flow Step 27: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 48, Column 15
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      43: 
      44:     public RefreshableKeycloakSecurityContext() {
      45:     }
      46: 
      47:     public RefreshableKeycloakSecurityContext(KeycloakDeployment deployment, AdapterTokenStore tokenStore, String tokenString, AccessToken token, String idTokenString, IDToken idToken, String refreshToken) {
>>>   48:         super(tokenString, token, idTokenString, idToken);
      49:         this.deployment = deployment;
      50:         this.tokenStore = tokenStore;
      51:         this.refreshToken = refreshToken;
      52:     }
      53: 
```

### Data Flow Step 28: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 50, Column 36
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      45:     protected transient AuthorizationContext authorizationContext;
      46: 
      47:     public KeycloakSecurityContext() {
      48:     }
      49: 
>>>   50:     public KeycloakSecurityContext(String tokenString, AccessToken token, String idTokenString, IDToken idToken) {
      51:         this.tokenString = tokenString;
      52:         this.token = token;
      53:         this.idToken = idToken;
      54:         this.idTokenString = idTokenString;
      55:     }
```

### Data Flow Step 29: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 51, Column 28
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      46: 
      47:     public KeycloakSecurityContext() {
      48:     }
      49: 
      50:     public KeycloakSecurityContext(String tokenString, AccessToken token, String idTokenString, IDToken idToken) {
>>>   51:         this.tokenString = tokenString;
      52:         this.token = token;
      53:         this.idToken = idToken;
      54:         this.idTokenString = idTokenString;
      55:     }
      56: 
```

### Data Flow Step 30: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 51, Column 9
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      46: 
      47:     public KeycloakSecurityContext() {
      48:     }
      49: 
      50:     public KeycloakSecurityContext(String tokenString, AccessToken token, String idTokenString, IDToken idToken) {
>>>   51:         this.tokenString = tokenString;
      52:         this.token = token;
      53:         this.idToken = idToken;
      54:         this.idTokenString = idTokenString;
      55:     }
      56: 
```

### Data Flow Step 31: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 50, Column 12
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      45:     protected transient AuthorizationContext authorizationContext;
      46: 
      47:     public KeycloakSecurityContext() {
      48:     }
      49: 
>>>   50:     public KeycloakSecurityContext(String tokenString, AccessToken token, String idTokenString, IDToken idToken) {
      51:         this.tokenString = tokenString;
      52:         this.token = token;
      53:         this.idToken = idToken;
      54:         this.idTokenString = idTokenString;
      55:     }
```

### Data Flow Step 32: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 48, Column 9
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      43: 
      44:     public RefreshableKeycloakSecurityContext() {
      45:     }
      46: 
      47:     public RefreshableKeycloakSecurityContext(KeycloakDeployment deployment, AdapterTokenStore tokenStore, String tokenString, AccessToken token, String idTokenString, IDToken idToken, String refreshToken) {
>>>   48:         super(tokenString, token, idTokenString, idToken);
      49:         this.deployment = deployment;
      50:         this.tokenStore = tokenStore;
      51:         this.refreshToken = refreshToken;
      52:     }
      53: 
```

### Data Flow Step 33: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 47, Column 12
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      42:     protected String refreshToken;
      43: 
      44:     public RefreshableKeycloakSecurityContext() {
      45:     }
      46: 
>>>   47:     public RefreshableKeycloakSecurityContext(KeycloakDeployment deployment, AdapterTokenStore tokenStore, String tokenString, AccessToken token, String idTokenString, IDToken idToken, String refreshToken) {
      48:         super(tokenString, token, idTokenString, idToken);
      49:         this.deployment = deployment;
      50:         this.tokenStore = tokenStore;
      51:         this.refreshToken = refreshToken;
      52:     }
```

### Data Flow Step 34: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 246, Column 56
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
>>>  246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
     251:         facade.setSecurityContext(skSession);
```

### Data Flow Step 35: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 251, Column 35
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
>>>  251:         facade.setSecurityContext(skSession);
     252:         String principalName = AdapterUtils.getPrincipalName(resolvedDeployment, bearer.getToken());
     253:         final KeycloakPrincipal<RefreshableKeycloakSecurityContext> principal = new KeycloakPrincipal<RefreshableKeycloakSecurityContext>(principalName, skSession);
     254:         SecurityContext anonymousSecurityContext = getRequestSecurityContext(request);
     255:         final boolean isSecure = anonymousSecurityContext.isSecure();
     256:         final Set<String> roles = AdapterUtils.getRolesFromSecurityContext(skSession);
```

### Data Flow Step 36: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 218, Column 36
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     213:     @Override
     214:     public KeycloakSecurityContext getSecurityContext() {
     215:         return keycloakSecurityContext;
     216:     }
     217: 
>>>  218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
     219:         this.keycloakSecurityContext = securityContext;
     220:     }
     221: 
     222:     @Override
     223:     public Request getRequest() {
```

### Data Flow Step 37: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 219, Column 40
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     214:     public KeycloakSecurityContext getSecurityContext() {
     215:         return keycloakSecurityContext;
     216:     }
     217: 
     218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
>>>  219:         this.keycloakSecurityContext = securityContext;
     220:     }
     221: 
     222:     @Override
     223:     public Request getRequest() {
     224:         return requestFacade;
```

### Data Flow Step 38: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 219, Column 9
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     214:     public KeycloakSecurityContext getSecurityContext() {
     215:         return keycloakSecurityContext;
     216:     }
     217: 
     218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
>>>  219:         this.keycloakSecurityContext = securityContext;
     220:     }
     221: 
     222:     @Override
     223:     public Request getRequest() {
     224:         return requestFacade;
```

### Data Flow Step 39: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 218, Column 17
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     213:     @Override
     214:     public KeycloakSecurityContext getSecurityContext() {
     215:         return keycloakSecurityContext;
     216:     }
     217: 
>>>  218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
     219:         this.keycloakSecurityContext = securityContext;
     220:     }
     221: 
     222:     @Override
     223:     public Request getRequest() {
```

### Data Flow Step 40: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 251, Column 9
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
>>>  251:         facade.setSecurityContext(skSession);
     252:         String principalName = AdapterUtils.getPrincipalName(resolvedDeployment, bearer.getToken());
     253:         final KeycloakPrincipal<RefreshableKeycloakSecurityContext> principal = new KeycloakPrincipal<RefreshableKeycloakSecurityContext>(principalName, skSession);
     254:         SecurityContext anonymousSecurityContext = getRequestSecurityContext(request);
     255:         final boolean isSecure = anonymousSecurityContext.isSecure();
     256:         final Set<String> roles = AdapterUtils.getRolesFromSecurityContext(skSession);
```

### Data Flow Step 41: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 245, Column 45
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     240: 
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
>>>  245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
```

### Data Flow Step 42: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 241, Column 34
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     236:             if (verifySslFailed(facade, resolvedDeployment)) {
     237:                 return;
     238:             }
     239:         }
     240: 
>>>  241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
```

### Data Flow Step 43: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 242, Column 27
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     237:                 return;
     238:             }
     239:         }
     240: 
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
>>>  242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
```

### Data Flow Step 44: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 295, Column 38
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     290: 
     291:     protected SecurityContext getRequestSecurityContext(ContainerRequestContext request) {
     292:         return request.getSecurityContext();
     293:     }
     294: 
>>>  295:     protected void handleAuthActions(JaxrsHttpFacade facade, KeycloakDeployment deployment) {
     296:         AuthenticatedActionsHandler authActionsHandler = new AuthenticatedActionsHandler(deployment, facade);
     297:         if (authActionsHandler.handledRequest()) {
     298:             // Send response now (if not already sent)
     299:             if (!facade.isResponseFinished()) {
     300:                 facade.getResponse().end();
```

### Data Flow Step 45: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 296, Column 102
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     291:     protected SecurityContext getRequestSecurityContext(ContainerRequestContext request) {
     292:         return request.getSecurityContext();
     293:     }
     294: 
     295:     protected void handleAuthActions(JaxrsHttpFacade facade, KeycloakDeployment deployment) {
>>>  296:         AuthenticatedActionsHandler authActionsHandler = new AuthenticatedActionsHandler(deployment, facade);
     297:         if (authActionsHandler.handledRequest()) {
     298:             // Send response now (if not already sent)
     299:             if (!facade.isResponseFinished()) {
     300:                 facade.getResponse().end();
     301:             }
```

### Data Flow Step 46: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 49, Column 71
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      44: public class AuthenticatedActionsHandler {
      45:     private static final Logger log = Logger.getLogger(AuthenticatedActionsHandler.class);
      46:     protected KeycloakDeployment deployment;
      47:     protected OIDCHttpFacade facade;
      48: 
>>>   49:     public AuthenticatedActionsHandler(KeycloakDeployment deployment, OIDCHttpFacade facade) {
      50:         this.deployment = deployment;
      51:         this.facade = facade;
      52:     }
      53: 
      54:     public boolean handledRequest() {
```

### Data Flow Step 47: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 51, Column 23
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      46:     protected KeycloakDeployment deployment;
      47:     protected OIDCHttpFacade facade;
      48: 
      49:     public AuthenticatedActionsHandler(KeycloakDeployment deployment, OIDCHttpFacade facade) {
      50:         this.deployment = deployment;
>>>   51:         this.facade = facade;
      52:     }
      53: 
      54:     public boolean handledRequest() {
      55:         log.debugv("AuthenticatedActionsValve.invoke {0}", facade.getRequest().getURI());
      56:         if (corsRequest()) return true;
```

### Data Flow Step 48: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 51, Column 9
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      46:     protected KeycloakDeployment deployment;
      47:     protected OIDCHttpFacade facade;
      48: 
      49:     public AuthenticatedActionsHandler(KeycloakDeployment deployment, OIDCHttpFacade facade) {
      50:         this.deployment = deployment;
>>>   51:         this.facade = facade;
      52:     }
      53: 
      54:     public boolean handledRequest() {
      55:         log.debugv("AuthenticatedActionsValve.invoke {0}", facade.getRequest().getURI());
      56:         if (corsRequest()) return true;
```

### Data Flow Step 49: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 49, Column 12
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      44: public class AuthenticatedActionsHandler {
      45:     private static final Logger log = Logger.getLogger(AuthenticatedActionsHandler.class);
      46:     protected KeycloakDeployment deployment;
      47:     protected OIDCHttpFacade facade;
      48: 
>>>   49:     public AuthenticatedActionsHandler(KeycloakDeployment deployment, OIDCHttpFacade facade) {
      50:         this.deployment = deployment;
      51:         this.facade = facade;
      52:     }
      53: 
      54:     public boolean handledRequest() {
```

### Data Flow Step 50: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 296, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     291:     protected SecurityContext getRequestSecurityContext(ContainerRequestContext request) {
     292:         return request.getSecurityContext();
     293:     }
     294: 
     295:     protected void handleAuthActions(JaxrsHttpFacade facade, KeycloakDeployment deployment) {
>>>  296:         AuthenticatedActionsHandler authActionsHandler = new AuthenticatedActionsHandler(deployment, facade);
     297:         if (authActionsHandler.handledRequest()) {
     298:             // Send response now (if not already sent)
     299:             if (!facade.isResponseFinished()) {
     300:                 facade.getResponse().end();
     301:             }
```

### Data Flow Step 51: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 297, Column 13
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     292:         return request.getSecurityContext();
     293:     }
     294: 
     295:     protected void handleAuthActions(JaxrsHttpFacade facade, KeycloakDeployment deployment) {
     296:         AuthenticatedActionsHandler authActionsHandler = new AuthenticatedActionsHandler(deployment, facade);
>>>  297:         if (authActionsHandler.handledRequest()) {
     298:             // Send response now (if not already sent)
     299:             if (!facade.isResponseFinished()) {
     300:                 facade.getResponse().end();
     301:             }
     302:         }
```

### Data Flow Step 52: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 54, Column 20
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      49:     public AuthenticatedActionsHandler(KeycloakDeployment deployment, OIDCHttpFacade facade) {
      50:         this.deployment = deployment;
      51:         this.facade = facade;
      52:     }
      53: 
>>>   54:     public boolean handledRequest() {
      55:         log.debugv("AuthenticatedActionsValve.invoke {0}", facade.getRequest().getURI());
      56:         if (corsRequest()) return true;
      57:         String requestUri = facade.getRequest().getURI();
      58:         if (requestUri.endsWith(AdapterConstants.K_QUERY_BEARER_TOKEN)) {
      59:             queryBearerToken();
```

### Data Flow Step 53: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 59, Column 13
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      54:     public boolean handledRequest() {
      55:         log.debugv("AuthenticatedActionsValve.invoke {0}", facade.getRequest().getURI());
      56:         if (corsRequest()) return true;
      57:         String requestUri = facade.getRequest().getURI();
      58:         if (requestUri.endsWith(AdapterConstants.K_QUERY_BEARER_TOKEN)) {
>>>   59:             queryBearerToken();
      60:             return true;
      61:         }
      62:         if (!isAuthorized()) {
      63:             return true;
      64:         }
```

### Data Flow Step 54: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 68, Column 20
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      63:             return true;
      64:         }
      65:         return false;
      66:     }
      67: 
>>>   68:     protected void queryBearerToken()  {
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
```

### Data Flow Step 55: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 69, Column 43
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      64:         }
      65:         return false;
      66:     }
      67: 
      68:     protected void queryBearerToken()  {
>>>   69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
      74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
```

### Data Flow Step 56: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 69, Column 43
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      64:         }
      65:         return false;
      66:     }
      67: 
      68:     protected void queryBearerToken()  {
>>>   69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
      74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
```

### Data Flow Step 57: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 74, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
>>>   74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
      75:         } catch (IOException e) {
      76:             throw new RuntimeException(e);
      77:         }
      78:         facade.getResponse().end();
      79:     }
```

### Data Flow Step 58: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 214, Column 36
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     209:             responseFinished = true;
     210:         }
     211:     }
     212: 
     213:     @Override
>>>  214:     public KeycloakSecurityContext getSecurityContext() {
     215:         return keycloakSecurityContext;
     216:     }
     217: 
     218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
     219:         this.keycloakSecurityContext = securityContext;
```

### Data Flow Step 59: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 215, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     210:         }
     211:     }
     212: 
     213:     @Override
     214:     public KeycloakSecurityContext getSecurityContext() {
>>>  215:         return keycloakSecurityContext;
     216:     }
     217: 
     218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
     219:         this.keycloakSecurityContext = securityContext;
     220:     }
```

### Data Flow Step 60: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 215, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     210:         }
     211:     }
     212: 
     213:     @Override
     214:     public KeycloakSecurityContext getSecurityContext() {
>>>  215:         return keycloakSecurityContext;
     216:     }
     217: 
     218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
     219:         this.keycloakSecurityContext = securityContext;
     220:     }
```

### Data Flow Step 61: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 74, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
>>>   74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
      75:         } catch (IOException e) {
      76:             throw new RuntimeException(e);
      77:         }
      78:         facade.getResponse().end();
      79:     }
```

### Data Flow Step 62: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 61, Column 19
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      56:         refreshExpiredToken(true);
      57:         return super.getToken();
      58:     }
      59: 
      60:     @Override
>>>   61:     public String getTokenString() {
      62:         refreshExpiredToken(true);
      63:         return super.getTokenString();
      64:     }
      65: 
      66:     @Override
```

### Data Flow Step 63: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 63, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      58:     }
      59: 
      60:     @Override
      61:     public String getTokenString() {
      62:         refreshExpiredToken(true);
>>>   63:         return super.getTokenString();
      64:     }
      65: 
      66:     @Override
      67:     public IDToken getIdToken() {
      68:         refreshExpiredToken(true);
```

### Data Flow Step 64: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 61, Column 19
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      56: 
      57:     public AccessToken getToken() {
      58:         return token;
      59:     }
      60: 
>>>   61:     public String getTokenString() {
      62:         return tokenString;
      63:     }
      64: 
      65:     public AuthorizationContext getAuthorizationContext() {
      66:         return authorizationContext;
```

### Data Flow Step 65: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 62, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      57:     public AccessToken getToken() {
      58:         return token;
      59:     }
      60: 
      61:     public String getTokenString() {
>>>   62:         return tokenString;
      63:     }
      64: 
      65:     public AuthorizationContext getAuthorizationContext() {
      66:         return authorizationContext;
      67:     }
```

### Data Flow Step 66: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 62, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      57:     public AccessToken getToken() {
      58:         return token;
      59:     }
      60: 
      61:     public String getTokenString() {
>>>   62:         return tokenString;
      63:     }
      64: 
      65:     public AuthorizationContext getAuthorizationContext() {
      66:         return authorizationContext;
      67:     }
```

### Data Flow Step 67: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 63, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      58:     }
      59: 
      60:     @Override
      61:     public String getTokenString() {
      62:         refreshExpiredToken(true);
>>>   63:         return super.getTokenString();
      64:     }
      65: 
      66:     @Override
      67:     public IDToken getIdToken() {
      68:         refreshExpiredToken(true);
```

### Data Flow Step 68: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 74, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
>>>   74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
      75:         } catch (IOException e) {
      76:             throw new RuntimeException(e);
      77:         }
      78:         facade.getResponse().end();
      79:     }
```

### Data Flow Step 69: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 74, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
>>>   74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
      75:         } catch (IOException e) {
      76:             throw new RuntimeException(e);
      77:         }
      78:         facade.getResponse().end();
      79:     }
```

## Code Flow 3

### Thread Flow 1

### Data Flow Step 1: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 114, Column 54
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     109:             return requestContext.getHeaderString(name);
     110:         }
     111: 
     112:         @Override
     113:         public List<String> getHeaders(String name) {
>>>  114:             MultivaluedMap<String, String> headers = requestContext.getHeaders();
     115:             return (headers == null) ? null : headers.get(name);
     116:         }
     117: 
     118:         @Override
     119:         public InputStream getInputStream() {
```

### Data Flow Step 2: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 115, Column 47
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     110:         }
     111: 
     112:         @Override
     113:         public List<String> getHeaders(String name) {
     114:             MultivaluedMap<String, String> headers = requestContext.getHeaders();
>>>  115:             return (headers == null) ? null : headers.get(name);
     116:         }
     117: 
     118:         @Override
     119:         public InputStream getInputStream() {
     120:             return getInputStream(false);
```

### Data Flow Step 3: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 115, Column 47
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     110:         }
     111: 
     112:         @Override
     113:         public List<String> getHeaders(String name) {
     114:             MultivaluedMap<String, String> headers = requestContext.getHeaders();
>>>  115:             return (headers == null) ? null : headers.get(name);
     116:         }
     117: 
     118:         @Override
     119:         public InputStream getInputStream() {
     120:             return getInputStream(false);
```

### Data Flow Step 4: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 115, Column 20
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     110:         }
     111: 
     112:         @Override
     113:         public List<String> getHeaders(String name) {
     114:             MultivaluedMap<String, String> headers = requestContext.getHeaders();
>>>  115:             return (headers == null) ? null : headers.get(name);
     116:         }
     117: 
     118:         @Override
     119:         public InputStream getInputStream() {
     120:             return getInputStream(false);
```

### Data Flow Step 5: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 49, Column 36
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
      44:     public BasicAuthRequestAuthenticator(KeycloakDeployment deployment) {
      45:     	super(deployment);
      46:     }
      47: 
      48:     public AuthOutcome authenticate(HttpFacade exchange)  {
>>>   49:         List<String> authHeaders = exchange.getRequest().getHeaders("Authorization");
      50:         if (authHeaders == null || authHeaders.isEmpty()) {
      51:             log.debug("Authorization header not present");
      52:             challenge = challengeResponse(exchange, OIDCAuthenticationError.Reason.NO_AUTHORIZATION_HEADER, null, null);
      53:             return AuthOutcome.NOT_ATTEMPTED;
      54:         }
```

### Data Flow Step 6: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 58, Column 30
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
      53:             return AuthOutcome.NOT_ATTEMPTED;
      54:         }
      55: 
      56:         tokenString = null;
      57:         for (String authHeader : authHeaders) {
>>>   58:             String[] split = authHeader.trim().split("\\s+");
      59:             if (split.length != 2) continue;
      60:             if (!split[0].equalsIgnoreCase("Basic")) continue;
      61:             tokenString = split[1];
      62:         }
      63: 
```

### Data Flow Step 7: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 58, Column 30
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
      53:             return AuthOutcome.NOT_ATTEMPTED;
      54:         }
      55: 
      56:         tokenString = null;
      57:         for (String authHeader : authHeaders) {
>>>   58:             String[] split = authHeader.trim().split("\\s+");
      59:             if (split.length != 2) continue;
      60:             if (!split[0].equalsIgnoreCase("Basic")) continue;
      61:             tokenString = split[1];
      62:         }
      63: 
```

### Data Flow Step 8: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 58, Column 30
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
      53:             return AuthOutcome.NOT_ATTEMPTED;
      54:         }
      55: 
      56:         tokenString = null;
      57:         for (String authHeader : authHeaders) {
>>>   58:             String[] split = authHeader.trim().split("\\s+");
      59:             if (split.length != 2) continue;
      60:             if (!split[0].equalsIgnoreCase("Basic")) continue;
      61:             tokenString = split[1];
      62:         }
      63: 
```

### Data Flow Step 9: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 61, Column 27
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
      56:         tokenString = null;
      57:         for (String authHeader : authHeaders) {
      58:             String[] split = authHeader.trim().split("\\s+");
      59:             if (split.length != 2) continue;
      60:             if (!split[0].equalsIgnoreCase("Basic")) continue;
>>>   61:             tokenString = split[1];
      62:         }
      63: 
      64:         if (tokenString == null) {
      65:             log.debug("Token is not present in Authorization header");
      66:             challenge = challengeResponse(exchange, OIDCAuthenticationError.Reason.INVALID_TOKEN, null, null);
```

### Data Flow Step 10: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 61, Column 13
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
      56:         tokenString = null;
      57:         for (String authHeader : authHeaders) {
      58:             String[] split = authHeader.trim().split("\\s+");
      59:             if (split.length != 2) continue;
      60:             if (!split[0].equalsIgnoreCase("Basic")) continue;
>>>   61:             tokenString = split[1];
      62:         }
      63: 
      64:         if (tokenString == null) {
      65:             log.debug("Token is not present in Authorization header");
      66:             challenge = challengeResponse(exchange, OIDCAuthenticationError.Reason.INVALID_TOKEN, null, null);
```

### Data Flow Step 11: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java, Line 48, Column 24
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BasicAuthRequestAuthenticator.java
```java
      43: 
      44:     public BasicAuthRequestAuthenticator(KeycloakDeployment deployment) {
      45:     	super(deployment);
      46:     }
      47: 
>>>   48:     public AuthOutcome authenticate(HttpFacade exchange)  {
      49:         List<String> authHeaders = exchange.getRequest().getHeaders("Authorization");
      50:         if (authHeaders == null || authHeaders.isEmpty()) {
      51:             log.debug("Authorization header not present");
      52:             challenge = challengeResponse(exchange, OIDCAuthenticationError.Reason.NO_AUTHORIZATION_HEADER, null, null);
      53:             return AuthOutcome.NOT_ATTEMPTED;
```

### Data Flow Step 12: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 218, Column 23
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     213:         BearerTokenRequestAuthenticator authenticator = new BearerTokenRequestAuthenticator(resolvedDeployment);
     214:         AuthOutcome outcome = authenticator.authenticate(facade);
     215: 
     216:         if (outcome == AuthOutcome.NOT_ATTEMPTED && resolvedDeployment.isEnableBasicAuth()) {
     217:             authenticator = new BasicAuthRequestAuthenticator(resolvedDeployment);
>>>  218:             outcome = authenticator.authenticate(facade);
     219:         }
     220: 
     221:         if (outcome == AuthOutcome.FAILED || outcome == AuthOutcome.NOT_ATTEMPTED) {
     222:             AuthChallenge challenge = authenticator.getChallenge();
     223:             log.fine("Authentication outcome: " + outcome);
```

### Data Flow Step 13: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 241, Column 71
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     236:             if (verifySslFailed(facade, resolvedDeployment)) {
     237:                 return;
     238:             }
     239:         }
     240: 
>>>  241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
```

### Data Flow Step 14: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 245, Column 141
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     240: 
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
>>>  245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
```

### Data Flow Step 15: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 246, Column 121
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
>>>  246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
     251:         facade.setSecurityContext(skSession);
```

### Data Flow Step 16: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java, Line 54, Column 19
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java
```java
      49: 
      50:     public AuthChallenge getChallenge() {
      51:         return challenge;
      52:     }
      53: 
>>>   54:     public String getTokenString() {
      55:         return tokenString;
      56:     }
      57: 
      58:     public AccessToken getToken() {
      59:         return token;
```

### Data Flow Step 17: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java, Line 55, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java
```java
      50:     public AuthChallenge getChallenge() {
      51:         return challenge;
      52:     }
      53: 
      54:     public String getTokenString() {
>>>   55:         return tokenString;
      56:     }
      57: 
      58:     public AccessToken getToken() {
      59:         return token;
      60:     }
```

### Data Flow Step 18: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java, Line 55, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java
```java
      50:     public AuthChallenge getChallenge() {
      51:         return challenge;
      52:     }
      53: 
      54:     public String getTokenString() {
>>>   55:         return tokenString;
      56:     }
      57: 
      58:     public AccessToken getToken() {
      59:         return token;
      60:     }
```

### Data Flow Step 19: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 246, Column 121
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
>>>  246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
     251:         facade.setSecurityContext(skSession);
```

### Data Flow Step 20: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 47, Column 108
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      42:     protected String refreshToken;
      43: 
      44:     public RefreshableKeycloakSecurityContext() {
      45:     }
      46: 
>>>   47:     public RefreshableKeycloakSecurityContext(KeycloakDeployment deployment, AdapterTokenStore tokenStore, String tokenString, AccessToken token, String idTokenString, IDToken idToken, String refreshToken) {
      48:         super(tokenString, token, idTokenString, idToken);
      49:         this.deployment = deployment;
      50:         this.tokenStore = tokenStore;
      51:         this.refreshToken = refreshToken;
      52:     }
```

### Data Flow Step 21: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 48, Column 15
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      43: 
      44:     public RefreshableKeycloakSecurityContext() {
      45:     }
      46: 
      47:     public RefreshableKeycloakSecurityContext(KeycloakDeployment deployment, AdapterTokenStore tokenStore, String tokenString, AccessToken token, String idTokenString, IDToken idToken, String refreshToken) {
>>>   48:         super(tokenString, token, idTokenString, idToken);
      49:         this.deployment = deployment;
      50:         this.tokenStore = tokenStore;
      51:         this.refreshToken = refreshToken;
      52:     }
      53: 
```

### Data Flow Step 22: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 50, Column 36
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      45:     protected transient AuthorizationContext authorizationContext;
      46: 
      47:     public KeycloakSecurityContext() {
      48:     }
      49: 
>>>   50:     public KeycloakSecurityContext(String tokenString, AccessToken token, String idTokenString, IDToken idToken) {
      51:         this.tokenString = tokenString;
      52:         this.token = token;
      53:         this.idToken = idToken;
      54:         this.idTokenString = idTokenString;
      55:     }
```

### Data Flow Step 23: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 51, Column 28
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      46: 
      47:     public KeycloakSecurityContext() {
      48:     }
      49: 
      50:     public KeycloakSecurityContext(String tokenString, AccessToken token, String idTokenString, IDToken idToken) {
>>>   51:         this.tokenString = tokenString;
      52:         this.token = token;
      53:         this.idToken = idToken;
      54:         this.idTokenString = idTokenString;
      55:     }
      56: 
```

### Data Flow Step 24: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 51, Column 9
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      46: 
      47:     public KeycloakSecurityContext() {
      48:     }
      49: 
      50:     public KeycloakSecurityContext(String tokenString, AccessToken token, String idTokenString, IDToken idToken) {
>>>   51:         this.tokenString = tokenString;
      52:         this.token = token;
      53:         this.idToken = idToken;
      54:         this.idTokenString = idTokenString;
      55:     }
      56: 
```

### Data Flow Step 25: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 50, Column 12
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      45:     protected transient AuthorizationContext authorizationContext;
      46: 
      47:     public KeycloakSecurityContext() {
      48:     }
      49: 
>>>   50:     public KeycloakSecurityContext(String tokenString, AccessToken token, String idTokenString, IDToken idToken) {
      51:         this.tokenString = tokenString;
      52:         this.token = token;
      53:         this.idToken = idToken;
      54:         this.idTokenString = idTokenString;
      55:     }
```

### Data Flow Step 26: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 48, Column 9
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      43: 
      44:     public RefreshableKeycloakSecurityContext() {
      45:     }
      46: 
      47:     public RefreshableKeycloakSecurityContext(KeycloakDeployment deployment, AdapterTokenStore tokenStore, String tokenString, AccessToken token, String idTokenString, IDToken idToken, String refreshToken) {
>>>   48:         super(tokenString, token, idTokenString, idToken);
      49:         this.deployment = deployment;
      50:         this.tokenStore = tokenStore;
      51:         this.refreshToken = refreshToken;
      52:     }
      53: 
```

### Data Flow Step 27: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 47, Column 12
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      42:     protected String refreshToken;
      43: 
      44:     public RefreshableKeycloakSecurityContext() {
      45:     }
      46: 
>>>   47:     public RefreshableKeycloakSecurityContext(KeycloakDeployment deployment, AdapterTokenStore tokenStore, String tokenString, AccessToken token, String idTokenString, IDToken idToken, String refreshToken) {
      48:         super(tokenString, token, idTokenString, idToken);
      49:         this.deployment = deployment;
      50:         this.tokenStore = tokenStore;
      51:         this.refreshToken = refreshToken;
      52:     }
```

### Data Flow Step 28: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 246, Column 56
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
>>>  246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
     251:         facade.setSecurityContext(skSession);
```

### Data Flow Step 29: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 251, Column 35
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
>>>  251:         facade.setSecurityContext(skSession);
     252:         String principalName = AdapterUtils.getPrincipalName(resolvedDeployment, bearer.getToken());
     253:         final KeycloakPrincipal<RefreshableKeycloakSecurityContext> principal = new KeycloakPrincipal<RefreshableKeycloakSecurityContext>(principalName, skSession);
     254:         SecurityContext anonymousSecurityContext = getRequestSecurityContext(request);
     255:         final boolean isSecure = anonymousSecurityContext.isSecure();
     256:         final Set<String> roles = AdapterUtils.getRolesFromSecurityContext(skSession);
```

### Data Flow Step 30: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 218, Column 36
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     213:     @Override
     214:     public KeycloakSecurityContext getSecurityContext() {
     215:         return keycloakSecurityContext;
     216:     }
     217: 
>>>  218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
     219:         this.keycloakSecurityContext = securityContext;
     220:     }
     221: 
     222:     @Override
     223:     public Request getRequest() {
```

### Data Flow Step 31: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 219, Column 40
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     214:     public KeycloakSecurityContext getSecurityContext() {
     215:         return keycloakSecurityContext;
     216:     }
     217: 
     218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
>>>  219:         this.keycloakSecurityContext = securityContext;
     220:     }
     221: 
     222:     @Override
     223:     public Request getRequest() {
     224:         return requestFacade;
```

### Data Flow Step 32: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 219, Column 9
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     214:     public KeycloakSecurityContext getSecurityContext() {
     215:         return keycloakSecurityContext;
     216:     }
     217: 
     218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
>>>  219:         this.keycloakSecurityContext = securityContext;
     220:     }
     221: 
     222:     @Override
     223:     public Request getRequest() {
     224:         return requestFacade;
```

### Data Flow Step 33: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 218, Column 17
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     213:     @Override
     214:     public KeycloakSecurityContext getSecurityContext() {
     215:         return keycloakSecurityContext;
     216:     }
     217: 
>>>  218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
     219:         this.keycloakSecurityContext = securityContext;
     220:     }
     221: 
     222:     @Override
     223:     public Request getRequest() {
```

### Data Flow Step 34: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 251, Column 9
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
>>>  251:         facade.setSecurityContext(skSession);
     252:         String principalName = AdapterUtils.getPrincipalName(resolvedDeployment, bearer.getToken());
     253:         final KeycloakPrincipal<RefreshableKeycloakSecurityContext> principal = new KeycloakPrincipal<RefreshableKeycloakSecurityContext>(principalName, skSession);
     254:         SecurityContext anonymousSecurityContext = getRequestSecurityContext(request);
     255:         final boolean isSecure = anonymousSecurityContext.isSecure();
     256:         final Set<String> roles = AdapterUtils.getRolesFromSecurityContext(skSession);
```

### Data Flow Step 35: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 245, Column 45
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     240: 
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
>>>  245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
```

### Data Flow Step 36: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 241, Column 34
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     236:             if (verifySslFailed(facade, resolvedDeployment)) {
     237:                 return;
     238:             }
     239:         }
     240: 
>>>  241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
```

### Data Flow Step 37: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 242, Column 27
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     237:                 return;
     238:             }
     239:         }
     240: 
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
>>>  242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
```

### Data Flow Step 38: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 295, Column 38
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     290: 
     291:     protected SecurityContext getRequestSecurityContext(ContainerRequestContext request) {
     292:         return request.getSecurityContext();
     293:     }
     294: 
>>>  295:     protected void handleAuthActions(JaxrsHttpFacade facade, KeycloakDeployment deployment) {
     296:         AuthenticatedActionsHandler authActionsHandler = new AuthenticatedActionsHandler(deployment, facade);
     297:         if (authActionsHandler.handledRequest()) {
     298:             // Send response now (if not already sent)
     299:             if (!facade.isResponseFinished()) {
     300:                 facade.getResponse().end();
```

### Data Flow Step 39: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 296, Column 102
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     291:     protected SecurityContext getRequestSecurityContext(ContainerRequestContext request) {
     292:         return request.getSecurityContext();
     293:     }
     294: 
     295:     protected void handleAuthActions(JaxrsHttpFacade facade, KeycloakDeployment deployment) {
>>>  296:         AuthenticatedActionsHandler authActionsHandler = new AuthenticatedActionsHandler(deployment, facade);
     297:         if (authActionsHandler.handledRequest()) {
     298:             // Send response now (if not already sent)
     299:             if (!facade.isResponseFinished()) {
     300:                 facade.getResponse().end();
     301:             }
```

### Data Flow Step 40: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 49, Column 71
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      44: public class AuthenticatedActionsHandler {
      45:     private static final Logger log = Logger.getLogger(AuthenticatedActionsHandler.class);
      46:     protected KeycloakDeployment deployment;
      47:     protected OIDCHttpFacade facade;
      48: 
>>>   49:     public AuthenticatedActionsHandler(KeycloakDeployment deployment, OIDCHttpFacade facade) {
      50:         this.deployment = deployment;
      51:         this.facade = facade;
      52:     }
      53: 
      54:     public boolean handledRequest() {
```

### Data Flow Step 41: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 51, Column 23
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      46:     protected KeycloakDeployment deployment;
      47:     protected OIDCHttpFacade facade;
      48: 
      49:     public AuthenticatedActionsHandler(KeycloakDeployment deployment, OIDCHttpFacade facade) {
      50:         this.deployment = deployment;
>>>   51:         this.facade = facade;
      52:     }
      53: 
      54:     public boolean handledRequest() {
      55:         log.debugv("AuthenticatedActionsValve.invoke {0}", facade.getRequest().getURI());
      56:         if (corsRequest()) return true;
```

### Data Flow Step 42: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 51, Column 9
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      46:     protected KeycloakDeployment deployment;
      47:     protected OIDCHttpFacade facade;
      48: 
      49:     public AuthenticatedActionsHandler(KeycloakDeployment deployment, OIDCHttpFacade facade) {
      50:         this.deployment = deployment;
>>>   51:         this.facade = facade;
      52:     }
      53: 
      54:     public boolean handledRequest() {
      55:         log.debugv("AuthenticatedActionsValve.invoke {0}", facade.getRequest().getURI());
      56:         if (corsRequest()) return true;
```

### Data Flow Step 43: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 49, Column 12
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      44: public class AuthenticatedActionsHandler {
      45:     private static final Logger log = Logger.getLogger(AuthenticatedActionsHandler.class);
      46:     protected KeycloakDeployment deployment;
      47:     protected OIDCHttpFacade facade;
      48: 
>>>   49:     public AuthenticatedActionsHandler(KeycloakDeployment deployment, OIDCHttpFacade facade) {
      50:         this.deployment = deployment;
      51:         this.facade = facade;
      52:     }
      53: 
      54:     public boolean handledRequest() {
```

### Data Flow Step 44: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 296, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     291:     protected SecurityContext getRequestSecurityContext(ContainerRequestContext request) {
     292:         return request.getSecurityContext();
     293:     }
     294: 
     295:     protected void handleAuthActions(JaxrsHttpFacade facade, KeycloakDeployment deployment) {
>>>  296:         AuthenticatedActionsHandler authActionsHandler = new AuthenticatedActionsHandler(deployment, facade);
     297:         if (authActionsHandler.handledRequest()) {
     298:             // Send response now (if not already sent)
     299:             if (!facade.isResponseFinished()) {
     300:                 facade.getResponse().end();
     301:             }
```

### Data Flow Step 45: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 297, Column 13
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     292:         return request.getSecurityContext();
     293:     }
     294: 
     295:     protected void handleAuthActions(JaxrsHttpFacade facade, KeycloakDeployment deployment) {
     296:         AuthenticatedActionsHandler authActionsHandler = new AuthenticatedActionsHandler(deployment, facade);
>>>  297:         if (authActionsHandler.handledRequest()) {
     298:             // Send response now (if not already sent)
     299:             if (!facade.isResponseFinished()) {
     300:                 facade.getResponse().end();
     301:             }
     302:         }
```

### Data Flow Step 46: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 54, Column 20
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      49:     public AuthenticatedActionsHandler(KeycloakDeployment deployment, OIDCHttpFacade facade) {
      50:         this.deployment = deployment;
      51:         this.facade = facade;
      52:     }
      53: 
>>>   54:     public boolean handledRequest() {
      55:         log.debugv("AuthenticatedActionsValve.invoke {0}", facade.getRequest().getURI());
      56:         if (corsRequest()) return true;
      57:         String requestUri = facade.getRequest().getURI();
      58:         if (requestUri.endsWith(AdapterConstants.K_QUERY_BEARER_TOKEN)) {
      59:             queryBearerToken();
```

### Data Flow Step 47: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 59, Column 13
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      54:     public boolean handledRequest() {
      55:         log.debugv("AuthenticatedActionsValve.invoke {0}", facade.getRequest().getURI());
      56:         if (corsRequest()) return true;
      57:         String requestUri = facade.getRequest().getURI();
      58:         if (requestUri.endsWith(AdapterConstants.K_QUERY_BEARER_TOKEN)) {
>>>   59:             queryBearerToken();
      60:             return true;
      61:         }
      62:         if (!isAuthorized()) {
      63:             return true;
      64:         }
```

### Data Flow Step 48: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 68, Column 20
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      63:             return true;
      64:         }
      65:         return false;
      66:     }
      67: 
>>>   68:     protected void queryBearerToken()  {
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
```

### Data Flow Step 49: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 74, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
>>>   74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
      75:         } catch (IOException e) {
      76:             throw new RuntimeException(e);
      77:         }
      78:         facade.getResponse().end();
      79:     }
```

### Data Flow Step 50: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 74, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
>>>   74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
      75:         } catch (IOException e) {
      76:             throw new RuntimeException(e);
      77:         }
      78:         facade.getResponse().end();
      79:     }
```

### Data Flow Step 51: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 214, Column 36
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     209:             responseFinished = true;
     210:         }
     211:     }
     212: 
     213:     @Override
>>>  214:     public KeycloakSecurityContext getSecurityContext() {
     215:         return keycloakSecurityContext;
     216:     }
     217: 
     218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
     219:         this.keycloakSecurityContext = securityContext;
```

### Data Flow Step 52: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 215, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     210:         }
     211:     }
     212: 
     213:     @Override
     214:     public KeycloakSecurityContext getSecurityContext() {
>>>  215:         return keycloakSecurityContext;
     216:     }
     217: 
     218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
     219:         this.keycloakSecurityContext = securityContext;
     220:     }
```

### Data Flow Step 53: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 215, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     210:         }
     211:     }
     212: 
     213:     @Override
     214:     public KeycloakSecurityContext getSecurityContext() {
>>>  215:         return keycloakSecurityContext;
     216:     }
     217: 
     218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
     219:         this.keycloakSecurityContext = securityContext;
     220:     }
```

### Data Flow Step 54: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 74, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
>>>   74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
      75:         } catch (IOException e) {
      76:             throw new RuntimeException(e);
      77:         }
      78:         facade.getResponse().end();
      79:     }
```

### Data Flow Step 55: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 61, Column 19
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      56: 
      57:     public AccessToken getToken() {
      58:         return token;
      59:     }
      60: 
>>>   61:     public String getTokenString() {
      62:         return tokenString;
      63:     }
      64: 
      65:     public AuthorizationContext getAuthorizationContext() {
      66:         return authorizationContext;
```

### Data Flow Step 56: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 62, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      57:     public AccessToken getToken() {
      58:         return token;
      59:     }
      60: 
      61:     public String getTokenString() {
>>>   62:         return tokenString;
      63:     }
      64: 
      65:     public AuthorizationContext getAuthorizationContext() {
      66:         return authorizationContext;
      67:     }
```

### Data Flow Step 57: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 62, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      57:     public AccessToken getToken() {
      58:         return token;
      59:     }
      60: 
      61:     public String getTokenString() {
>>>   62:         return tokenString;
      63:     }
      64: 
      65:     public AuthorizationContext getAuthorizationContext() {
      66:         return authorizationContext;
      67:     }
```

### Data Flow Step 58: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 74, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
>>>   74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
      75:         } catch (IOException e) {
      76:             throw new RuntimeException(e);
      77:         }
      78:         facade.getResponse().end();
      79:     }
```

### Data Flow Step 59: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 74, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
>>>   74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
      75:         } catch (IOException e) {
      76:             throw new RuntimeException(e);
      77:         }
      78:         facade.getResponse().end();
      79:     }
```

## Code Flow 4

### Thread Flow 1

### Data Flow Step 1: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 114, Column 54
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     109:             return requestContext.getHeaderString(name);
     110:         }
     111: 
     112:         @Override
     113:         public List<String> getHeaders(String name) {
>>>  114:             MultivaluedMap<String, String> headers = requestContext.getHeaders();
     115:             return (headers == null) ? null : headers.get(name);
     116:         }
     117: 
     118:         @Override
     119:         public InputStream getInputStream() {
```

### Data Flow Step 2: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 115, Column 47
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     110:         }
     111: 
     112:         @Override
     113:         public List<String> getHeaders(String name) {
     114:             MultivaluedMap<String, String> headers = requestContext.getHeaders();
>>>  115:             return (headers == null) ? null : headers.get(name);
     116:         }
     117: 
     118:         @Override
     119:         public InputStream getInputStream() {
     120:             return getInputStream(false);
```

### Data Flow Step 3: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 115, Column 47
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     110:         }
     111: 
     112:         @Override
     113:         public List<String> getHeaders(String name) {
     114:             MultivaluedMap<String, String> headers = requestContext.getHeaders();
>>>  115:             return (headers == null) ? null : headers.get(name);
     116:         }
     117: 
     118:         @Override
     119:         public InputStream getInputStream() {
     120:             return getInputStream(false);
```

### Data Flow Step 4: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 115, Column 20
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     110:         }
     111: 
     112:         @Override
     113:         public List<String> getHeaders(String name) {
     114:             MultivaluedMap<String, String> headers = requestContext.getHeaders();
>>>  115:             return (headers == null) ? null : headers.get(name);
     116:         }
     117: 
     118:         @Override
     119:         public InputStream getInputStream() {
     120:             return getInputStream(false);
```

### Data Flow Step 5: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java, Line 67, Column 36
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java
```java
      62:     public String getSurrogate() {
      63:         return surrogate;
      64:     }
      65: 
      66:     public AuthOutcome authenticate(HttpFacade exchange)  {
>>>   67:         List<String> authHeaders = exchange.getRequest().getHeaders("Authorization");
      68:         if (authHeaders == null || authHeaders.isEmpty()) {
      69:             log.debug("Authorization header not present");
      70:             challenge = challengeResponse(exchange, OIDCAuthenticationError.Reason.NO_BEARER_TOKEN, null, null);
      71:             return AuthOutcome.NOT_ATTEMPTED;
      72:         }
```

### Data Flow Step 6: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java, Line 76, Column 30
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java
```java
      71:             return AuthOutcome.NOT_ATTEMPTED;
      72:         }
      73: 
      74:         tokenString = null;
      75:         for (String authHeader : authHeaders) {
>>>   76:             String[] split = authHeader.trim().split("\\s+");
      77:             if (split.length != 2) continue;
      78:             if (split[0].equalsIgnoreCase("Bearer")) {
      79:                 tokenString = split[1];
      80: 
      81:                 log.debugf("Found [%d] values in authorization header, selecting the first value for Bearer.", (Integer) authHeaders.size());
```

### Data Flow Step 7: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java, Line 76, Column 30
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java
```java
      71:             return AuthOutcome.NOT_ATTEMPTED;
      72:         }
      73: 
      74:         tokenString = null;
      75:         for (String authHeader : authHeaders) {
>>>   76:             String[] split = authHeader.trim().split("\\s+");
      77:             if (split.length != 2) continue;
      78:             if (split[0].equalsIgnoreCase("Bearer")) {
      79:                 tokenString = split[1];
      80: 
      81:                 log.debugf("Found [%d] values in authorization header, selecting the first value for Bearer.", (Integer) authHeaders.size());
```

### Data Flow Step 8: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java, Line 76, Column 30
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java
```java
      71:             return AuthOutcome.NOT_ATTEMPTED;
      72:         }
      73: 
      74:         tokenString = null;
      75:         for (String authHeader : authHeaders) {
>>>   76:             String[] split = authHeader.trim().split("\\s+");
      77:             if (split.length != 2) continue;
      78:             if (split[0].equalsIgnoreCase("Bearer")) {
      79:                 tokenString = split[1];
      80: 
      81:                 log.debugf("Found [%d] values in authorization header, selecting the first value for Bearer.", (Integer) authHeaders.size());
```

### Data Flow Step 9: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java, Line 79, Column 31
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java
```java
      74:         tokenString = null;
      75:         for (String authHeader : authHeaders) {
      76:             String[] split = authHeader.trim().split("\\s+");
      77:             if (split.length != 2) continue;
      78:             if (split[0].equalsIgnoreCase("Bearer")) {
>>>   79:                 tokenString = split[1];
      80: 
      81:                 log.debugf("Found [%d] values in authorization header, selecting the first value for Bearer.", (Integer) authHeaders.size());
      82:                 break;
      83:             }
      84:         }
```

### Data Flow Step 10: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java, Line 79, Column 17
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java
```java
      74:         tokenString = null;
      75:         for (String authHeader : authHeaders) {
      76:             String[] split = authHeader.trim().split("\\s+");
      77:             if (split.length != 2) continue;
      78:             if (split[0].equalsIgnoreCase("Bearer")) {
>>>   79:                 tokenString = split[1];
      80: 
      81:                 log.debugf("Found [%d] values in authorization header, selecting the first value for Bearer.", (Integer) authHeaders.size());
      82:                 break;
      83:             }
      84:         }
```

### Data Flow Step 11: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java, Line 66, Column 24
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java
```java
      61: 
      62:     public String getSurrogate() {
      63:         return surrogate;
      64:     }
      65: 
>>>   66:     public AuthOutcome authenticate(HttpFacade exchange)  {
      67:         List<String> authHeaders = exchange.getRequest().getHeaders("Authorization");
      68:         if (authHeaders == null || authHeaders.isEmpty()) {
      69:             log.debug("Authorization header not present");
      70:             challenge = challengeResponse(exchange, OIDCAuthenticationError.Reason.NO_BEARER_TOKEN, null, null);
      71:             return AuthOutcome.NOT_ATTEMPTED;
```

### Data Flow Step 12: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 214, Column 31
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     209:         return false;
     210:     }
     211: 
     212:     protected void bearerAuthentication(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment) {
     213:         BearerTokenRequestAuthenticator authenticator = new BearerTokenRequestAuthenticator(resolvedDeployment);
>>>  214:         AuthOutcome outcome = authenticator.authenticate(facade);
     215: 
     216:         if (outcome == AuthOutcome.NOT_ATTEMPTED && resolvedDeployment.isEnableBasicAuth()) {
     217:             authenticator = new BasicAuthRequestAuthenticator(resolvedDeployment);
     218:             outcome = authenticator.authenticate(facade);
     219:         }
```

### Data Flow Step 13: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 241, Column 71
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     236:             if (verifySslFailed(facade, resolvedDeployment)) {
     237:                 return;
     238:             }
     239:         }
     240: 
>>>  241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
```

### Data Flow Step 14: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 245, Column 141
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     240: 
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
>>>  245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
```

### Data Flow Step 15: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 246, Column 121
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
>>>  246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
     251:         facade.setSecurityContext(skSession);
```

### Data Flow Step 16: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java, Line 54, Column 19
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java
```java
      49: 
      50:     public AuthChallenge getChallenge() {
      51:         return challenge;
      52:     }
      53: 
>>>   54:     public String getTokenString() {
      55:         return tokenString;
      56:     }
      57: 
      58:     public AccessToken getToken() {
      59:         return token;
```

### Data Flow Step 17: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java, Line 55, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java
```java
      50:     public AuthChallenge getChallenge() {
      51:         return challenge;
      52:     }
      53: 
      54:     public String getTokenString() {
>>>   55:         return tokenString;
      56:     }
      57: 
      58:     public AccessToken getToken() {
      59:         return token;
      60:     }
```

### Data Flow Step 18: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java, Line 55, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/BearerTokenRequestAuthenticator.java
```java
      50:     public AuthChallenge getChallenge() {
      51:         return challenge;
      52:     }
      53: 
      54:     public String getTokenString() {
>>>   55:         return tokenString;
      56:     }
      57: 
      58:     public AccessToken getToken() {
      59:         return token;
      60:     }
```

### Data Flow Step 19: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 246, Column 121
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
>>>  246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
     251:         facade.setSecurityContext(skSession);
```

### Data Flow Step 20: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 47, Column 108
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      42:     protected String refreshToken;
      43: 
      44:     public RefreshableKeycloakSecurityContext() {
      45:     }
      46: 
>>>   47:     public RefreshableKeycloakSecurityContext(KeycloakDeployment deployment, AdapterTokenStore tokenStore, String tokenString, AccessToken token, String idTokenString, IDToken idToken, String refreshToken) {
      48:         super(tokenString, token, idTokenString, idToken);
      49:         this.deployment = deployment;
      50:         this.tokenStore = tokenStore;
      51:         this.refreshToken = refreshToken;
      52:     }
```

### Data Flow Step 21: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 48, Column 15
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      43: 
      44:     public RefreshableKeycloakSecurityContext() {
      45:     }
      46: 
      47:     public RefreshableKeycloakSecurityContext(KeycloakDeployment deployment, AdapterTokenStore tokenStore, String tokenString, AccessToken token, String idTokenString, IDToken idToken, String refreshToken) {
>>>   48:         super(tokenString, token, idTokenString, idToken);
      49:         this.deployment = deployment;
      50:         this.tokenStore = tokenStore;
      51:         this.refreshToken = refreshToken;
      52:     }
      53: 
```

### Data Flow Step 22: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 50, Column 36
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      45:     protected transient AuthorizationContext authorizationContext;
      46: 
      47:     public KeycloakSecurityContext() {
      48:     }
      49: 
>>>   50:     public KeycloakSecurityContext(String tokenString, AccessToken token, String idTokenString, IDToken idToken) {
      51:         this.tokenString = tokenString;
      52:         this.token = token;
      53:         this.idToken = idToken;
      54:         this.idTokenString = idTokenString;
      55:     }
```

### Data Flow Step 23: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 51, Column 28
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      46: 
      47:     public KeycloakSecurityContext() {
      48:     }
      49: 
      50:     public KeycloakSecurityContext(String tokenString, AccessToken token, String idTokenString, IDToken idToken) {
>>>   51:         this.tokenString = tokenString;
      52:         this.token = token;
      53:         this.idToken = idToken;
      54:         this.idTokenString = idTokenString;
      55:     }
      56: 
```

### Data Flow Step 24: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 51, Column 9
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      46: 
      47:     public KeycloakSecurityContext() {
      48:     }
      49: 
      50:     public KeycloakSecurityContext(String tokenString, AccessToken token, String idTokenString, IDToken idToken) {
>>>   51:         this.tokenString = tokenString;
      52:         this.token = token;
      53:         this.idToken = idToken;
      54:         this.idTokenString = idTokenString;
      55:     }
      56: 
```

### Data Flow Step 25: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 50, Column 12
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      45:     protected transient AuthorizationContext authorizationContext;
      46: 
      47:     public KeycloakSecurityContext() {
      48:     }
      49: 
>>>   50:     public KeycloakSecurityContext(String tokenString, AccessToken token, String idTokenString, IDToken idToken) {
      51:         this.tokenString = tokenString;
      52:         this.token = token;
      53:         this.idToken = idToken;
      54:         this.idTokenString = idTokenString;
      55:     }
```

### Data Flow Step 26: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 48, Column 9
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      43: 
      44:     public RefreshableKeycloakSecurityContext() {
      45:     }
      46: 
      47:     public RefreshableKeycloakSecurityContext(KeycloakDeployment deployment, AdapterTokenStore tokenStore, String tokenString, AccessToken token, String idTokenString, IDToken idToken, String refreshToken) {
>>>   48:         super(tokenString, token, idTokenString, idToken);
      49:         this.deployment = deployment;
      50:         this.tokenStore = tokenStore;
      51:         this.refreshToken = refreshToken;
      52:     }
      53: 
```

### Data Flow Step 27: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 47, Column 12
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      42:     protected String refreshToken;
      43: 
      44:     public RefreshableKeycloakSecurityContext() {
      45:     }
      46: 
>>>   47:     public RefreshableKeycloakSecurityContext(KeycloakDeployment deployment, AdapterTokenStore tokenStore, String tokenString, AccessToken token, String idTokenString, IDToken idToken, String refreshToken) {
      48:         super(tokenString, token, idTokenString, idToken);
      49:         this.deployment = deployment;
      50:         this.tokenStore = tokenStore;
      51:         this.refreshToken = refreshToken;
      52:     }
```

### Data Flow Step 28: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 246, Column 56
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
>>>  246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
     251:         facade.setSecurityContext(skSession);
```

### Data Flow Step 29: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 251, Column 35
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
>>>  251:         facade.setSecurityContext(skSession);
     252:         String principalName = AdapterUtils.getPrincipalName(resolvedDeployment, bearer.getToken());
     253:         final KeycloakPrincipal<RefreshableKeycloakSecurityContext> principal = new KeycloakPrincipal<RefreshableKeycloakSecurityContext>(principalName, skSession);
     254:         SecurityContext anonymousSecurityContext = getRequestSecurityContext(request);
     255:         final boolean isSecure = anonymousSecurityContext.isSecure();
     256:         final Set<String> roles = AdapterUtils.getRolesFromSecurityContext(skSession);
```

### Data Flow Step 30: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 218, Column 36
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     213:     @Override
     214:     public KeycloakSecurityContext getSecurityContext() {
     215:         return keycloakSecurityContext;
     216:     }
     217: 
>>>  218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
     219:         this.keycloakSecurityContext = securityContext;
     220:     }
     221: 
     222:     @Override
     223:     public Request getRequest() {
```

### Data Flow Step 31: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 219, Column 40
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     214:     public KeycloakSecurityContext getSecurityContext() {
     215:         return keycloakSecurityContext;
     216:     }
     217: 
     218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
>>>  219:         this.keycloakSecurityContext = securityContext;
     220:     }
     221: 
     222:     @Override
     223:     public Request getRequest() {
     224:         return requestFacade;
```

### Data Flow Step 32: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 219, Column 9
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     214:     public KeycloakSecurityContext getSecurityContext() {
     215:         return keycloakSecurityContext;
     216:     }
     217: 
     218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
>>>  219:         this.keycloakSecurityContext = securityContext;
     220:     }
     221: 
     222:     @Override
     223:     public Request getRequest() {
     224:         return requestFacade;
```

### Data Flow Step 33: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 218, Column 17
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     213:     @Override
     214:     public KeycloakSecurityContext getSecurityContext() {
     215:         return keycloakSecurityContext;
     216:     }
     217: 
>>>  218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
     219:         this.keycloakSecurityContext = securityContext;
     220:     }
     221: 
     222:     @Override
     223:     public Request getRequest() {
```

### Data Flow Step 34: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 251, Column 9
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
>>>  251:         facade.setSecurityContext(skSession);
     252:         String principalName = AdapterUtils.getPrincipalName(resolvedDeployment, bearer.getToken());
     253:         final KeycloakPrincipal<RefreshableKeycloakSecurityContext> principal = new KeycloakPrincipal<RefreshableKeycloakSecurityContext>(principalName, skSession);
     254:         SecurityContext anonymousSecurityContext = getRequestSecurityContext(request);
     255:         final boolean isSecure = anonymousSecurityContext.isSecure();
     256:         final Set<String> roles = AdapterUtils.getRolesFromSecurityContext(skSession);
```

### Data Flow Step 35: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 245, Column 45
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     240: 
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
>>>  245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
     248:         // Not needed to do resteasy specifics as KeycloakSecurityContext can be always retrieved from SecurityContext by typecast SecurityContext.getUserPrincipal to KeycloakPrincipal
     249:         // ResteasyProviderFactory.pushContext(KeycloakSecurityContext.class, skSession);
     250: 
```

### Data Flow Step 36: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 241, Column 34
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     236:             if (verifySslFailed(facade, resolvedDeployment)) {
     237:                 return;
     238:             }
     239:         }
     240: 
>>>  241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
     242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
```

### Data Flow Step 37: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 242, Column 27
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     237:                 return;
     238:             }
     239:         }
     240: 
     241:         propagateSecurityContext(facade, request, resolvedDeployment, authenticator);
>>>  242:         handleAuthActions(facade, resolvedDeployment);
     243:     }
     244: 
     245:     protected void propagateSecurityContext(JaxrsHttpFacade facade, ContainerRequestContext request, KeycloakDeployment resolvedDeployment, BearerTokenRequestAuthenticator bearer) {
     246:         RefreshableKeycloakSecurityContext skSession = new RefreshableKeycloakSecurityContext(resolvedDeployment, null, bearer.getTokenString(), bearer.getToken(), null, null, null);
     247: 
```

### Data Flow Step 38: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 295, Column 38
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     290: 
     291:     protected SecurityContext getRequestSecurityContext(ContainerRequestContext request) {
     292:         return request.getSecurityContext();
     293:     }
     294: 
>>>  295:     protected void handleAuthActions(JaxrsHttpFacade facade, KeycloakDeployment deployment) {
     296:         AuthenticatedActionsHandler authActionsHandler = new AuthenticatedActionsHandler(deployment, facade);
     297:         if (authActionsHandler.handledRequest()) {
     298:             // Send response now (if not already sent)
     299:             if (!facade.isResponseFinished()) {
     300:                 facade.getResponse().end();
```

### Data Flow Step 39: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 296, Column 102
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     291:     protected SecurityContext getRequestSecurityContext(ContainerRequestContext request) {
     292:         return request.getSecurityContext();
     293:     }
     294: 
     295:     protected void handleAuthActions(JaxrsHttpFacade facade, KeycloakDeployment deployment) {
>>>  296:         AuthenticatedActionsHandler authActionsHandler = new AuthenticatedActionsHandler(deployment, facade);
     297:         if (authActionsHandler.handledRequest()) {
     298:             // Send response now (if not already sent)
     299:             if (!facade.isResponseFinished()) {
     300:                 facade.getResponse().end();
     301:             }
```

### Data Flow Step 40: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 49, Column 71
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      44: public class AuthenticatedActionsHandler {
      45:     private static final Logger log = Logger.getLogger(AuthenticatedActionsHandler.class);
      46:     protected KeycloakDeployment deployment;
      47:     protected OIDCHttpFacade facade;
      48: 
>>>   49:     public AuthenticatedActionsHandler(KeycloakDeployment deployment, OIDCHttpFacade facade) {
      50:         this.deployment = deployment;
      51:         this.facade = facade;
      52:     }
      53: 
      54:     public boolean handledRequest() {
```

### Data Flow Step 41: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 51, Column 23
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      46:     protected KeycloakDeployment deployment;
      47:     protected OIDCHttpFacade facade;
      48: 
      49:     public AuthenticatedActionsHandler(KeycloakDeployment deployment, OIDCHttpFacade facade) {
      50:         this.deployment = deployment;
>>>   51:         this.facade = facade;
      52:     }
      53: 
      54:     public boolean handledRequest() {
      55:         log.debugv("AuthenticatedActionsValve.invoke {0}", facade.getRequest().getURI());
      56:         if (corsRequest()) return true;
```

### Data Flow Step 42: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 51, Column 9
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      46:     protected KeycloakDeployment deployment;
      47:     protected OIDCHttpFacade facade;
      48: 
      49:     public AuthenticatedActionsHandler(KeycloakDeployment deployment, OIDCHttpFacade facade) {
      50:         this.deployment = deployment;
>>>   51:         this.facade = facade;
      52:     }
      53: 
      54:     public boolean handledRequest() {
      55:         log.debugv("AuthenticatedActionsValve.invoke {0}", facade.getRequest().getURI());
      56:         if (corsRequest()) return true;
```

### Data Flow Step 43: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 49, Column 12
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      44: public class AuthenticatedActionsHandler {
      45:     private static final Logger log = Logger.getLogger(AuthenticatedActionsHandler.class);
      46:     protected KeycloakDeployment deployment;
      47:     protected OIDCHttpFacade facade;
      48: 
>>>   49:     public AuthenticatedActionsHandler(KeycloakDeployment deployment, OIDCHttpFacade facade) {
      50:         this.deployment = deployment;
      51:         this.facade = facade;
      52:     }
      53: 
      54:     public boolean handledRequest() {
```

### Data Flow Step 44: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 296, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     291:     protected SecurityContext getRequestSecurityContext(ContainerRequestContext request) {
     292:         return request.getSecurityContext();
     293:     }
     294: 
     295:     protected void handleAuthActions(JaxrsHttpFacade facade, KeycloakDeployment deployment) {
>>>  296:         AuthenticatedActionsHandler authActionsHandler = new AuthenticatedActionsHandler(deployment, facade);
     297:         if (authActionsHandler.handledRequest()) {
     298:             // Send response now (if not already sent)
     299:             if (!facade.isResponseFinished()) {
     300:                 facade.getResponse().end();
     301:             }
```

### Data Flow Step 45: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java, Line 297, Column 13
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsBearerTokenFilterImpl.java
```java
     292:         return request.getSecurityContext();
     293:     }
     294: 
     295:     protected void handleAuthActions(JaxrsHttpFacade facade, KeycloakDeployment deployment) {
     296:         AuthenticatedActionsHandler authActionsHandler = new AuthenticatedActionsHandler(deployment, facade);
>>>  297:         if (authActionsHandler.handledRequest()) {
     298:             // Send response now (if not already sent)
     299:             if (!facade.isResponseFinished()) {
     300:                 facade.getResponse().end();
     301:             }
     302:         }
```

### Data Flow Step 46: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 54, Column 20
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      49:     public AuthenticatedActionsHandler(KeycloakDeployment deployment, OIDCHttpFacade facade) {
      50:         this.deployment = deployment;
      51:         this.facade = facade;
      52:     }
      53: 
>>>   54:     public boolean handledRequest() {
      55:         log.debugv("AuthenticatedActionsValve.invoke {0}", facade.getRequest().getURI());
      56:         if (corsRequest()) return true;
      57:         String requestUri = facade.getRequest().getURI();
      58:         if (requestUri.endsWith(AdapterConstants.K_QUERY_BEARER_TOKEN)) {
      59:             queryBearerToken();
```

### Data Flow Step 47: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 59, Column 13
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      54:     public boolean handledRequest() {
      55:         log.debugv("AuthenticatedActionsValve.invoke {0}", facade.getRequest().getURI());
      56:         if (corsRequest()) return true;
      57:         String requestUri = facade.getRequest().getURI();
      58:         if (requestUri.endsWith(AdapterConstants.K_QUERY_BEARER_TOKEN)) {
>>>   59:             queryBearerToken();
      60:             return true;
      61:         }
      62:         if (!isAuthorized()) {
      63:             return true;
      64:         }
```

### Data Flow Step 48: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 68, Column 20
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      63:             return true;
      64:         }
      65:         return false;
      66:     }
      67: 
>>>   68:     protected void queryBearerToken()  {
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
```

### Data Flow Step 49: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 69, Column 43
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      64:         }
      65:         return false;
      66:     }
      67: 
      68:     protected void queryBearerToken()  {
>>>   69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
      74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
```

### Data Flow Step 50: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 69, Column 43
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      64:         }
      65:         return false;
      66:     }
      67: 
      68:     protected void queryBearerToken()  {
>>>   69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
      74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
```

### Data Flow Step 51: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 74, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
>>>   74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
      75:         } catch (IOException e) {
      76:             throw new RuntimeException(e);
      77:         }
      78:         facade.getResponse().end();
      79:     }
```

### Data Flow Step 52: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 214, Column 36
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     209:             responseFinished = true;
     210:         }
     211:     }
     212: 
     213:     @Override
>>>  214:     public KeycloakSecurityContext getSecurityContext() {
     215:         return keycloakSecurityContext;
     216:     }
     217: 
     218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
     219:         this.keycloakSecurityContext = securityContext;
```

### Data Flow Step 53: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 215, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     210:         }
     211:     }
     212: 
     213:     @Override
     214:     public KeycloakSecurityContext getSecurityContext() {
>>>  215:         return keycloakSecurityContext;
     216:     }
     217: 
     218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
     219:         this.keycloakSecurityContext = securityContext;
     220:     }
```

### Data Flow Step 54: adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java, Line 215, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/jaxrs-oauth-client/src/main/java/org/keycloak/jaxrs/JaxrsHttpFacade.java
```java
     210:         }
     211:     }
     212: 
     213:     @Override
     214:     public KeycloakSecurityContext getSecurityContext() {
>>>  215:         return keycloakSecurityContext;
     216:     }
     217: 
     218:     public void setSecurityContext(KeycloakSecurityContext securityContext) {
     219:         this.keycloakSecurityContext = securityContext;
     220:     }
```

### Data Flow Step 55: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 74, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
>>>   74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
      75:         } catch (IOException e) {
      76:             throw new RuntimeException(e);
      77:         }
      78:         facade.getResponse().end();
      79:     }
```

### Data Flow Step 56: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 61, Column 19
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      56:         refreshExpiredToken(true);
      57:         return super.getToken();
      58:     }
      59: 
      60:     @Override
>>>   61:     public String getTokenString() {
      62:         refreshExpiredToken(true);
      63:         return super.getTokenString();
      64:     }
      65: 
      66:     @Override
```

### Data Flow Step 57: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 63, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      58:     }
      59: 
      60:     @Override
      61:     public String getTokenString() {
      62:         refreshExpiredToken(true);
>>>   63:         return super.getTokenString();
      64:     }
      65: 
      66:     @Override
      67:     public IDToken getIdToken() {
      68:         refreshExpiredToken(true);
```

### Data Flow Step 58: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 61, Column 19
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      56: 
      57:     public AccessToken getToken() {
      58:         return token;
      59:     }
      60: 
>>>   61:     public String getTokenString() {
      62:         return tokenString;
      63:     }
      64: 
      65:     public AuthorizationContext getAuthorizationContext() {
      66:         return authorizationContext;
```

### Data Flow Step 59: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 62, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      57:     public AccessToken getToken() {
      58:         return token;
      59:     }
      60: 
      61:     public String getTokenString() {
>>>   62:         return tokenString;
      63:     }
      64: 
      65:     public AuthorizationContext getAuthorizationContext() {
      66:         return authorizationContext;
      67:     }
```

### Data Flow Step 60: core/src/main/java/org/keycloak/KeycloakSecurityContext.java, Line 62, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/core/src/main/java/org/keycloak/KeycloakSecurityContext.java
```java
      57:     public AccessToken getToken() {
      58:         return token;
      59:     }
      60: 
      61:     public String getTokenString() {
>>>   62:         return tokenString;
      63:     }
      64: 
      65:     public AuthorizationContext getAuthorizationContext() {
      66:         return authorizationContext;
      67:     }
```

### Data Flow Step 61: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java, Line 63, Column 16
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/RefreshableKeycloakSecurityContext.java
```java
      58:     }
      59: 
      60:     @Override
      61:     public String getTokenString() {
      62:         refreshExpiredToken(true);
>>>   63:         return super.getTokenString();
      64:     }
      65: 
      66:     @Override
      67:     public IDToken getIdToken() {
      68:         refreshExpiredToken(true);
```

### Data Flow Step 62: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 74, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
>>>   74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
      75:         } catch (IOException e) {
      76:             throw new RuntimeException(e);
      77:         }
      78:         facade.getResponse().end();
      79:     }
```

### Data Flow Step 63: adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java, Line 74, Column 58
File: codeql-dbs/keycloak__keycloak_CVE-2022-4361_21.1.1/root/cwe-bench-java/project-sources/keycloak__keycloak_CVE-2022-4361_21.1.1/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java
```java
      69:         log.debugv("queryBearerToken {0}",facade.getRequest().getURI());
      70:         if (abortTokenResponse()) return;
      71:         facade.getResponse().setStatus(200);
      72:         facade.getResponse().setHeader("Content-Type", "text/plain");
      73:         try {
>>>   74:             facade.getResponse().getOutputStream().write(facade.getSecurityContext().getTokenString().getBytes());
      75:         } catch (IOException e) {
      76:             throw new RuntimeException(e);
      77:         }
      78:         facade.getResponse().end();
      79:     }
```
