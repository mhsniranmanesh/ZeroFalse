# Vulnerability: java/xss
## Message: Cross-site scripting vulnerability due to a [user-provided value](1).

## Code Flow 1

### Thread Flow 1

### Data Flow Step 1: jspwiki-main/src/main/java/org/apache/wiki/WikiContext.java, Line 473, Column 22
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/WikiContext.java
```java
     468:      */
     469:     @Override
     470:     public String getHttpParameter( final String paramName ) {
     471:         String result = null;
     472:         if( m_request != null ) {
>>>  473:             result = m_request.getParameter( paramName );
     474:         }
     475: 
     476:         return result;
     477:     }
     478: 
```

### Data Flow Step 2: jspwiki-main/src/main/java/org/apache/wiki/WikiContext.java, Line 476, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/WikiContext.java
```java
     471:         String result = null;
     472:         if( m_request != null ) {
     473:             result = m_request.getParameter( paramName );
     474:         }
     475: 
>>>  476:         return result;
     477:     }
     478: 
     479:     /**
     480:      *  If the request did originate from an HTTP request, then the HTTP request can be fetched here.  However, if the request
     481:      *  did NOT originate from an HTTP request, then this method will return null, and YOU SHOULD CHECK FOR IT!
```

### Data Flow Step 3: jspwiki-main/src/main/java/org/apache/wiki/plugin/WeblogPlugin.java, Line 204, Column 24
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/plugin/WeblogPlugin.java
```java
     199:             }
     200:         }
     201: 
     202: 
     203:         if( (startDay = params.get(PARAM_STARTDATE)) == null ) {
>>>  204:             startDay = context.getHttpParameter( "weblog."+PARAM_STARTDATE );
     205:         }
     206: 
     207:         if( TextUtil.isPositive( params.get(PARAM_ALLOWCOMMENTS) ) ) {
     208:             hasComments = true;
     209:         }
```

### Data Flow Step 4: jspwiki-main/src/main/java/org/apache/wiki/plugin/WeblogPlugin.java, Line 226, Column 74
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/plugin/WeblogPlugin.java
```java
     221:             try {
     222:                 final Date d = fmt.parse( startDay );
     223:                 startTime.setTime( d );
     224:                 stopTime.setTime( d );
     225:             } catch( final ParseException e ) {
>>>  226:                 return "Illegal time format: "+ TextUtil.replaceEntities(startDay);
     227:             }
     228:         }
     229: 
     230:         //
     231:         //  Mark this to be a weblog
```

### Data Flow Step 5: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 214, Column 43
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     209:      *
     210:      *  @since 1.6.1
     211:      *  @param src The source string.
     212:      *  @return The encoded string.
     213:      */
>>>  214:     public static String replaceEntities( String src ) {
     215:         src = replaceString( src, "&", "&amp;" );
     216:         src = replaceString( src, "<", "&lt;" );
     217:         src = replaceString( src, ">", "&gt;" );
     218:         src = replaceString( src, "\"", "&quot;" );
     219: 
```

### Data Flow Step 6: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 215, Column 30
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     210:      *  @since 1.6.1
     211:      *  @param src The source string.
     212:      *  @return The encoded string.
     213:      */
     214:     public static String replaceEntities( String src ) {
>>>  215:         src = replaceString( src, "&", "&amp;" );
     216:         src = replaceString( src, "<", "&lt;" );
     217:         src = replaceString( src, ">", "&gt;" );
     218:         src = replaceString( src, "\"", "&quot;" );
     219: 
     220:         return src;
```

### Data Flow Step 7: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 231, Column 41
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     226:      *  @param orig Original string.  Null is safe.
     227:      *  @param src  The string to find.
     228:      *  @param dest The string to replace <I>src</I> with.
     229:      *  @return A string with the replacement done.
     230:      */
>>>  231:     public static String replaceString( final String orig, final String src, final String dest ) {
     232:         if ( orig == null ) {
     233:             return null;
     234:         }
     235:         if ( src == null || dest == null ) {
     236:             throw new NullPointerException();
```

### Data Flow Step 8: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 239, Column 20
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     234:         }
     235:         if ( src == null || dest == null ) {
     236:             throw new NullPointerException();
     237:         }
     238:         if ( src.isEmpty() ) {
>>>  239:             return orig;
     240:         }
     241: 
     242:         final StringBuilder res = new StringBuilder( orig.length() + 20 ); // Pure guesswork
     243:         int start;
     244:         int end = 0;
```

### Data Flow Step 9: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 215, Column 15
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     210:      *  @since 1.6.1
     211:      *  @param src The source string.
     212:      *  @return The encoded string.
     213:      */
     214:     public static String replaceEntities( String src ) {
>>>  215:         src = replaceString( src, "&", "&amp;" );
     216:         src = replaceString( src, "<", "&lt;" );
     217:         src = replaceString( src, ">", "&gt;" );
     218:         src = replaceString( src, "\"", "&quot;" );
     219: 
     220:         return src;
```

### Data Flow Step 10: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 216, Column 30
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     211:      *  @param src The source string.
     212:      *  @return The encoded string.
     213:      */
     214:     public static String replaceEntities( String src ) {
     215:         src = replaceString( src, "&", "&amp;" );
>>>  216:         src = replaceString( src, "<", "&lt;" );
     217:         src = replaceString( src, ">", "&gt;" );
     218:         src = replaceString( src, "\"", "&quot;" );
     219: 
     220:         return src;
     221:     }
```

### Data Flow Step 11: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 231, Column 41
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     226:      *  @param orig Original string.  Null is safe.
     227:      *  @param src  The string to find.
     228:      *  @param dest The string to replace <I>src</I> with.
     229:      *  @return A string with the replacement done.
     230:      */
>>>  231:     public static String replaceString( final String orig, final String src, final String dest ) {
     232:         if ( orig == null ) {
     233:             return null;
     234:         }
     235:         if ( src == null || dest == null ) {
     236:             throw new NullPointerException();
```

### Data Flow Step 12: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 239, Column 20
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     234:         }
     235:         if ( src == null || dest == null ) {
     236:             throw new NullPointerException();
     237:         }
     238:         if ( src.isEmpty() ) {
>>>  239:             return orig;
     240:         }
     241: 
     242:         final StringBuilder res = new StringBuilder( orig.length() + 20 ); // Pure guesswork
     243:         int start;
     244:         int end = 0;
```

### Data Flow Step 13: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 216, Column 15
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     211:      *  @param src The source string.
     212:      *  @return The encoded string.
     213:      */
     214:     public static String replaceEntities( String src ) {
     215:         src = replaceString( src, "&", "&amp;" );
>>>  216:         src = replaceString( src, "<", "&lt;" );
     217:         src = replaceString( src, ">", "&gt;" );
     218:         src = replaceString( src, "\"", "&quot;" );
     219: 
     220:         return src;
     221:     }
```

### Data Flow Step 14: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 217, Column 30
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     212:      *  @return The encoded string.
     213:      */
     214:     public static String replaceEntities( String src ) {
     215:         src = replaceString( src, "&", "&amp;" );
     216:         src = replaceString( src, "<", "&lt;" );
>>>  217:         src = replaceString( src, ">", "&gt;" );
     218:         src = replaceString( src, "\"", "&quot;" );
     219: 
     220:         return src;
     221:     }
     222: 
```

### Data Flow Step 15: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 231, Column 41
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     226:      *  @param orig Original string.  Null is safe.
     227:      *  @param src  The string to find.
     228:      *  @param dest The string to replace <I>src</I> with.
     229:      *  @return A string with the replacement done.
     230:      */
>>>  231:     public static String replaceString( final String orig, final String src, final String dest ) {
     232:         if ( orig == null ) {
     233:             return null;
     234:         }
     235:         if ( src == null || dest == null ) {
     236:             throw new NullPointerException();
```

### Data Flow Step 16: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 239, Column 20
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     234:         }
     235:         if ( src == null || dest == null ) {
     236:             throw new NullPointerException();
     237:         }
     238:         if ( src.isEmpty() ) {
>>>  239:             return orig;
     240:         }
     241: 
     242:         final StringBuilder res = new StringBuilder( orig.length() + 20 ); // Pure guesswork
     243:         int start;
     244:         int end = 0;
```

### Data Flow Step 17: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 217, Column 15
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     212:      *  @return The encoded string.
     213:      */
     214:     public static String replaceEntities( String src ) {
     215:         src = replaceString( src, "&", "&amp;" );
     216:         src = replaceString( src, "<", "&lt;" );
>>>  217:         src = replaceString( src, ">", "&gt;" );
     218:         src = replaceString( src, "\"", "&quot;" );
     219: 
     220:         return src;
     221:     }
     222: 
```

### Data Flow Step 18: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 218, Column 30
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     213:      */
     214:     public static String replaceEntities( String src ) {
     215:         src = replaceString( src, "&", "&amp;" );
     216:         src = replaceString( src, "<", "&lt;" );
     217:         src = replaceString( src, ">", "&gt;" );
>>>  218:         src = replaceString( src, "\"", "&quot;" );
     219: 
     220:         return src;
     221:     }
     222: 
     223:     /**
```

### Data Flow Step 19: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 231, Column 41
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     226:      *  @param orig Original string.  Null is safe.
     227:      *  @param src  The string to find.
     228:      *  @param dest The string to replace <I>src</I> with.
     229:      *  @return A string with the replacement done.
     230:      */
>>>  231:     public static String replaceString( final String orig, final String src, final String dest ) {
     232:         if ( orig == null ) {
     233:             return null;
     234:         }
     235:         if ( src == null || dest == null ) {
     236:             throw new NullPointerException();
```

### Data Flow Step 20: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 239, Column 20
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     234:         }
     235:         if ( src == null || dest == null ) {
     236:             throw new NullPointerException();
     237:         }
     238:         if ( src.isEmpty() ) {
>>>  239:             return orig;
     240:         }
     241: 
     242:         final StringBuilder res = new StringBuilder( orig.length() + 20 ); // Pure guesswork
     243:         int start;
     244:         int end = 0;
```

### Data Flow Step 21: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 218, Column 15
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     213:      */
     214:     public static String replaceEntities( String src ) {
     215:         src = replaceString( src, "&", "&amp;" );
     216:         src = replaceString( src, "<", "&lt;" );
     217:         src = replaceString( src, ">", "&gt;" );
>>>  218:         src = replaceString( src, "\"", "&quot;" );
     219: 
     220:         return src;
     221:     }
     222: 
     223:     /**
```

### Data Flow Step 22: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 220, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     215:         src = replaceString( src, "&", "&amp;" );
     216:         src = replaceString( src, "<", "&lt;" );
     217:         src = replaceString( src, ">", "&gt;" );
     218:         src = replaceString( src, "\"", "&quot;" );
     219: 
>>>  220:         return src;
     221:     }
     222: 
     223:     /**
     224:      *  Replaces a string with another string.
     225:      *
```

### Data Flow Step 23: jspwiki-main/src/main/java/org/apache/wiki/plugin/WeblogPlugin.java, Line 226, Column 49
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/plugin/WeblogPlugin.java
```java
     221:             try {
     222:                 final Date d = fmt.parse( startDay );
     223:                 startTime.setTime( d );
     224:                 stopTime.setTime( d );
     225:             } catch( final ParseException e ) {
>>>  226:                 return "Illegal time format: "+ TextUtil.replaceEntities(startDay);
     227:             }
     228:         }
     229: 
     230:         //
     231:         //  Mark this to be a weblog
```

### Data Flow Step 24: jspwiki-main/src/main/java/org/apache/wiki/plugin/WeblogPlugin.java, Line 226, Column 24
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/plugin/WeblogPlugin.java
```java
     221:             try {
     222:                 final Date d = fmt.parse( startDay );
     223:                 startTime.setTime( d );
     224:                 stopTime.setTime( d );
     225:             } catch( final ParseException e ) {
>>>  226:                 return "Illegal time format: "+ TextUtil.replaceEntities(startDay);
     227:             }
     228:         }
     229: 
     230:         //
     231:         //  Mark this to be a weblog
```

### Data Flow Step 25: jspwiki-main/src/main/java/org/apache/wiki/plugin/DefaultPluginManager.java, Line 279, Column 24
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/plugin/DefaultPluginManager.java
```java
     274:                 return "Plugin '" + classname + "' not compatible with this version of JSPWiki";
     275:             }
     276: 
     277:             //  ...and launch.
     278:             try {
>>>  279:                 return plugin.execute( context, params );
     280:             } catch( final PluginException e ) {
     281:                 if( debug ) {
     282:                     return stackTrace( params, e );
     283:                 }
     284: 
```

### Data Flow Step 26: jspwiki-main/src/main/java/org/apache/wiki/parser/PluginContent.java, Line 169, Column 26
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/parser/PluginContent.java
```java
     164:                     String val = e.getValue();
     165:                     val = engine.getManager( VariableManager.class).expandVariables( context, val );
     166:                     parsedParams.put( e.getKey(), val );
     167:                 }
     168:                 final PluginManager pm = engine.getManager( PluginManager.class );
>>>  169:                 result = pm.execute( context, m_pluginName, parsedParams );
     170:             }
     171:         } catch( final Exception e ) {
     172:             if( wysiwygEditorMode ) {
     173:                 result = "";
     174:             } else {
```

### Data Flow Step 27: jspwiki-main/src/main/java/org/apache/wiki/parser/PluginContent.java, Line 184, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/parser/PluginContent.java
```java
     179:                 		                                               context.getRealPage().getName(),
     180:                 		                                               e.getMessage() ) ).getText();
     181:             }
     182:         }
     183: 
>>>  184:         return result;
     185: 	}
     186: 
     187:     /**{@inheritDoc}*/
     188:     @Override
     189:     public void executeParse( final Context context ) throws PluginException {
```

### Data Flow Step 28: jspwiki-main/src/main/java/org/apache/wiki/parser/PluginContent.java, Line 127, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/parser/PluginContent.java
```java
     122:         if( context == null ) {
     123:             LOG.info( "WikiContext garbage-collected, cannot proceed" );
     124:             return getPluginName();
     125:         }
     126: 
>>>  127:         return invoke( context );
     128:     }
     129: 
     130:     /**{@inheritDoc}*/
     131:     @Override
     132:     public String invoke( final Context context ) {
```

### Data Flow Step 29: jspwiki-main/src/main/java/org/apache/wiki/render/CreoleRenderer.java, Line 141, Column 28
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/render/CreoleRenderer.java
```java
     136:                 } else {
     137:                     m_plugins.add(pc);
     138:                     sb.append( PLUGIN_START ).append( pc.getPluginName() ).append( ONE_SPACE ).append( m_plugins.size() ).append( PLUGIN_END );
     139:                 }
     140:             } else if( c instanceof Text ) {
>>>  141:                 sb.append( ( ( Text )c ).getText() );
     142:             } else if( c instanceof Element ) {
     143:                 renderElement( ( Element )c, sb );
     144:             }
     145:         }
     146: 
```

### Data Flow Step 30: jspwiki-main/src/main/java/org/apache/wiki/render/CreoleRenderer.java, Line 141, Column 17
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/render/CreoleRenderer.java
```java
     136:                 } else {
     137:                     m_plugins.add(pc);
     138:                     sb.append( PLUGIN_START ).append( pc.getPluginName() ).append( ONE_SPACE ).append( m_plugins.size() ).append( PLUGIN_END );
     139:                 }
     140:             } else if( c instanceof Text ) {
>>>  141:                 sb.append( ( ( Text )c ).getText() );
     142:             } else if( c instanceof Element ) {
     143:                 renderElement( ( Element )c, sb );
     144:             }
     145:         }
     146: 
```

### Data Flow Step 31: jspwiki-main/src/main/java/org/apache/wiki/render/CreoleRenderer.java, Line 92, Column 51
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/render/CreoleRenderer.java
```java
      87:     /**
      88:      * Renders an element into the StringBuilder given
      89:      * @param ce element to render
      90:      * @param sb stringbuilder holding the element render
      91:      */
>>>   92:     private void renderElement( final Element ce, final StringBuilder sb ) {
      93:         String endEl = EMPTY_STRING;
      94:         for( int i = 0; i < ELEMENTS.length; i+=3 ) {
      95:             if( ELEMENTS[i].equals(ce.getName()) ) {
      96:                 sb.append( ELEMENTS[i+1] );
      97:                 endEl = ELEMENTS[i+2];
```

### Data Flow Step 32: jspwiki-main/src/main/java/org/apache/wiki/render/CreoleRenderer.java, Line 165, Column 28
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/render/CreoleRenderer.java
```java
     160:     public String getString() {
     161:     	final StringBuilder sb = new StringBuilder(1000);
     162:         final Element ce = m_document.getRootElement();
     163: 
     164:         //  Traverse through the entire tree of everything.
>>>  165:         renderElement( ce, sb );
     166:         return sb.toString();
     167:     }
     168: 
     169: }
```

### Data Flow Step 33: jspwiki-main/src/main/java/org/apache/wiki/render/CreoleRenderer.java, Line 166, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/render/CreoleRenderer.java
```java
     161:     	final StringBuilder sb = new StringBuilder(1000);
     162:         final Element ce = m_document.getRootElement();
     163: 
     164:         //  Traverse through the entire tree of everything.
     165:         renderElement( ce, sb );
>>>  166:         return sb.toString();
     167:     }
     168: 
     169: }
```

### Data Flow Step 34: jspwiki-main/src/main/java/org/apache/wiki/render/CreoleRenderer.java, Line 166, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/render/CreoleRenderer.java
```java
     161:     	final StringBuilder sb = new StringBuilder(1000);
     162:         final Element ce = m_document.getRootElement();
     163: 
     164:         //  Traverse through the entire tree of everything.
     165:         renderElement( ce, sb );
>>>  166:         return sb.toString();
     167:     }
     168: 
     169: }
```

### Data Flow Step 35: jspwiki-main/src/main/java/org/apache/wiki/render/DefaultRenderingManager.java, Line 248, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/render/DefaultRenderingManager.java
```java
     243:             rend = getWysiwygRenderer( context, doc );
     244:         } else {
     245:             rend = getRenderer( context, doc );
     246:         }
     247: 
>>>  248:         return rend.getString();
     249:     }
     250: 
     251:     /**
     252:      *  {@inheritDoc}
     253:      */
```

### Data Flow Step 36: jspwiki-main/src/main/java/org/apache/wiki/tags/AuthorTag.java, Line 65, Column 26
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/tags/AuthorTag.java
```java
      60:             if( engine.getManager( PageManager.class ).wikiPageExists(author) && !( "plain".equalsIgnoreCase( m_format ) ) ) {
      61:                 // FIXME: It's very boring to have to do this.  Slow, too.
      62:                 final RenderingManager mgr = engine.getManager( RenderingManager.class );
      63:                 final MarkupParser p = mgr.getParser( m_wikiContext, "["+author+"|"+author+"]" );
      64:                 final WikiDocument d = p.parse();
>>>   65:                 author = mgr.getHTML( m_wikiContext, d );
      66:             }
      67: 
      68:             pageContext.getOut().print( author );
      69:         } else {
      70:             pageContext.getOut().print( Preferences.getBundle( m_wikiContext, InternationalizationManager.CORE_BUNDLE )
```

### Data Flow Step 37: jspwiki-main/src/main/java/org/apache/wiki/tags/AuthorTag.java, Line 68, Column 41
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/tags/AuthorTag.java
```java
      63:                 final MarkupParser p = mgr.getParser( m_wikiContext, "["+author+"|"+author+"]" );
      64:                 final WikiDocument d = p.parse();
      65:                 author = mgr.getHTML( m_wikiContext, d );
      66:             }
      67: 
>>>   68:             pageContext.getOut().print( author );
      69:         } else {
      70:             pageContext.getOut().print( Preferences.getBundle( m_wikiContext, InternationalizationManager.CORE_BUNDLE )
      71:                                                    .getString( "common.unknownauthor" ) );
      72:         }
      73: 
```

## Code Flow 2

### Thread Flow 1

### Data Flow Step 1: jspwiki-main/src/main/java/org/apache/wiki/WikiContext.java, Line 473, Column 22
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/WikiContext.java
```java
     468:      */
     469:     @Override
     470:     public String getHttpParameter( final String paramName ) {
     471:         String result = null;
     472:         if( m_request != null ) {
>>>  473:             result = m_request.getParameter( paramName );
     474:         }
     475: 
     476:         return result;
     477:     }
     478: 
```

### Data Flow Step 2: jspwiki-main/src/main/java/org/apache/wiki/WikiContext.java, Line 476, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/WikiContext.java
```java
     471:         String result = null;
     472:         if( m_request != null ) {
     473:             result = m_request.getParameter( paramName );
     474:         }
     475: 
>>>  476:         return result;
     477:     }
     478: 
     479:     /**
     480:      *  If the request did originate from an HTTP request, then the HTTP request can be fetched here.  However, if the request
     481:      *  did NOT originate from an HTTP request, then this method will return null, and YOU SHOULD CHECK FOR IT!
```

### Data Flow Step 3: jspwiki-main/src/main/java/org/apache/wiki/plugin/WeblogPlugin.java, Line 204, Column 24
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/plugin/WeblogPlugin.java
```java
     199:             }
     200:         }
     201: 
     202: 
     203:         if( (startDay = params.get(PARAM_STARTDATE)) == null ) {
>>>  204:             startDay = context.getHttpParameter( "weblog."+PARAM_STARTDATE );
     205:         }
     206: 
     207:         if( TextUtil.isPositive( params.get(PARAM_ALLOWCOMMENTS) ) ) {
     208:             hasComments = true;
     209:         }
```

### Data Flow Step 4: jspwiki-main/src/main/java/org/apache/wiki/plugin/WeblogPlugin.java, Line 226, Column 74
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/plugin/WeblogPlugin.java
```java
     221:             try {
     222:                 final Date d = fmt.parse( startDay );
     223:                 startTime.setTime( d );
     224:                 stopTime.setTime( d );
     225:             } catch( final ParseException e ) {
>>>  226:                 return "Illegal time format: "+ TextUtil.replaceEntities(startDay);
     227:             }
     228:         }
     229: 
     230:         //
     231:         //  Mark this to be a weblog
```

### Data Flow Step 5: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 214, Column 43
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     209:      *
     210:      *  @since 1.6.1
     211:      *  @param src The source string.
     212:      *  @return The encoded string.
     213:      */
>>>  214:     public static String replaceEntities( String src ) {
     215:         src = replaceString( src, "&", "&amp;" );
     216:         src = replaceString( src, "<", "&lt;" );
     217:         src = replaceString( src, ">", "&gt;" );
     218:         src = replaceString( src, "\"", "&quot;" );
     219: 
```

### Data Flow Step 6: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 215, Column 30
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     210:      *  @since 1.6.1
     211:      *  @param src The source string.
     212:      *  @return The encoded string.
     213:      */
     214:     public static String replaceEntities( String src ) {
>>>  215:         src = replaceString( src, "&", "&amp;" );
     216:         src = replaceString( src, "<", "&lt;" );
     217:         src = replaceString( src, ">", "&gt;" );
     218:         src = replaceString( src, "\"", "&quot;" );
     219: 
     220:         return src;
```

### Data Flow Step 7: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 231, Column 41
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     226:      *  @param orig Original string.  Null is safe.
     227:      *  @param src  The string to find.
     228:      *  @param dest The string to replace <I>src</I> with.
     229:      *  @return A string with the replacement done.
     230:      */
>>>  231:     public static String replaceString( final String orig, final String src, final String dest ) {
     232:         if ( orig == null ) {
     233:             return null;
     234:         }
     235:         if ( src == null || dest == null ) {
     236:             throw new NullPointerException();
```

### Data Flow Step 8: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 248, Column 25
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     243:         int start;
     244:         int end = 0;
     245:         int last = 0;
     246: 
     247:         while ( ( start = orig.indexOf( src,end ) ) != -1 ) {
>>>  248:             res.append( orig, last, start );
     249:             res.append( dest );
     250:             end  = start + src.length();
     251:             last = start + src.length();
     252:         }
     253:         res.append( orig.substring( end ) );
```

### Data Flow Step 9: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 248, Column 13
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     243:         int start;
     244:         int end = 0;
     245:         int last = 0;
     246: 
     247:         while ( ( start = orig.indexOf( src,end ) ) != -1 ) {
>>>  248:             res.append( orig, last, start );
     249:             res.append( dest );
     250:             end  = start + src.length();
     251:             last = start + src.length();
     252:         }
     253:         res.append( orig.substring( end ) );
```

### Data Flow Step 10: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 255, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     250:             end  = start + src.length();
     251:             last = start + src.length();
     252:         }
     253:         res.append( orig.substring( end ) );
     254: 
>>>  255:         return res.toString();
     256:     }
     257: 
     258:     /**
     259:      *  Replaces a part of a string with a new String.
     260:      *
```

### Data Flow Step 11: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 255, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     250:             end  = start + src.length();
     251:             last = start + src.length();
     252:         }
     253:         res.append( orig.substring( end ) );
     254: 
>>>  255:         return res.toString();
     256:     }
     257: 
     258:     /**
     259:      *  Replaces a part of a string with a new String.
     260:      *
```

### Data Flow Step 12: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 215, Column 15
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     210:      *  @since 1.6.1
     211:      *  @param src The source string.
     212:      *  @return The encoded string.
     213:      */
     214:     public static String replaceEntities( String src ) {
>>>  215:         src = replaceString( src, "&", "&amp;" );
     216:         src = replaceString( src, "<", "&lt;" );
     217:         src = replaceString( src, ">", "&gt;" );
     218:         src = replaceString( src, "\"", "&quot;" );
     219: 
     220:         return src;
```

### Data Flow Step 13: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 216, Column 30
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     211:      *  @param src The source string.
     212:      *  @return The encoded string.
     213:      */
     214:     public static String replaceEntities( String src ) {
     215:         src = replaceString( src, "&", "&amp;" );
>>>  216:         src = replaceString( src, "<", "&lt;" );
     217:         src = replaceString( src, ">", "&gt;" );
     218:         src = replaceString( src, "\"", "&quot;" );
     219: 
     220:         return src;
     221:     }
```

### Data Flow Step 14: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 231, Column 41
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     226:      *  @param orig Original string.  Null is safe.
     227:      *  @param src  The string to find.
     228:      *  @param dest The string to replace <I>src</I> with.
     229:      *  @return A string with the replacement done.
     230:      */
>>>  231:     public static String replaceString( final String orig, final String src, final String dest ) {
     232:         if ( orig == null ) {
     233:             return null;
     234:         }
     235:         if ( src == null || dest == null ) {
     236:             throw new NullPointerException();
```

### Data Flow Step 15: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 248, Column 25
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     243:         int start;
     244:         int end = 0;
     245:         int last = 0;
     246: 
     247:         while ( ( start = orig.indexOf( src,end ) ) != -1 ) {
>>>  248:             res.append( orig, last, start );
     249:             res.append( dest );
     250:             end  = start + src.length();
     251:             last = start + src.length();
     252:         }
     253:         res.append( orig.substring( end ) );
```

### Data Flow Step 16: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 248, Column 13
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     243:         int start;
     244:         int end = 0;
     245:         int last = 0;
     246: 
     247:         while ( ( start = orig.indexOf( src,end ) ) != -1 ) {
>>>  248:             res.append( orig, last, start );
     249:             res.append( dest );
     250:             end  = start + src.length();
     251:             last = start + src.length();
     252:         }
     253:         res.append( orig.substring( end ) );
```

### Data Flow Step 17: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 255, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     250:             end  = start + src.length();
     251:             last = start + src.length();
     252:         }
     253:         res.append( orig.substring( end ) );
     254: 
>>>  255:         return res.toString();
     256:     }
     257: 
     258:     /**
     259:      *  Replaces a part of a string with a new String.
     260:      *
```

### Data Flow Step 18: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 255, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     250:             end  = start + src.length();
     251:             last = start + src.length();
     252:         }
     253:         res.append( orig.substring( end ) );
     254: 
>>>  255:         return res.toString();
     256:     }
     257: 
     258:     /**
     259:      *  Replaces a part of a string with a new String.
     260:      *
```

### Data Flow Step 19: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 216, Column 15
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     211:      *  @param src The source string.
     212:      *  @return The encoded string.
     213:      */
     214:     public static String replaceEntities( String src ) {
     215:         src = replaceString( src, "&", "&amp;" );
>>>  216:         src = replaceString( src, "<", "&lt;" );
     217:         src = replaceString( src, ">", "&gt;" );
     218:         src = replaceString( src, "\"", "&quot;" );
     219: 
     220:         return src;
     221:     }
```

### Data Flow Step 20: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 217, Column 30
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     212:      *  @return The encoded string.
     213:      */
     214:     public static String replaceEntities( String src ) {
     215:         src = replaceString( src, "&", "&amp;" );
     216:         src = replaceString( src, "<", "&lt;" );
>>>  217:         src = replaceString( src, ">", "&gt;" );
     218:         src = replaceString( src, "\"", "&quot;" );
     219: 
     220:         return src;
     221:     }
     222: 
```

### Data Flow Step 21: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 231, Column 41
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     226:      *  @param orig Original string.  Null is safe.
     227:      *  @param src  The string to find.
     228:      *  @param dest The string to replace <I>src</I> with.
     229:      *  @return A string with the replacement done.
     230:      */
>>>  231:     public static String replaceString( final String orig, final String src, final String dest ) {
     232:         if ( orig == null ) {
     233:             return null;
     234:         }
     235:         if ( src == null || dest == null ) {
     236:             throw new NullPointerException();
```

### Data Flow Step 22: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 248, Column 25
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     243:         int start;
     244:         int end = 0;
     245:         int last = 0;
     246: 
     247:         while ( ( start = orig.indexOf( src,end ) ) != -1 ) {
>>>  248:             res.append( orig, last, start );
     249:             res.append( dest );
     250:             end  = start + src.length();
     251:             last = start + src.length();
     252:         }
     253:         res.append( orig.substring( end ) );
```

### Data Flow Step 23: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 248, Column 13
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     243:         int start;
     244:         int end = 0;
     245:         int last = 0;
     246: 
     247:         while ( ( start = orig.indexOf( src,end ) ) != -1 ) {
>>>  248:             res.append( orig, last, start );
     249:             res.append( dest );
     250:             end  = start + src.length();
     251:             last = start + src.length();
     252:         }
     253:         res.append( orig.substring( end ) );
```

### Data Flow Step 24: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 255, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     250:             end  = start + src.length();
     251:             last = start + src.length();
     252:         }
     253:         res.append( orig.substring( end ) );
     254: 
>>>  255:         return res.toString();
     256:     }
     257: 
     258:     /**
     259:      *  Replaces a part of a string with a new String.
     260:      *
```

### Data Flow Step 25: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 255, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     250:             end  = start + src.length();
     251:             last = start + src.length();
     252:         }
     253:         res.append( orig.substring( end ) );
     254: 
>>>  255:         return res.toString();
     256:     }
     257: 
     258:     /**
     259:      *  Replaces a part of a string with a new String.
     260:      *
```

### Data Flow Step 26: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 217, Column 15
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     212:      *  @return The encoded string.
     213:      */
     214:     public static String replaceEntities( String src ) {
     215:         src = replaceString( src, "&", "&amp;" );
     216:         src = replaceString( src, "<", "&lt;" );
>>>  217:         src = replaceString( src, ">", "&gt;" );
     218:         src = replaceString( src, "\"", "&quot;" );
     219: 
     220:         return src;
     221:     }
     222: 
```

### Data Flow Step 27: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 218, Column 30
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     213:      */
     214:     public static String replaceEntities( String src ) {
     215:         src = replaceString( src, "&", "&amp;" );
     216:         src = replaceString( src, "<", "&lt;" );
     217:         src = replaceString( src, ">", "&gt;" );
>>>  218:         src = replaceString( src, "\"", "&quot;" );
     219: 
     220:         return src;
     221:     }
     222: 
     223:     /**
```

### Data Flow Step 28: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 231, Column 41
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     226:      *  @param orig Original string.  Null is safe.
     227:      *  @param src  The string to find.
     228:      *  @param dest The string to replace <I>src</I> with.
     229:      *  @return A string with the replacement done.
     230:      */
>>>  231:     public static String replaceString( final String orig, final String src, final String dest ) {
     232:         if ( orig == null ) {
     233:             return null;
     234:         }
     235:         if ( src == null || dest == null ) {
     236:             throw new NullPointerException();
```

### Data Flow Step 29: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 248, Column 25
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     243:         int start;
     244:         int end = 0;
     245:         int last = 0;
     246: 
     247:         while ( ( start = orig.indexOf( src,end ) ) != -1 ) {
>>>  248:             res.append( orig, last, start );
     249:             res.append( dest );
     250:             end  = start + src.length();
     251:             last = start + src.length();
     252:         }
     253:         res.append( orig.substring( end ) );
```

### Data Flow Step 30: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 248, Column 13
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     243:         int start;
     244:         int end = 0;
     245:         int last = 0;
     246: 
     247:         while ( ( start = orig.indexOf( src,end ) ) != -1 ) {
>>>  248:             res.append( orig, last, start );
     249:             res.append( dest );
     250:             end  = start + src.length();
     251:             last = start + src.length();
     252:         }
     253:         res.append( orig.substring( end ) );
```

### Data Flow Step 31: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 255, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     250:             end  = start + src.length();
     251:             last = start + src.length();
     252:         }
     253:         res.append( orig.substring( end ) );
     254: 
>>>  255:         return res.toString();
     256:     }
     257: 
     258:     /**
     259:      *  Replaces a part of a string with a new String.
     260:      *
```

### Data Flow Step 32: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 255, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     250:             end  = start + src.length();
     251:             last = start + src.length();
     252:         }
     253:         res.append( orig.substring( end ) );
     254: 
>>>  255:         return res.toString();
     256:     }
     257: 
     258:     /**
     259:      *  Replaces a part of a string with a new String.
     260:      *
```

### Data Flow Step 33: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 218, Column 15
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     213:      */
     214:     public static String replaceEntities( String src ) {
     215:         src = replaceString( src, "&", "&amp;" );
     216:         src = replaceString( src, "<", "&lt;" );
     217:         src = replaceString( src, ">", "&gt;" );
>>>  218:         src = replaceString( src, "\"", "&quot;" );
     219: 
     220:         return src;
     221:     }
     222: 
     223:     /**
```

### Data Flow Step 34: jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java, Line 220, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/TextUtil.java
```java
     215:         src = replaceString( src, "&", "&amp;" );
     216:         src = replaceString( src, "<", "&lt;" );
     217:         src = replaceString( src, ">", "&gt;" );
     218:         src = replaceString( src, "\"", "&quot;" );
     219: 
>>>  220:         return src;
     221:     }
     222: 
     223:     /**
     224:      *  Replaces a string with another string.
     225:      *
```

### Data Flow Step 35: jspwiki-main/src/main/java/org/apache/wiki/plugin/WeblogPlugin.java, Line 226, Column 49
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/plugin/WeblogPlugin.java
```java
     221:             try {
     222:                 final Date d = fmt.parse( startDay );
     223:                 startTime.setTime( d );
     224:                 stopTime.setTime( d );
     225:             } catch( final ParseException e ) {
>>>  226:                 return "Illegal time format: "+ TextUtil.replaceEntities(startDay);
     227:             }
     228:         }
     229: 
     230:         //
     231:         //  Mark this to be a weblog
```

### Data Flow Step 36: jspwiki-main/src/main/java/org/apache/wiki/plugin/WeblogPlugin.java, Line 226, Column 24
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/plugin/WeblogPlugin.java
```java
     221:             try {
     222:                 final Date d = fmt.parse( startDay );
     223:                 startTime.setTime( d );
     224:                 stopTime.setTime( d );
     225:             } catch( final ParseException e ) {
>>>  226:                 return "Illegal time format: "+ TextUtil.replaceEntities(startDay);
     227:             }
     228:         }
     229: 
     230:         //
     231:         //  Mark this to be a weblog
```

### Data Flow Step 37: jspwiki-main/src/main/java/org/apache/wiki/plugin/DefaultPluginManager.java, Line 279, Column 24
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/plugin/DefaultPluginManager.java
```java
     274:                 return "Plugin '" + classname + "' not compatible with this version of JSPWiki";
     275:             }
     276: 
     277:             //  ...and launch.
     278:             try {
>>>  279:                 return plugin.execute( context, params );
     280:             } catch( final PluginException e ) {
     281:                 if( debug ) {
     282:                     return stackTrace( params, e );
     283:                 }
     284: 
```

### Data Flow Step 38: jspwiki-main/src/main/java/org/apache/wiki/parser/PluginContent.java, Line 169, Column 26
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/parser/PluginContent.java
```java
     164:                     String val = e.getValue();
     165:                     val = engine.getManager( VariableManager.class).expandVariables( context, val );
     166:                     parsedParams.put( e.getKey(), val );
     167:                 }
     168:                 final PluginManager pm = engine.getManager( PluginManager.class );
>>>  169:                 result = pm.execute( context, m_pluginName, parsedParams );
     170:             }
     171:         } catch( final Exception e ) {
     172:             if( wysiwygEditorMode ) {
     173:                 result = "";
     174:             } else {
```

### Data Flow Step 39: jspwiki-main/src/main/java/org/apache/wiki/parser/PluginContent.java, Line 184, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/parser/PluginContent.java
```java
     179:                 		                                               context.getRealPage().getName(),
     180:                 		                                               e.getMessage() ) ).getText();
     181:             }
     182:         }
     183: 
>>>  184:         return result;
     185: 	}
     186: 
     187:     /**{@inheritDoc}*/
     188:     @Override
     189:     public void executeParse( final Context context ) throws PluginException {
```

### Data Flow Step 40: jspwiki-main/src/main/java/org/apache/wiki/parser/PluginContent.java, Line 127, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/parser/PluginContent.java
```java
     122:         if( context == null ) {
     123:             LOG.info( "WikiContext garbage-collected, cannot proceed" );
     124:             return getPluginName();
     125:         }
     126: 
>>>  127:         return invoke( context );
     128:     }
     129: 
     130:     /**{@inheritDoc}*/
     131:     @Override
     132:     public String invoke( final Context context ) {
```

### Data Flow Step 41: jspwiki-main/src/main/java/org/apache/wiki/parser/PluginContent.java, Line 105, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/parser/PluginContent.java
```java
     100:     }
     101: 
     102:     /**{@inheritDoc}*/
     103:     @Override
     104:     public String getValue() {
>>>  105:         return getText();
     106:     }
     107: 
     108:     /**{@inheritDoc}*/
     109:     @Override
     110:     public String getText() {
```

### Data Flow Step 42: jspwiki-util/src/main/java/org/apache/wiki/util/XmlUtil.java, Line 129, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/XmlUtil.java
```java
     124: 		}
     125: 		final StringBuilder sb = new StringBuilder();
     126: 		final List< ? > nodes = XPathFactory.instance().compile( ALL_TEXT_NODES ).evaluate( doc );
     127: 		for( final Object el : nodes ) {
     128: 			if( el instanceof Text ) {
>>>  129: 				sb.append( ( ( Text )el ).getValue() );
     130: 			}
     131: 		}
     132: 
     133: 		return sb.toString();
     134: 	}
```

### Data Flow Step 43: jspwiki-util/src/main/java/org/apache/wiki/util/XmlUtil.java, Line 129, Column 5
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/XmlUtil.java
```java
     124: 		}
     125: 		final StringBuilder sb = new StringBuilder();
     126: 		final List< ? > nodes = XPathFactory.instance().compile( ALL_TEXT_NODES ).evaluate( doc );
     127: 		for( final Object el : nodes ) {
     128: 			if( el instanceof Text ) {
>>>  129: 				sb.append( ( ( Text )el ).getValue() );
     130: 			}
     131: 		}
     132: 
     133: 		return sb.toString();
     134: 	}
```

### Data Flow Step 44: jspwiki-util/src/main/java/org/apache/wiki/util/XmlUtil.java, Line 133, Column 10
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/XmlUtil.java
```java
     128: 			if( el instanceof Text ) {
     129: 				sb.append( ( ( Text )el ).getValue() );
     130: 			}
     131: 		}
     132: 
>>>  133: 		return sb.toString();
     134: 	}
     135: 
     136: 	public static Element getXPathElement( final Element base, final String expression ) {
     137: 		final List< ? > nodes = XPathFactory.instance().compile( expression ).evaluate( base );
     138: 		if( nodes == null || nodes.size() == 0 ) {
```

### Data Flow Step 45: jspwiki-util/src/main/java/org/apache/wiki/util/XmlUtil.java, Line 133, Column 10
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-util/src/main/java/org/apache/wiki/util/XmlUtil.java
```java
     128: 			if( el instanceof Text ) {
     129: 				sb.append( ( ( Text )el ).getValue() );
     130: 			}
     131: 		}
     132: 
>>>  133: 		return sb.toString();
     134: 	}
     135: 
     136: 	public static Element getXPathElement( final Element base, final String expression ) {
     137: 		final List< ? > nodes = XPathFactory.instance().compile( expression ).evaluate( base );
     138: 		if( nodes == null || nodes.size() == 0 ) {
```

### Data Flow Step 46: jspwiki-main/src/main/java/org/apache/wiki/render/CleanTextRenderer.java, Line 48, Column 34
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/render/CleanTextRenderer.java
```java
      43:     /**
      44:      *  {@inheritDoc}
      45:      */
      46:     @Override
      47:     public String getString() {
>>>   48:     	return m_document != null ? XmlUtil.extractTextFromDocument( m_document.getDocument() ) : "";
      49:     }
      50: 
      51: }
```

### Data Flow Step 47: jspwiki-main/src/main/java/org/apache/wiki/render/CleanTextRenderer.java, Line 48, Column 13
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/render/CleanTextRenderer.java
```java
      43:     /**
      44:      *  {@inheritDoc}
      45:      */
      46:     @Override
      47:     public String getString() {
>>>   48:     	return m_document != null ? XmlUtil.extractTextFromDocument( m_document.getDocument() ) : "";
      49:     }
      50: 
      51: }
```

### Data Flow Step 48: jspwiki-main/src/main/java/org/apache/wiki/render/DefaultRenderingManager.java, Line 248, Column 16
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/render/DefaultRenderingManager.java
```java
     243:             rend = getWysiwygRenderer( context, doc );
     244:         } else {
     245:             rend = getRenderer( context, doc );
     246:         }
     247: 
>>>  248:         return rend.getString();
     249:     }
     250: 
     251:     /**
     252:      *  {@inheritDoc}
     253:      */
```

### Data Flow Step 49: jspwiki-main/src/main/java/org/apache/wiki/tags/AuthorTag.java, Line 65, Column 26
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/tags/AuthorTag.java
```java
      60:             if( engine.getManager( PageManager.class ).wikiPageExists(author) && !( "plain".equalsIgnoreCase( m_format ) ) ) {
      61:                 // FIXME: It's very boring to have to do this.  Slow, too.
      62:                 final RenderingManager mgr = engine.getManager( RenderingManager.class );
      63:                 final MarkupParser p = mgr.getParser( m_wikiContext, "["+author+"|"+author+"]" );
      64:                 final WikiDocument d = p.parse();
>>>   65:                 author = mgr.getHTML( m_wikiContext, d );
      66:             }
      67: 
      68:             pageContext.getOut().print( author );
      69:         } else {
      70:             pageContext.getOut().print( Preferences.getBundle( m_wikiContext, InternationalizationManager.CORE_BUNDLE )
```

### Data Flow Step 50: jspwiki-main/src/main/java/org/apache/wiki/tags/AuthorTag.java, Line 68, Column 41
File: codeql-dbs/apache__jspwiki_CVE-2022-46907_2.11.3/root/cwe-bench-java/project-sources/apache__jspwiki_CVE-2022-46907_2.11.3/jspwiki-main/src/main/java/org/apache/wiki/tags/AuthorTag.java
```java
      63:                 final MarkupParser p = mgr.getParser( m_wikiContext, "["+author+"|"+author+"]" );
      64:                 final WikiDocument d = p.parse();
      65:                 author = mgr.getHTML( m_wikiContext, d );
      66:             }
      67: 
>>>   68:             pageContext.getOut().print( author );
      69:         } else {
      70:             pageContext.getOut().print( Preferences.getBundle( m_wikiContext, InternationalizationManager.CORE_BUNDLE )
      71:                                                    .getString( "common.unknownauthor" ) );
      72:         }
      73: 
```
