# Vulnerability: java/zipslip
## Message: Unsanitized archive entry, which may contain '..', is used in a [file system operation](1).
Unsanitized archive entry, which may contain '..', is used in a [file system operation](2).
Unsanitized archive entry, which may contain '..', is used in a [file system operation](3).
Unsanitized archive entry, which may contain '..', is used in a [file system operation](4).
Unsanitized archive entry, which may contain '..', is used in a [file system operation](5).
Unsanitized archive entry, which may contain '..', is used in a [file system operation](6).

## Code Flow 1

### Thread Flow 1

### Data Flow Step 1: src/main/java/org/zeroturnaround/zip/Zips.java, Line 676, Column 26
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/Zips.java
```java
     671:       this.entryByPath = ZipUtil.transformersByPath(entries);
     672:       visitedNames = new HashSet<String>();
     673:     }
     674: 
     675:     public void process(InputStream in, ZipEntry zipEntry) throws IOException {
>>>  676:       String entryName = zipEntry.getName();
     677: 
     678:       if (visitedNames.contains(entryName)) {
     679:         return;
     680:       }
     681:       visitedNames.add(entryName);
```

### Data Flow Step 2: src/main/java/org/zeroturnaround/zip/Zips.java, Line 690, Column 9
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/Zips.java
```java
     685:         FileUtils.forceMkdir(file);
     686:         return;
     687:       }
     688:       else {
     689:         FileUtils.forceMkdir(file.getParentFile());
>>>  690:         file.createNewFile();
     691:       }
     692: 
     693:       ZipEntryTransformer transformer = (ZipEntryTransformer) entryByPath.remove(entryName);
     694:       if (transformer == null) { // no transformer
     695:         FileUtils.copy(in, file);
```

## Code Flow 2

### Thread Flow 1

### Data Flow Step 1: src/main/java/org/zeroturnaround/zip/Zips.java, Line 676, Column 26
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/Zips.java
```java
     671:       this.entryByPath = ZipUtil.transformersByPath(entries);
     672:       visitedNames = new HashSet<String>();
     673:     }
     674: 
     675:     public void process(InputStream in, ZipEntry zipEntry) throws IOException {
>>>  676:       String entryName = zipEntry.getName();
     677: 
     678:       if (visitedNames.contains(entryName)) {
     679:         return;
     680:       }
     681:       visitedNames.add(entryName);
```

### Data Flow Step 2: src/main/java/org/zeroturnaround/zip/Zips.java, Line 695, Column 28
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/Zips.java
```java
     690:         file.createNewFile();
     691:       }
     692: 
     693:       ZipEntryTransformer transformer = (ZipEntryTransformer) entryByPath.remove(entryName);
     694:       if (transformer == null) { // no transformer
>>>  695:         FileUtils.copy(in, file);
     696:       }
     697:       else { // still transform entry
     698:         transformIntoFile(transformer, in, zipEntry, file);
     699:       }
     700:     }
```

### Data Flow Step 3: src/main/java/org/zeroturnaround/zip/commons/FileUtils.java, Line 53, Column 43
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/commons/FileUtils.java
```java
      48:    * @param in source stream.
      49:    * @param file output file to be created or overwritten.
      50:    *
      51:    * @throws java.io.IOException if file is not found or copying fails
      52:    */
>>>   53:   public static void copy(InputStream in, File file) throws IOException {
      54:     OutputStream out = new BufferedOutputStream(new FileOutputStream(file));
      55:     try {
      56:       IOUtils.copy(in, out);
      57:     }
      58:     finally {
```

### Data Flow Step 4: src/main/java/org/zeroturnaround/zip/commons/FileUtils.java, Line 54, Column 70
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/commons/FileUtils.java
```java
      49:    * @param file output file to be created or overwritten.
      50:    *
      51:    * @throws java.io.IOException if file is not found or copying fails
      52:    */
      53:   public static void copy(InputStream in, File file) throws IOException {
>>>   54:     OutputStream out = new BufferedOutputStream(new FileOutputStream(file));
      55:     try {
      56:       IOUtils.copy(in, out);
      57:     }
      58:     finally {
      59:       IOUtils.closeQuietly(out);
```

## Code Flow 3

### Thread Flow 1

### Data Flow Step 1: src/main/java/org/zeroturnaround/zip/Zips.java, Line 676, Column 26
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/Zips.java
```java
     671:       this.entryByPath = ZipUtil.transformersByPath(entries);
     672:       visitedNames = new HashSet<String>();
     673:     }
     674: 
     675:     public void process(InputStream in, ZipEntry zipEntry) throws IOException {
>>>  676:       String entryName = zipEntry.getName();
     677: 
     678:       if (visitedNames.contains(entryName)) {
     679:         return;
     680:       }
     681:       visitedNames.add(entryName);
```

### Data Flow Step 2: src/main/java/org/zeroturnaround/zip/Zips.java, Line 685, Column 30
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/Zips.java
```java
     680:       }
     681:       visitedNames.add(entryName);
     682: 
     683:       File file = new File(destination, entryName);
     684:       if (zipEntry.isDirectory()) {
>>>  685:         FileUtils.forceMkdir(file);
     686:         return;
     687:       }
     688:       else {
     689:         FileUtils.forceMkdir(file.getParentFile());
     690:         file.createNewFile();
```

### Data Flow Step 3: src/main/java/org/zeroturnaround/zip/commons/FileUtilsV2_2.java, Line 880, Column 33
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/commons/FileUtilsV2_2.java
```java
     875:    *
     876:    * @param directory  directory to create, must not be <code>null</code>
     877:    * @throws NullPointerException if the directory is <code>null</code>
     878:    * @throws IOException if the directory cannot be created or the file already exists but is not a directory
     879:    */
>>>  880:   public static void forceMkdir(File directory) throws IOException {
     881:     if (directory.exists()) {
     882:       if (!directory.isDirectory()) {
     883:         String message =
     884:             "File "
     885:                 + directory
```

### Data Flow Step 4: src/main/java/org/zeroturnaround/zip/commons/FileUtilsV2_2.java, Line 881, Column 9
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/commons/FileUtilsV2_2.java
```java
     876:    * @param directory  directory to create, must not be <code>null</code>
     877:    * @throws NullPointerException if the directory is <code>null</code>
     878:    * @throws IOException if the directory cannot be created or the file already exists but is not a directory
     879:    */
     880:   public static void forceMkdir(File directory) throws IOException {
>>>  881:     if (directory.exists()) {
     882:       if (!directory.isDirectory()) {
     883:         String message =
     884:             "File "
     885:                 + directory
     886:                 + " exists and is "
```

## Code Flow 4

### Thread Flow 1

### Data Flow Step 1: src/main/java/org/zeroturnaround/zip/Zips.java, Line 676, Column 26
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/Zips.java
```java
     671:       this.entryByPath = ZipUtil.transformersByPath(entries);
     672:       visitedNames = new HashSet<String>();
     673:     }
     674: 
     675:     public void process(InputStream in, ZipEntry zipEntry) throws IOException {
>>>  676:       String entryName = zipEntry.getName();
     677: 
     678:       if (visitedNames.contains(entryName)) {
     679:         return;
     680:       }
     681:       visitedNames.add(entryName);
```

### Data Flow Step 2: src/main/java/org/zeroturnaround/zip/Zips.java, Line 685, Column 30
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/Zips.java
```java
     680:       }
     681:       visitedNames.add(entryName);
     682: 
     683:       File file = new File(destination, entryName);
     684:       if (zipEntry.isDirectory()) {
>>>  685:         FileUtils.forceMkdir(file);
     686:         return;
     687:       }
     688:       else {
     689:         FileUtils.forceMkdir(file.getParentFile());
     690:         file.createNewFile();
```

### Data Flow Step 3: src/main/java/org/zeroturnaround/zip/commons/FileUtilsV2_2.java, Line 880, Column 33
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/commons/FileUtilsV2_2.java
```java
     875:    *
     876:    * @param directory  directory to create, must not be <code>null</code>
     877:    * @throws NullPointerException if the directory is <code>null</code>
     878:    * @throws IOException if the directory cannot be created or the file already exists but is not a directory
     879:    */
>>>  880:   public static void forceMkdir(File directory) throws IOException {
     881:     if (directory.exists()) {
     882:       if (!directory.isDirectory()) {
     883:         String message =
     884:             "File "
     885:                 + directory
```

### Data Flow Step 4: src/main/java/org/zeroturnaround/zip/commons/FileUtilsV2_2.java, Line 882, Column 12
File: codeql-dbs/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/root/cwe-bench-java/project-sources/zeroturnaround__zt-zip_CVE-2018-1002201_1.12/src/main/java/org/zeroturnaround/zip/commons/FileUtilsV2_2.java
```java
     877:    * @throws NullPointerException if the directory is <code>null</code>
     878:    * @throws IOException if the directory cannot be created or the file already exists but is not a directory
     879:    */
     880:   public static void forceMkdir(File directory) throws IOException {
     881:     if (directory.exists()) {
>>>  882:       if (!directory.isDirectory()) {
     883:         String message =
     884:             "File "
     885:                 + directory
     886:                 + " exists and is "
     887:                 + "not a directory. Unable to create directory.";
```
